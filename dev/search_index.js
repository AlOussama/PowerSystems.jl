var documenterSearchIndex = {"docs":
[{"location":"modeler/example_dynamic_data/#Creating-a-Dynamic-System","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"This tutorial briefly introduces how to create a system using PowerSystems.jl data structures. The tutorial will guide you to create the JSON data file for the tutorial 1. We start by calling PowerSystems.jl:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"using PowerSystems\nconst PSY = PowerSystems","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"The following describes the system creation for the OMIB case.","category":"page"},{"location":"modeler/example_dynamic_data/#Static-System-creation","page":"Creating a Dynamic System","title":"Static System creation","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"There are plenty of ways to define a static system (for Power Flow purposes), but the recommended option for users is to use a PTI data format (.raw file) or a Matpower data format (.m file), since parsers are available. The following OMIB.raw file is used to create the OMIB system:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"0, 100, 33, 0, 0, 60  / 24-Apr-2020 17:05:49 - MATPOWER 7.0.1-dev\n\n\n     101, 'BUS 1       ',       230, 3,    1,    1, 1,        1.05,           0, 1.06, 0.94, 1.06, 0.94\n     102, 'BUS 2       ',       230, 2,    1,    1, 1,        1.04,           0, 1.06, 0.94, 1.06, 0.94\n0 / END OF BUS DATA, BEGIN LOAD DATA\n0 / END OF LOAD DATA, BEGIN FIXED SHUNT DATA\n0 / END OF FIXED SHUNT DATA, BEGIN GENERATOR DATA\n     102,  1,        50,         0,       100,      -100,     1.00, 0,     100, 0, 1, 0, 0, 1, 1, 100,       100,         0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1\n0 / END OF GENERATOR DATA, BEGIN BRANCH DATA\n     101,      102, 1,    0.00,     0.05,   0.000,     100,     100,     100, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1\n0 / END OF BRANCH DATA, BEGIN TRANSFORMER DATA\n0 / END OF TRANSFORMER DATA, BEGIN AREA DATA\n0 / END OF AREA DATA, BEGIN TWO-TERMINAL DC DATA\n0 / END OF TWO-TERMINAL DC DATA, BEGIN VOLTAGE SOURCE CONVERTER DATA\n0 / END OF VOLTAGE SOURCE CONVERTER DATA, BEGIN IMPEDANCE CORRECTION DATA\n0 / END OF IMPEDANCE CORRECTION DATA, BEGIN MULTI-TERMINAL DC DATA\n0 / END OF MULTI-TERMINAL DC DATA, BEGIN MULTI-SECTION LINE DATA\n0 / END OF MULTI-SECTION LINE DATA, BEGIN ZONE DATA\n0 / END OF ZONE DATA, BEGIN INTER-AREA TRANSFER DATA\n0 / END OF INTER-AREA TRANSFER DATA, BEGIN OWNER DATA\n0 / END OF OWNER DATA, BEGIN FACTS CONTROL DEVICE DATA\n0 / END OF FACTS CONTROL DEVICE DATA, BEGIN SWITCHED SHUNT DATA\n0 / END OF SWITCHED SHUNT DATA, BEGIN GNE DEVICE DATA\n0 / END OF GNE DEVICE DATA, BEGIN INDUCTION MACHINE DATA\n0 / END OF INDUCTION MACHINE DATA\nQ","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Based on the description provided in PTI files, this is a two-bus system, on which the bus 101 (bus 1) is the reference bus at 1.05 pu, and bus 102 (bus 2) is PV bus, to be set at 1.04 pu. There is one 100 MVA generator connected at bus 2, producing 50 MW. There is an equivalent line connecting buses 1 and 2 with a reactance of 005 pu.","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"#To create the system you need to pass the location of the RAW file\nfile_dir = \"OMIB.raw\"\nomib_sys = System(omib_file_dir)","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Note that this system does not have an injection device in bus 1 (the reference bus). We can add a source with small impedance directly using a function like:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"function add_source_to_ref(sys::System)\n    for g in get_components(StaticInjection, sys)\n        isa(g, ElectricLoad) && continue\n        g.bus.bustype == BusTypes.REF &&\n            error(\"A device is already attached to the REF bus\")\n    end\n\n    slack_bus = [b for b in get_components(Bus, sys) if b.bustype == BusTypes.REF][1]\n    inf_source = Source(\n        name = \"InfBus\", #name\n        available = true, #availability\n        active_power = 0.0,\n        reactive_power = 0.0,\n        bus = slack_bus, #bus\n        R_th = 0.0, #Rth\n        X_th = 5e-6, #Xth\n    )\n    add_component!(sys, inf_source)\n    return\nend\n\nadd_source_to_ref(omib_sys)","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"This function attempts to add a infinite source with X_th = 5cdot 10^-6 pu if no other device is already attached to the reference bus.","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"The system can be explored directly using functions like:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"collect(get_components(Source, omib_sys))\ncollect(get_components(Generators, omib_sys))","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"By exploring those it can be seen that the generators are named as: generator-bus_number-id. Then, the generator attached at bus 2 is simply named generator-102-1.","category":"page"},{"location":"modeler/example_dynamic_data/#Dynamic-Injections","page":"Creating a Dynamic System","title":"Dynamic Injections","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"We are now interested in attaching to the system the dynamic component that will be modeling our dynamic generator. Later versions will include a parser for .dyr files.","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Dynamic generator devices are composed by 5 components, namely, machine, shaft, avr, tg and pss. So we will be adding functions to create all of its components and the generator itself:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"#Machine\nmachine_classic() = BaseMachine(\n    0.0, #R\n    0.2995, #Xd_p\n    0.7087, #eq_p\n)\n\n#Shaft\nshaft_damping() = SingleMass(\n    3.148, #H\n    2.0, #D\n)\n\n#AVR\navr_none() = AVRFixed(0.0)\n#TG\ntg_none() = TGFixed(1.0) #efficiency\n#PSS\npss_none() = PSSFixed(0.0)\n\nfunction dyn_gen_classic(generator)\n    return DynamicGenerator(\n        generator,\n        1.0, #Ï‰_ref\n        machine_classic(), #machine\n        shaft_damping(), #shaft\n        avr_none(), #avr\n        tg_none(), #tg\n        pss_none(), #pss\n    )\nend","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"The last function receives a static generator, and creates a DynamicGenerator based on that specific static generator, with the specific components defined previously. This is a classic machine model without AVR, Turbine Governor and PSS.","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Then we can simply create the dynamic generator as:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"#Collect the static gen in the system\nstatic_gen = get_component(Generator, omib_sys, \"generator-102-1\")\n#Creates the dynamic generator\ndyn_gen = dyn_gen_classic(static_gen)\n#Add the dynamic generator the system\nadd_component!(omib_sys, dyn_gen)","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Then we can simply export our system data such that it can be later read as:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"to_json(omib_sys, \"YOUR_DIR/omib_sys.json\")","category":"page"},{"location":"modeler/example_dynamic_data/#Dynamic-Lines-case:-Data-creation","page":"Creating a Dynamic System","title":"Dynamic Lines case: Data creation","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"We will now create a three bus system with one inverter and one generator. In order to do so, we will parse the following ThreebusInverter.raw network:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"0, 100, 33, 0, 0, 60  / 24-Apr-2020 19:28:39 - MATPOWER 7.0.1-dev\n\n\n     101, 'BUS 1       ',       138, 3,    1,    1, 1,           1.02,        0,  1.1,  0.9,  1.1,  0.9\n     102, 'BUS 2       ',       138, 2,    1,    1, 1,           1.0142,           0,  1.1,  0.9,  1.1,  0.9\n     103, 'BUS 3       ',       138, 2,    1,    1, 1,           1.0059,           0,  1.1,  0.9,  1.1,  0.9\n0 / END OF BUS DATA, BEGIN LOAD DATA\n     101,  1, 1,    1,    1,       50,       10, 0, 0, 0, 0, 1, 1, 0\n     102,  1, 1,    1,    1,       100,      30, 0, 0, 0, 0, 1, 1, 0\n     103,  1, 1,    1,    1,       30,       10, 0, 0, 0, 0, 1, 1, 0\n0 / END OF LOAD DATA, BEGIN FIXED SHUNT DATA\n0 / END OF FIXED SHUNT DATA, BEGIN GENERATOR DATA\n     102,  1,       70,         0,       100,      -100,   1.0142, 0,     100, 0, 1, 0, 0, 1, 1, 100,       318,         0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1\n     103,  1,       80,         0,       100,      -100,   1.0059, 0,     100, 0, 1, 0, 0, 1, 1, 100,       318,         0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1\n0 / END OF GENERATOR DATA, BEGIN BRANCH DATA\n     101,      103, 1,  0.01000,     0.12,      0.2,     250,     250,     250, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1\n     101,      102, 1,  0.01000,     0.12,      0.2,     250,     250,     250, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1\n     102,      103, 1,  0.02000,     0.9,      1.0,     250,     250,     250, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1\n0 / END OF BRANCH DATA, BEGIN TRANSFORMER DATA\n0 / END OF TRANSFORMER DATA, BEGIN AREA DATA\n0 / END OF AREA DATA, BEGIN TWO-TERMINAL DC DATA\n0 / END OF TWO-TERMINAL DC DATA, BEGIN VOLTAGE SOURCE CONVERTER DATA\n0 / END OF VOLTAGE SOURCE CONVERTER DATA, BEGIN IMPEDANCE CORRECTION DATA\n0 / END OF IMPEDANCE CORRECTION DATA, BEGIN MULTI-TERMINAL DC DATA\n0 / END OF MULTI-TERMINAL DC DATA, BEGIN MULTI-SECTION LINE DATA\n0 / END OF MULTI-SECTION LINE DATA, BEGIN ZONE DATA\n0 / END OF ZONE DATA, BEGIN INTER-AREA TRANSFER DATA\n0 / END OF INTER-AREA TRANSFER DATA, BEGIN OWNER DATA\n0 / END OF OWNER DATA, BEGIN FACTS CONTROL DEVICE DATA\n0 / END OF FACTS CONTROL DEVICE DATA, BEGIN SWITCHED SHUNT DATA\n0 / END OF SWITCHED SHUNT DATA, BEGIN GNE DEVICE DATA\n0 / END OF GNE DEVICE DATA, BEGIN INDUCTION MACHINE DATA\n0 / END OF INDUCTION MACHINE DATA\nQ","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"That describes a three bus connected system, with generators connected at bus 2 and 3, and loads in three buses. We can load the system and attach an infinite source on the reference bus:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"sys_file_dir = \"ThreeBusInverter.raw\")\nthreebus_sys = System(sys_file_dir)\nadd_source_to_ref(threebus_sys)","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"We will connect a One-d-one-q machine at bus 102, and a Virtual Synchronous Generator Inverter at bus 103. An inverter is composed by a converter, outer control, inner control, dc source, frequency estimator and a filter.","category":"page"},{"location":"modeler/example_dynamic_data/#Dynamic-Inverter-definition","page":"Creating a Dynamic System","title":"Dynamic Inverter definition","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"We will create specific functions to create the components of the inverter as follows:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"#Define converter as an AverageConverter\nconverter_high_power() = AverageConverter(rated_voltage = 138.0, rated_current = 100.0)\n\n#Define Outer Control as a composition of Virtual Inertia + Reactive Power Droop\nfunction outer_control()\n    function virtual_inertia()\n        return VirtualInertia(Ta = 2.0, kd = 400.0, kÏ‰ = 20.0)\n    end\n    function reactive_droop()\n        return ReactivePowerDroop(kq = 0.2, Ï‰f = 1000.0)\n    end\n    return OuterControl(virtual_inertia(), reactive_droop())\nend\n\n#Define an Inner Control as a Voltage+Current Controler with Virtual Impedance:\ninner_control() = CurrentControl(\n    kpv = 0.59,     #Voltage controller proportional gain\n    kiv = 736.0,    #Voltage controller integral gain\n    kffv = 0.0,     #Binary variable enabling the voltage feed-forward in output of current controllers\n    rv = 0.0,       #Virtual resistance in pu\n    lv = 0.2,       #Virtual inductance in pu\n    kpc = 1.27,     #Current controller proportional gain\n    kic = 14.3,     #Current controller integral gain\n    kffi = 0.0,     #Binary variable enabling the current feed-forward in output of current controllers\n    Ï‰ad = 50.0,     #Active damping low pass filter cut-off frequency\n    kad = 0.2,      #Active damping gain\n)\n\n#Define DC Source as a FixedSource:\ndc_source_lv() = FixedDCSource(voltage = 600.0)\n\n#Define a Frequency Estimator as a PLL based on Vikram Kaura and Vladimir Blaskoc 1997 paper:\npll() = KauraPLL(\n    Ï‰_lp = 500.0, #Cut-off frequency for LowPass filter of PLL filter.\n    kp_pll = 0.084,  #PLL proportional gain\n    ki_pll = 4.69,   #PLL integral gain\n)\n\n#Define an LCL filter:\nfilt() = LCLFilter(lf = 0.08, rf = 0.003, cf = 0.074, lg = 0.2, rg = 0.01)\n\n#Construct the Inverter:\nfunction inv_case78(static_device)\n    return DynamicInverter(\n        static_device,\n        1.0, # Ï‰_ref,\n        converter_high_power(), #converter\n        outer_control(), #outer control\n        inner_control(), #inner control voltage source\n        dc_source_lv(), #dc source\n        pll(), #pll\n        filt(), #filter\n    )\nend","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"The last function receives a static device, typically a generator, and defines a dynamic inverter based on the components already defined.","category":"page"},{"location":"modeler/example_dynamic_data/#Dynamic-Generator-definition","page":"Creating a Dynamic System","title":"Dynamic Generator definition","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"Similarly we will construct a dynamic generator as follows:","category":"page"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"#Create the machine\nmachine_oneDoneQ() = OneDOneQMachine(\n    0.0, #R\n    1.3125, #Xd\n    1.2578, #Xq\n    0.1813, #Xd_p\n    0.25, #Xq_p\n    5.89, #Td0_p\n    0.6, #Tq0_p\n)\n\n#Shaft\nshaft_no_damping() = SingleMass(\n    3.01, #H (M = 6.02 -> H = M/2)\n    0.0,\n) #D\n\n#AVR: Type I: Resembles a DC1 AVR\navr_type1() = AVRTypeI(\n    20.0, #Ka - Gain\n    0.01, #Ke\n    0.063, #Kf\n    0.2, #Ta\n    0.314, #Te\n    0.35, #Tf\n    0.001, #Tr\n    5.0, #Vrmax\n    -5.0, #Vrmin\n    0.0039, #Ae - 1st ceiling coefficient\n    1.555, #Be - 2nd ceiling coefficient\n)\n\n#No TG\ntg_none() = TGFixed(1.0) #efficiency\n\n#No PSS\npss_none() = PSSFixed(0.0) #Vs\n\n#Construct the generator\nfunction dyn_gen_second_order(generator)\n    return DynamicGenerator(\n        generator,\n        1.0, # Ï‰_ref,\n        machine_oneDoneQ(), #machine\n        shaft_no_damping(), #shaft\n        avr_type1(), #avr\n        tg_none(), #tg\n        pss_none(), #pss\n    )\nend","category":"page"},{"location":"modeler/example_dynamic_data/#Add-the-components-to-the-system","page":"Creating a Dynamic System","title":"Add the components to the system","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"for g in get_components(Generator, threebus_sys)\n    #Find the generator at bus 102\n    if get_number(get_bus(g)) == 102\n        #Create the dynamic generator\n        case_gen = dyn_gen_second_order(g)\n        #Attach the dynamic generator to the system\n        add_component!(threebus_sys, case_gen)\n    #Find the generator at bus 103\n    elseif get_number(get_bus(g)) == 103\n        #Create the dynamic inverter\n        case_inv = inv_case78(g)\n        #Attach the dynamic inverter to the system\n        add_component!(threebus_sys, case_inv)\n    end\nend","category":"page"},{"location":"modeler/example_dynamic_data/#Save-the-system-in-a-JSON-file","page":"Creating a Dynamic System","title":"Save the system in a JSON file","text":"","category":"section"},{"location":"modeler/example_dynamic_data/","page":"Creating a Dynamic System","title":"Creating a Dynamic System","text":"to_json(threebus_sys, \"YOUR_DIR/threebus_sys.json\")","category":"page"},{"location":"model_library/generated_Filter/#Filter","page":"Filter","title":"Filter","text":"","category":"section"},{"location":"model_library/generated_Filter/#LCFilter","page":"Filter","title":"LCFilter","text":"","category":"section"},{"location":"model_library/generated_Filter/","page":"Filter","title":"Filter","text":"Modules = [PowerSystems]\nPages   = [\"/LCFilter.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Filter/#PowerSystems.LCFilter","page":"Filter","title":"PowerSystems.LCFilter","text":"mutable struct LCFilter <: Filter\n    lf::Float64\n    rf::Float64\n    cf::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of a LCL filter outside the converter\n\nArguments\n\nlf::Float64: filter inductance, validation range: (0, nothing)\nrf::Float64: filter resistance, validation range: (0, nothing)\ncf::Float64: filter capacitance, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the LCFilter model are:\n\nir_filter: Real current out of the filter,\nii_filter: Imaginary current out of the filter\n\nn_states::Int: LCFilter has two states\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Filter/#PowerSystems.get_cf-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_cf","text":"get_cf(value::LCFilter) -> Float64\n\n\nGet LCFilter cf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_ext-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_ext","text":"get_ext(value::LCFilter) -> Dict{String,Any}\n\n\nGet LCFilter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_lf-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_lf","text":"get_lf(value::LCFilter) -> Float64\n\n\nGet LCFilter lf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_n_states-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_n_states","text":"get_n_states(value::LCFilter) -> Int64\n\n\nGet LCFilter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_rf-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_rf","text":"get_rf(value::LCFilter) -> Float64\n\n\nGet LCFilter rf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_states-Tuple{LCFilter}","page":"Filter","title":"PowerSystems.get_states","text":"get_states(value::LCFilter) -> Array{Symbol,1}\n\n\nGet LCFilter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_cf!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_cf!","text":"set_cf!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter cf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_ext!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_ext!","text":"set_ext!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_lf!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_lf!","text":"set_lf!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter lf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_n_states!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_rf!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_rf!","text":"set_rf!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter rf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_states!-Tuple{LCFilter,Any}","page":"Filter","title":"PowerSystems.set_states!","text":"set_states!(value::LCFilter, val::Any) -> Any\n\n\nSet LCFilter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#LCLFilter","page":"Filter","title":"LCLFilter","text":"","category":"section"},{"location":"model_library/generated_Filter/","page":"Filter","title":"Filter","text":"Modules = [PowerSystems]\nPages   = [\"/LCLFilter.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Filter/#PowerSystems.LCLFilter","page":"Filter","title":"PowerSystems.LCLFilter","text":"mutable struct LCLFilter <: Filter\n    lf::Float64\n    rf::Float64\n    cf::Float64\n    lg::Float64\n    rg::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of a LCL filter outside the converter, the states are in the grid's reference frame\n\nArguments\n\nlf::Float64: Series inductance in p.u. of converter filter, validation range: (0, nothing)\nrf::Float64: Series resistance in p.u. of converter filter, validation range: (0, nothing)\ncf::Float64: Shunt capacitance in p.u. of converter filter, validation range: (0, nothing)\nlg::Float64: Series inductance in p.u. of converter filter to the grid, validation range: (0, nothing)\nrg::Float64: Series resistance in p.u. of converter filter to the grid, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the LCLFilter model are:\n\nir_cnv: Real current out of the converter,\nii_cnv: Imaginary current out of the converter,\nvr_filter: Real voltage at the filter's capacitor,\nvi_filter: Imaginary voltage at the filter's capacitor,\nir_filter: Real current out of the filter,\nii_filter: Imaginary current out of the filter\n\nn_states::Int: LCLFilter has 6 states\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Filter/#PowerSystems.get_cf-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_cf","text":"get_cf(value::LCLFilter) -> Float64\n\n\nGet LCLFilter cf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_ext-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_ext","text":"get_ext(value::LCLFilter) -> Dict{String,Any}\n\n\nGet LCLFilter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_lf-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_lf","text":"get_lf(value::LCLFilter) -> Float64\n\n\nGet LCLFilter lf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_lg-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_lg","text":"get_lg(value::LCLFilter) -> Float64\n\n\nGet LCLFilter lg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_n_states-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_n_states","text":"get_n_states(value::LCLFilter) -> Int64\n\n\nGet LCLFilter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_rf-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_rf","text":"get_rf(value::LCLFilter) -> Float64\n\n\nGet LCLFilter rf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_rg-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_rg","text":"get_rg(value::LCLFilter) -> Float64\n\n\nGet LCLFilter rg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.get_states-Tuple{LCLFilter}","page":"Filter","title":"PowerSystems.get_states","text":"get_states(value::LCLFilter) -> Array{Symbol,1}\n\n\nGet LCLFilter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_cf!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_cf!","text":"set_cf!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter cf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_ext!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_ext!","text":"set_ext!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_lf!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_lf!","text":"set_lf!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter lf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_lg!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_lg!","text":"set_lg!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter lg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_n_states!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_rf!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_rf!","text":"set_rf!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter rf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_rg!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_rg!","text":"set_rg!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter rg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Filter/#PowerSystems.set_states!-Tuple{LCLFilter,Any}","page":"Filter","title":"PowerSystems.set_states!","text":"set_states!(value::LCLFilter, val::Any) -> Any\n\n\nSet LCLFilter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#Machine","page":"Machine","title":"Machine","text":"","category":"section"},{"location":"model_library/generated_Machine/#AndersonFouadMachine","page":"Machine","title":"AndersonFouadMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/AndersonFouadMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.AndersonFouadMachine","page":"Machine","title":"PowerSystems.AndersonFouadMachine","text":"mutable struct AndersonFouadMachine <: Machine\n    R::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Xd_pp::Float64\n    Xq_pp::Float64\n    Td0_p::Float64\n    Tq0_p::Float64\n    Td0_pp::Float64\n    Tq0_pp::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 6-states synchronous machine: Anderson-Fouad model\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_pp::Float64: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nÏˆq: q-axis stator flux,\nÏˆd: d-axis stator flux,\neq_p: q-axis transient voltage,\ned_p: d-axis transient voltage,\neq_pp: q-axis subtransient voltage,\ned_pp: d-axis subtransient voltage\n\nn_states::Int: AndersonFouadMachine has 6 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_pp-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_Xq_pp","text":"get_Xq_pp(value::AndersonFouadMachine) -> Float64\n\n\nGet AndersonFouadMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::AndersonFouadMachine) -> Dict{String,Any}\n\n\nGet AndersonFouadMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::AndersonFouadMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AndersonFouadMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::AndersonFouadMachine) -> Int64\n\n\nGet AndersonFouadMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{AndersonFouadMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::AndersonFouadMachine) -> Array{Symbol,1}\n\n\nGet AndersonFouadMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_pp!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_pp!","text":"set_Xq_pp!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{AndersonFouadMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::AndersonFouadMachine, val::Any) -> Any\n\n\nSet AndersonFouadMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#BaseMachine","page":"Machine","title":"BaseMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/BaseMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.BaseMachine","page":"Machine","title":"PowerSystems.BaseMachine","text":"mutable struct BaseMachine <: Machine\n    R::Float64\n    Xd_p::Float64\n    eq_p::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a Classic Machine: GENCLS in PSSE and PSLF\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd_p::Float64: Reactance after EMF in machine per unit, validation range: (0, nothing)\neq_p::Float64: Fixed EMF behind the impedance, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: BaseMachine has no states\nn_states::Int: BaseMachine has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::BaseMachine) -> Float64\n\n\nGet BaseMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::BaseMachine) -> Float64\n\n\nGet BaseMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_eq_p-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_eq_p","text":"get_eq_p(value::BaseMachine) -> Float64\n\n\nGet BaseMachine eq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::BaseMachine) -> Dict{String,Any}\n\n\nGet BaseMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::BaseMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet BaseMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::BaseMachine) -> Int64\n\n\nGet BaseMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{BaseMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::BaseMachine) -> Array{Symbol,1}\n\n\nGet BaseMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_eq_p!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_eq_p!","text":"set_eq_p!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine eq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{BaseMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::BaseMachine, val::Any) -> Any\n\n\nSet BaseMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#FullMachine","page":"Machine","title":"FullMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/FullMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.FullMachine","page":"Machine","title":"PowerSystems.FullMachine","text":"mutable struct FullMachine <: Machine\n    R::Float64\n    R_f::Float64\n    R_1d::Float64\n    R_1q::Float64\n    L_d::Float64\n    L_q::Float64\n    L_ad::Float64\n    L_aq::Float64\n    L_f1d::Float64\n    L_ff::Float64\n    L_1d::Float64\n    L_1q::Float64\n    ext::Dict{String, Any}\n    inv_d_fluxlink::Array{Float64,2}\n    inv_q_fluxlink::Array{Float64,2}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameter of a full order flux stator-rotor model without zero sequence flux in the stator.  The derivative of stator fluxes (Ïˆd and Ïˆq) is NOT neglected. Only one q-axis damping circuit is considered. All parameters are in machine per unit.  Refer to Chapter 3 of Power System Stability and Control by P. Kundur or Chapter 11 of Power System Dynamics: Stability and Control, by J. Machowski, J. Bialek and J. Bumby, for more details.  Note that the models are somewhat different (but equivalent) due to the different Park Transformation used in both books.\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nR_f::Float64: Field rotor winding resistance in per unit, validation range: (0, nothing)\nR_1d::Float64:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: (0, nothing)\nR_1q::Float64: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: (0, nothing)\nL_d::Float64: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as Lad + Ll in Kundur (and Ld in Machowski)., validation range: (0, nothing)\nL_q::Float64: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as Laq + Ll in Kundur., validation range: (0, nothing)\nL_ad::Float64: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: (0, nothing)\nL_aq::Float64: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: (0, nothing)\nL_f1d::Float64: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: (0, nothing)\nL_ff::Float64: Field rotor winding inductance, in per unit, validation range: (0, nothing)\nL_1d::Float64: Inductance of the d-axis rotor damping circuit, in per unit, validation range: (0, nothing)\nL_1q::Float64: Inductance of the q-axis rotor damping circuit, in per unit, validation range: (0, nothing)\next::Dict{String, Any}\ninv_d_fluxlink::Array{Float64,2}: Equations 3.127, 3.130, 3.131 From Kundur\ninv_q_fluxlink::Array{Float64,2}: Equations 3.128, 3.132 From Kundur\nstates::Vector{Symbol}: The states are:\n\nÏˆd: d-axis stator flux,\nÏˆq: q-axis stator flux,\nÏˆf: field rotor flux,\nÏˆ1d: d-axis rotor damping flux,\nÏˆ1q: q-axis rotor damping flux\n\nn_states::Int: FullMachine has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_1d-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_1d","text":"get_L_1d(value::FullMachine) -> Float64\n\n\nGet FullMachine L_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_1q-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_1q","text":"get_L_1q(value::FullMachine) -> Float64\n\n\nGet FullMachine L_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_ad-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_ad","text":"get_L_ad(value::FullMachine) -> Float64\n\n\nGet FullMachine L_ad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_aq-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_aq","text":"get_L_aq(value::FullMachine) -> Float64\n\n\nGet FullMachine L_aq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_d-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_d","text":"get_L_d(value::FullMachine) -> Float64\n\n\nGet FullMachine L_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_f1d-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_f1d","text":"get_L_f1d(value::FullMachine) -> Float64\n\n\nGet FullMachine L_f1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_ff-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_ff","text":"get_L_ff(value::FullMachine) -> Float64\n\n\nGet FullMachine L_ff.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_q-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_L_q","text":"get_L_q(value::FullMachine) -> Float64\n\n\nGet FullMachine L_q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::FullMachine) -> Float64\n\n\nGet FullMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_1d-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_R_1d","text":"get_R_1d(value::FullMachine) -> Float64\n\n\nGet FullMachine R_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_1q-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_R_1q","text":"get_R_1q(value::FullMachine) -> Float64\n\n\nGet FullMachine R_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_f-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_R_f","text":"get_R_f(value::FullMachine) -> Float64\n\n\nGet FullMachine R_f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::FullMachine) -> Dict{String,Any}\n\n\nGet FullMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::FullMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet FullMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_inv_d_fluxlink-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_inv_d_fluxlink","text":"get_inv_d_fluxlink(value::FullMachine) -> Array{Float64,2}\n\n\nGet FullMachine inv_d_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_inv_q_fluxlink-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_inv_q_fluxlink","text":"get_inv_q_fluxlink(value::FullMachine) -> Array{Float64,2}\n\n\nGet FullMachine inv_q_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::FullMachine) -> Int64\n\n\nGet FullMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{FullMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::FullMachine) -> Array{Symbol,1}\n\n\nGet FullMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_1d!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_1d!","text":"set_L_1d!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_1q!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_1q!","text":"set_L_1q!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_ad!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_ad!","text":"set_L_ad!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_ad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_aq!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_aq!","text":"set_L_aq!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_aq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_d!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_d!","text":"set_L_d!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_f1d!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_f1d!","text":"set_L_f1d!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_f1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_ff!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_ff!","text":"set_L_ff!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_ff.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_q!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_q!","text":"set_L_q!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine L_q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_1d!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_1d!","text":"set_R_1d!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine R_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_1q!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_1q!","text":"set_R_1q!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine R_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_f!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_f!","text":"set_R_f!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine R_f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_inv_d_fluxlink!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_inv_d_fluxlink!","text":"set_inv_d_fluxlink!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine inv_d_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_inv_q_fluxlink!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_inv_q_fluxlink!","text":"set_inv_q_fluxlink!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine inv_q_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{FullMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::FullMachine, val::Any) -> Any\n\n\nSet FullMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#MarconatoMachine","page":"Machine","title":"MarconatoMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/MarconatoMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.MarconatoMachine","page":"Machine","title":"PowerSystems.MarconatoMachine","text":"mutable struct MarconatoMachine <: Machine\n    R::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Xd_pp::Float64\n    Xq_pp::Float64\n    Td0_p::Float64\n    Tq0_p::Float64\n    Td0_pp::Float64\n    Tq0_pp::Float64\n    T_AA::Float64\n    ext::Dict{String, Any}\n    Î³d::Float64\n    Î³q::Float64\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 6-states synchronous machine: Marconato model\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_pp::Float64: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\nT_AA::Float64: Time constant of d-axis additional leakage, validation range: (0, nothing)\next::Dict{String, Any}\nÎ³d::Float64\nÎ³q::Float64\nstates::Vector{Symbol}: The states are:\n\nÏˆq: q-axis stator flux,\nÏˆd: d-axis stator flux,\neq_p: q-axis transient voltage,\ned_p: d-axis transient voltage,\neq_pp: q-axis subtransient voltage,\ned_pp: d-axis subtransient voltage\n\nn_states::Int: MarconatoMachine has 6 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_T_AA-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_T_AA","text":"get_T_AA(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine T_AA.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_pp-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq_pp","text":"get_Xq_pp(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::MarconatoMachine) -> Dict{String,Any}\n\n\nGet MarconatoMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::MarconatoMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet MarconatoMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::MarconatoMachine) -> Int64\n\n\nGet MarconatoMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::MarconatoMachine) -> Array{Symbol,1}\n\n\nGet MarconatoMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³d-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Î³d","text":"get_Î³d(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Î³d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³q-Tuple{MarconatoMachine}","page":"Machine","title":"PowerSystems.get_Î³q","text":"get_Î³q(value::MarconatoMachine) -> Float64\n\n\nGet MarconatoMachine Î³q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_T_AA!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_T_AA!","text":"set_T_AA!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine T_AA.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_pp!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_pp!","text":"set_Xq_pp!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³d!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³d!","text":"set_Î³d!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Î³d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³q!-Tuple{MarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³q!","text":"set_Î³q!(value::MarconatoMachine, val::Any) -> Any\n\n\nSet MarconatoMachine Î³q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#OneDOneQMachine","page":"Machine","title":"OneDOneQMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/OneDOneQMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.OneDOneQMachine","page":"Machine","title":"PowerSystems.OneDOneQMachine","text":"mutable struct OneDOneQMachine <: Machine\n    R::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Td0_p::Float64\n    Tq0_p::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 4-states synchronous machine: Simplified Marconato model  The derivative of stator fluxes (Ïˆd and Ïˆq) is neglected and Ï‰Ïˆd = Ïˆd and  Ï‰Ïˆq = Ïˆq is assumed (i.e. Ï‰=1.0). This is standard when  transmission network dynamics is neglected.\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\neq_p: q-axis transient voltage,\ned_p: d-axis transient voltage\n\nn_states::Int: OneDOneQMachine has 2 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::OneDOneQMachine) -> Float64\n\n\nGet OneDOneQMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::OneDOneQMachine) -> Dict{String,Any}\n\n\nGet OneDOneQMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::OneDOneQMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet OneDOneQMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::OneDOneQMachine) -> Int64\n\n\nGet OneDOneQMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{OneDOneQMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::OneDOneQMachine) -> Array{Symbol,1}\n\n\nGet OneDOneQMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{OneDOneQMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::OneDOneQMachine, val::Any) -> Any\n\n\nSet OneDOneQMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#RoundRotorExponential","page":"Machine","title":"RoundRotorExponential","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/RoundRotorExponential.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.RoundRotorExponential","page":"Machine","title":"PowerSystems.RoundRotorExponential","text":"mutable struct RoundRotorExponential <: Machine\n    base_machine::RoundRotorMachine\n    saturation_coeffs::Tuple{Float64, Float64}\n\n4-states round-rotor synchronous machine with exponential saturation: IEEE Std 1110 Â§5.3.2 (Model 2.2). GENROE model in PSSE and PSLF.\n\nArguments\n\nbase_machine::RoundRotorMachine: Round Rotor Machine model.\nsaturation_coeffs::Tuple{Float64, Float64}`: Saturation coefficients for exponential model.\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#RoundRotorMachine","page":"Machine","title":"RoundRotorMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/RoundRotorMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.RoundRotorMachine","page":"Machine","title":"PowerSystems.RoundRotorMachine","text":"mutable struct RoundRotorMachine <: Machine\n    R::Float64\n    Td0_p::Float64\n    Td0_pp::Float64\n    Tq0_p::Float64\n    Tq0_pp::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Xd_pp::Float64\n    Xl::Float64\n    Se::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    Î³_d1::Float64\n    Î³_q1::Float64\n    Î³_d2::Float64\n    Î³_q2::Float64\n    Î³_qd::Float64\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 4-states round-rotor synchronous machine with quadratic/exponential saturation: IEEE Std 1110 Â§5.3.2 (Model 2.2). GENROU or GENROE model in PSSE and PSLF.\n\nArguments\n\nR::Float64: Armature resistance, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit. Note: Xdpp = Xqpp, validation range: (0, nothing)\nXl::Float64: Stator leakage reactance, validation range: (0, nothing)\nSe::Tuple{Float64, Float64}: Saturation factor at 1 and 1.2 pu flux: S(1.0) = B(|Ïˆ_pp|-A)^2\next::Dict{String, Any}\nÎ³_d1::Float64: Î³_d1 parameter\nÎ³_q1::Float64: Î³_q1 parameter\nÎ³_d2::Float64: Î³_d2 parameter\nÎ³_q2::Float64: Î³_q2 parameter\nÎ³_qd::Float64: Î³_qd parameter\nstates::Vector{Symbol}: The states are:\n\neq_p: q-axis generator voltage behind the transient reactance,\ned_p: d-axis generator voltage behind the transient reactance,\nÏˆ_kd: flux linkage in the first equivalent damping circuit in the d-axis,\nÏˆ_kq: flux linkage in the first equivalent damping circuit in the d-axis\n\nn_states::Int: RoundRotorMachine has 4 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Se-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Se","text":"get_Se(value::RoundRotorMachine) -> Tuple{Float64,Float64}\n\n\nGet RoundRotorMachine Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xl-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xl","text":"get_Xl(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::RoundRotorMachine) -> Dict{String,Any}\n\n\nGet RoundRotorMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::RoundRotorMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet RoundRotorMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::RoundRotorMachine) -> Int64\n\n\nGet RoundRotorMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::RoundRotorMachine) -> Array{Symbol,1}\n\n\nGet RoundRotorMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_d1-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Î³_d1","text":"get_Î³_d1(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Î³_d1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_d2-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Î³_d2","text":"get_Î³_d2(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Î³_d2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_q1-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Î³_q1","text":"get_Î³_q1(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Î³_q1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_q2-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Î³_q2","text":"get_Î³_q2(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Î³_q2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_qd-Tuple{RoundRotorMachine}","page":"Machine","title":"PowerSystems.get_Î³_qd","text":"get_Î³_qd(value::RoundRotorMachine) -> Float64\n\n\nGet RoundRotorMachine Î³_qd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Se!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Se!","text":"set_Se!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xl!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xl!","text":"set_Xl!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_d1!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_d1!","text":"set_Î³_d1!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Î³_d1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_d2!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_d2!","text":"set_Î³_d2!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Î³_d2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_q1!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_q1!","text":"set_Î³_q1!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Î³_q1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_q2!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_q2!","text":"set_Î³_q2!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Î³_q2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_qd!-Tuple{RoundRotorMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_qd!","text":"set_Î³_qd!(value::RoundRotorMachine, val::Any) -> Any\n\n\nSet RoundRotorMachine Î³_qd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#RoundRotorQuadratic","page":"Machine","title":"RoundRotorQuadratic","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/RoundRotorQuadratic.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.RoundRotorQuadratic","page":"Machine","title":"PowerSystems.RoundRotorQuadratic","text":"mutable struct RoundRotorQuadratic <: Machine\n    base_machine::RoundRotorMachine\n    saturation_coeffs::Tuple{Float64, Float64}\n\n4-states round-rotor synchronous machine with quadratic saturation: IEEE Std 1110 Â§5.3.2 (Model 2.2). GENROU model in PSSE and PSLF.\n\nArguments\n\nbase_machine::RoundRotorMachine: Round Rotor Machine model.\nsaturation_coeffs::Tuple{Float64, Float64}`: Saturation coefficients for quadratic model.\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#SalientPoleExponential","page":"Machine","title":"SalientPoleExponential","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SalientPoleExponential.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SalientPoleExponential","page":"Machine","title":"PowerSystems.SalientPoleExponential","text":"mutable struct SalientPoleExponential <: Machine\n    base_machine::SalientPoleMachine\n    saturation_coeffs::Tuple{Float64, Float64}\n\n3-states salient-pole synchronous machine with exponential saturation: IEEE Std 1110 Â§5.3.2 (Model 2.1). GENSAE in PSSE and PSLF.\n\nArguments:\n\nbase_machine::SalientPoleMachine: Salient Pole Machine model.\nsaturation_coeffs::Tuple{Float64, Float64}`: Saturation coefficients for exponential model.\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#SalientPoleMachine","page":"Machine","title":"SalientPoleMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SalientPoleMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SalientPoleMachine","page":"Machine","title":"PowerSystems.SalientPoleMachine","text":"mutable struct SalientPoleMachine <: Machine\n    R::Float64\n    Td0_p::Float64\n    Td0_pp::Float64\n    Tq0_pp::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xd_pp::Float64\n    Xl::Float64\n    Se::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    Î³_d1::Float64\n    Î³_q1::Float64\n    Î³_d2::Float64\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 3-states salient-pole synchronous machine with quadratic/exponential saturation: IEEE Std 1110 Â§5.3.1 (Model 2.1). GENSAL or GENSAE model in PSSE and PSLF.\n\nArguments\n\nR::Float64: Armature resistance, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit. Note: Xdpp = Xqpp, validation range: (0, nothing)\nXl::Float64: Stator leakage reactance, validation range: (0, nothing)\nSe::Tuple{Float64, Float64}: Saturation factor at 1 and 1.2 pu flux: Se(eqp) = B(eqp-A)^2\next::Dict{String, Any}\nÎ³_d1::Float64: Î³_d1 parameter\nÎ³_q1::Float64: Î³_q1 parameter\nÎ³_d2::Float64: Î³_d2 parameter\nstates::Vector{Symbol}: The states are:\n\neq_p: q-axis generator voltage behind the transient reactance,\nÏˆ_kd: flux linkage in the first equivalent damping circuit in the d-axis,\nÏˆq_pp: phasonf of the subtransient flux linkage in the q-axis\n\nn_states::Int: SalientPoleMachine has 3 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Se-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Se","text":"get_Se(value::SalientPoleMachine) -> Tuple{Float64,Float64}\n\n\nGet SalientPoleMachine Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xl-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Xl","text":"get_Xl(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::SalientPoleMachine) -> Dict{String,Any}\n\n\nGet SalientPoleMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::SalientPoleMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SalientPoleMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::SalientPoleMachine) -> Int64\n\n\nGet SalientPoleMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::SalientPoleMachine) -> Array{Symbol,1}\n\n\nGet SalientPoleMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_d1-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Î³_d1","text":"get_Î³_d1(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Î³_d1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_d2-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Î³_d2","text":"get_Î³_d2(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Î³_d2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³_q1-Tuple{SalientPoleMachine}","page":"Machine","title":"PowerSystems.get_Î³_q1","text":"get_Î³_q1(value::SalientPoleMachine) -> Float64\n\n\nGet SalientPoleMachine Î³_q1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Se!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Se!","text":"set_Se!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xl!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Xl!","text":"set_Xl!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_d1!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_d1!","text":"set_Î³_d1!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Î³_d1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_d2!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_d2!","text":"set_Î³_d2!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Î³_d2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³_q1!-Tuple{SalientPoleMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³_q1!","text":"set_Î³_q1!(value::SalientPoleMachine, val::Any) -> Any\n\n\nSet SalientPoleMachine Î³_q1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#SalientPoleQuadratic","page":"Machine","title":"SalientPoleQuadratic","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SalientPoleQuadratic.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SalientPoleQuadratic","page":"Machine","title":"PowerSystems.SalientPoleQuadratic","text":"mutable struct SalientPoleQuadratic <: Machine\n    base_machine::SalientPoleMachine\n    saturation_coeffs::Tuple{Float64, Float64}\n\n3-states salient-pole synchronous machine with exponential saturation: IEEE Std 1110 Â§5.3.2 (Model 2.1). GENSAL in PSSE and PSLF.\n\nArguments:\n\nbase_machine::SalientPoleMachine: Salient Pole Machine model.\nsaturation_coeffs::Tuple{Float64, Float64}`: Saturation coefficients for quadratic model.\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#SimpleAFMachine","page":"Machine","title":"SimpleAFMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SimpleAFMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SimpleAFMachine","page":"Machine","title":"PowerSystems.SimpleAFMachine","text":"mutable struct SimpleAFMachine <: Machine\n    R::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Xd_pp::Float64\n    Xq_pp::Float64\n    Td0_p::Float64\n    Tq0_p::Float64\n    Td0_pp::Float64\n    Tq0_pp::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 4-states simplified Anderson-Fouad (SimpleAFMachine) model.  The derivative of stator fluxes (Ïˆd and Ïˆq) is neglected and Ï‰Ïˆd = Ïˆd and  Ï‰Ïˆq = Ïˆq is assumed (i.e. Ï‰=1.0). This is standard when transmission network  dynamics is neglected.  If transmission dynamics is considered use the full order Anderson Fouad model.\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_pp::Float64: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\neq_p: q-axis transient voltage,\ned_p: d-axis transient voltage,\neq_pp: q-axis subtransient voltage,\ned_pp: d-axis subtransient voltage\n\nn_states::Int: SimpleAFMachine has 4 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_pp-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_Xq_pp","text":"get_Xq_pp(value::SimpleAFMachine) -> Float64\n\n\nGet SimpleAFMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::SimpleAFMachine) -> Dict{String,Any}\n\n\nGet SimpleAFMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::SimpleAFMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SimpleAFMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::SimpleAFMachine) -> Int64\n\n\nGet SimpleAFMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{SimpleAFMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::SimpleAFMachine) -> Array{Symbol,1}\n\n\nGet SimpleAFMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_pp!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_pp!","text":"set_Xq_pp!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{SimpleAFMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::SimpleAFMachine, val::Any) -> Any\n\n\nSet SimpleAFMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#SimpleFullMachine","page":"Machine","title":"SimpleFullMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SimpleFullMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SimpleFullMachine","page":"Machine","title":"PowerSystems.SimpleFullMachine","text":"mutable struct SimpleFullMachine <: Machine\n    R::Float64\n    R_f::Float64\n    R_1d::Float64\n    R_1q::Float64\n    L_d::Float64\n    L_q::Float64\n    L_ad::Float64\n    L_aq::Float64\n    L_f1d::Float64\n    L_ff::Float64\n    L_1d::Float64\n    L_1q::Float64\n    ext::Dict{String, Any}\n    inv_d_fluxlink::Array{Float64,2}\n    inv_q_fluxlink::Array{Float64,2}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameter of a full order flux stator-rotor model without zero sequence flux in the stator.  The derivative of stator fluxes (Ïˆd and Ïˆq) is neglected. This is standard when  transmission network dynamics is neglected. Only one q-axis damping circuit  is considered. All per unit are in machine per unit.  Refer to Chapter 3 of Power System Stability and Control by P. Kundur or Chapter 11 of Power System Dynamics: Stability and Control, by J. Machowski, J. Bialek and J. Bumby, for more details.  Note that the models are somewhat different (but equivalent) due to the different Park Transformation used in both books.\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nR_f::Float64: Field rotor winding resistance in per unit, validation range: (0, nothing)\nR_1d::Float64:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: (0, nothing)\nR_1q::Float64: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: (0, nothing)\nL_d::Float64: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as Lad + Ll in Kundur (and Ld in Machowski)., validation range: (0, nothing)\nL_q::Float64: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as Laq + Ll in Kundur., validation range: (0, nothing)\nL_ad::Float64: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: (0, nothing)\nL_aq::Float64: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: (0, nothing)\nL_f1d::Float64: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: (0, nothing)\nL_ff::Float64: Field rotor winding inductance, in per unit, validation range: (0, nothing)\nL_1d::Float64: Inductance of the d-axis rotor damping circuit, in per unit, validation range: (0, nothing)\nL_1q::Float64: Inductance of the q-axis rotor damping circuit, in per unit, validation range: (0, nothing)\next::Dict{String, Any}\ninv_d_fluxlink::Array{Float64,2}: Equations 3.127, 3.130, 3.131 From Kundur\ninv_q_fluxlink::Array{Float64,2}: Equations 3.128, 3.132 From Kundur\nstates::Vector{Symbol}: The states are:\n\nÏˆf: field rotor flux,\nÏˆ1d: d-axis rotor damping flux,\nÏˆ1q: q-axis rotor damping flux\n\nn_states::Int: SimpleFullMachine has 3 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_1d-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_1d","text":"get_L_1d(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_1q-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_1q","text":"get_L_1q(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_ad-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_ad","text":"get_L_ad(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_ad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_aq-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_aq","text":"get_L_aq(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_aq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_d-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_d","text":"get_L_d(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_f1d-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_f1d","text":"get_L_f1d(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_f1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_ff-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_ff","text":"get_L_ff(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_ff.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_L_q-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_L_q","text":"get_L_q(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine L_q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_1d-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_R_1d","text":"get_R_1d(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine R_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_1q-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_R_1q","text":"get_R_1q(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine R_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_R_f-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_R_f","text":"get_R_f(value::SimpleFullMachine) -> Float64\n\n\nGet SimpleFullMachine R_f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::SimpleFullMachine) -> Dict{String,Any}\n\n\nGet SimpleFullMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::SimpleFullMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SimpleFullMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_inv_d_fluxlink-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_inv_d_fluxlink","text":"get_inv_d_fluxlink(value::SimpleFullMachine) -> Array{Float64,2}\n\n\nGet SimpleFullMachine inv_d_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_inv_q_fluxlink-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_inv_q_fluxlink","text":"get_inv_q_fluxlink(value::SimpleFullMachine) -> Array{Float64,2}\n\n\nGet SimpleFullMachine inv_q_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::SimpleFullMachine) -> Int64\n\n\nGet SimpleFullMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{SimpleFullMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::SimpleFullMachine) -> Array{Symbol,1}\n\n\nGet SimpleFullMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_1d!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_1d!","text":"set_L_1d!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_1q!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_1q!","text":"set_L_1q!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_ad!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_ad!","text":"set_L_ad!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_ad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_aq!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_aq!","text":"set_L_aq!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_aq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_d!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_d!","text":"set_L_d!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_f1d!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_f1d!","text":"set_L_f1d!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_f1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_ff!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_ff!","text":"set_L_ff!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_ff.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_L_q!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_L_q!","text":"set_L_q!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine L_q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_1d!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_1d!","text":"set_R_1d!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine R_1d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_1q!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_1q!","text":"set_R_1q!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine R_1q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R_f!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_R_f!","text":"set_R_f!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine R_f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_inv_d_fluxlink!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_inv_d_fluxlink!","text":"set_inv_d_fluxlink!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine inv_d_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_inv_q_fluxlink!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_inv_q_fluxlink!","text":"set_inv_q_fluxlink!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine inv_q_fluxlink.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{SimpleFullMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::SimpleFullMachine, val::Any) -> Any\n\n\nSet SimpleFullMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#SimpleMarconatoMachine","page":"Machine","title":"SimpleMarconatoMachine","text":"","category":"section"},{"location":"model_library/generated_Machine/","page":"Machine","title":"Machine","text":"Modules = [PowerSystems]\nPages   = [\"/SimpleMarconatoMachine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Machine/#PowerSystems.SimpleMarconatoMachine","page":"Machine","title":"PowerSystems.SimpleMarconatoMachine","text":"mutable struct SimpleMarconatoMachine <: Machine\n    R::Float64\n    Xd::Float64\n    Xq::Float64\n    Xd_p::Float64\n    Xq_p::Float64\n    Xd_pp::Float64\n    Xq_pp::Float64\n    Td0_p::Float64\n    Tq0_p::Float64\n    Td0_pp::Float64\n    Tq0_pp::Float64\n    T_AA::Float64\n    ext::Dict{String, Any}\n    Î³d::Float64\n    Î³q::Float64\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 4-states synchronous machine: Simplified Marconato model  The derivative of stator fluxes (Ïˆd and Ïˆq) is neglected and Ï‰Ïˆd = Ïˆd and  Ï‰Ïˆq = Ïˆq is assumed (i.e. Ï‰=1.0). This is standard when transmission network  dynamics is neglected.\n\nArguments\n\nR::Float64: Resistance after EMF in machine per unit, validation range: (0, nothing)\nXd::Float64: Reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq::Float64: Reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_p::Float64: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_p::Float64: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nXd_pp::Float64: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)\nXq_pp::Float64: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)\nTd0_p::Float64: Time constant of transient d-axis voltage, validation range: (0, nothing)\nTq0_p::Float64: Time constant of transient q-axis voltage, validation range: (0, nothing)\nTd0_pp::Float64: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)\nTq0_pp::Float64: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)\nT_AA::Float64: Time constant of d-axis additional leakage, validation range: (0, nothing)\next::Dict{String, Any}\nÎ³d::Float64\nÎ³q::Float64\nstates::Vector{Symbol}: The states are:\n\neq_p: q-axis transient voltage,\ned_p: d-axis transient voltage,\neq_pp: q-axis subtransient voltage,\ned_pp: d-axis subtransient voltage\n\nn_states::Int: SimpleMarconatoMachine has 4 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Machine/#PowerSystems.get_R-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_R","text":"get_R(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_T_AA-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_T_AA","text":"get_T_AA(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine T_AA.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_p-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Td0_p","text":"get_Td0_p(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Td0_pp-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Td0_pp","text":"get_Td0_pp(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_p-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Tq0_p","text":"get_Tq0_p(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Tq0_pp-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Tq0_pp","text":"get_Tq0_pp(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd","text":"get_Xd(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_p-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd_p","text":"get_Xd_p(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xd_pp-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xd_pp","text":"get_Xd_pp(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq","text":"get_Xq(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_p-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq_p","text":"get_Xq_p(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Xq_pp-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Xq_pp","text":"get_Xq_pp(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_ext-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_ext","text":"get_ext(value::SimpleMarconatoMachine) -> Dict{String,Any}\n\n\nGet SimpleMarconatoMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_internal-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_internal","text":"get_internal(value::SimpleMarconatoMachine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SimpleMarconatoMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_n_states-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_n_states","text":"get_n_states(value::SimpleMarconatoMachine) -> Int64\n\n\nGet SimpleMarconatoMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_states-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_states","text":"get_states(value::SimpleMarconatoMachine) -> Array{Symbol,1}\n\n\nGet SimpleMarconatoMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³d-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Î³d","text":"get_Î³d(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Î³d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.get_Î³q-Tuple{SimpleMarconatoMachine}","page":"Machine","title":"PowerSystems.get_Î³q","text":"get_Î³q(value::SimpleMarconatoMachine) -> Float64\n\n\nGet SimpleMarconatoMachine Î³q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_R!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_R!","text":"set_R!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_T_AA!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_T_AA!","text":"set_T_AA!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine T_AA.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_p!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_p!","text":"set_Td0_p!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Td0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Td0_pp!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Td0_pp!","text":"set_Td0_pp!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Td0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_p!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_p!","text":"set_Tq0_p!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Tq0_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Tq0_pp!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Tq0_pp!","text":"set_Tq0_pp!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Tq0_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd!","text":"set_Xd!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_p!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_p!","text":"set_Xd_p!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xd_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xd_pp!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xd_pp!","text":"set_Xd_pp!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xd_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq!","text":"set_Xq!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_p!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_p!","text":"set_Xq_p!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xq_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Xq_pp!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Xq_pp!","text":"set_Xq_pp!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Xq_pp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_ext!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_ext!","text":"set_ext!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_internal!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_internal!","text":"set_internal!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_n_states!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_states!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_states!","text":"set_states!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³d!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³d!","text":"set_Î³d!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Î³d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Machine/#PowerSystems.set_Î³q!-Tuple{SimpleMarconatoMachine,Any}","page":"Machine","title":"PowerSystems.set_Î³q!","text":"set_Î³q!(value::SimpleMarconatoMachine, val::Any) -> Any\n\n\nSet SimpleMarconatoMachine Î³q.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#InterruptibleLoad","page":"InterruptibleLoad","title":"InterruptibleLoad","text":"","category":"section"},{"location":"model_library/generated_InterruptibleLoad/","page":"InterruptibleLoad","title":"InterruptibleLoad","text":"Modules = [PowerSystems]\nPages   = [\"generated/InterruptibleLoad.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.InterruptibleLoad","page":"InterruptibleLoad","title":"PowerSystems.InterruptibleLoad","text":"mutable struct InterruptibleLoad <: ControllableLoad\n    name::String\n    available::Bool\n    bus::Bus\n    model::LoadModels.LoadModel\n    active_power::Float64\n    reactive_power::Float64\n    max_active_power::Float64\n    max_reactive_power::Float64\n    base_power::Float64\n    operation_cost::TwoPartCost\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nmodel::LoadModels.LoadModel\nactive_power::Float64\nreactive_power::Float64\nmax_active_power::Float64\nmax_reactive_power::Float64\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\noperation_cost::TwoPartCost: Operation Cost of Generation TwoPartCost\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_active_power-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_active_power","text":"get_active_power(value::InterruptibleLoad) -> Any\n\n\nGet InterruptibleLoad active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_available-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_available","text":"get_available(value::InterruptibleLoad) -> Bool\n\n\nGet InterruptibleLoad available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_base_power-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_base_power","text":"get_base_power(value::InterruptibleLoad) -> Float64\n\n\nGet InterruptibleLoad base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_bus-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_bus","text":"get_bus(value::InterruptibleLoad) -> Bus\n\n\nGet InterruptibleLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_dynamic_injector-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::InterruptibleLoad) -> Union{Nothing, DynamicInjection}\n\n\nGet InterruptibleLoad dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_ext-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_ext","text":"get_ext(value::InterruptibleLoad) -> Dict{String,Any}\n\n\nGet InterruptibleLoad ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_internal-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_internal","text":"get_internal(value::InterruptibleLoad) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet InterruptibleLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_max_active_power-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_max_active_power","text":"get_max_active_power(value::InterruptibleLoad) -> Any\n\n\nGet InterruptibleLoad max_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_max_reactive_power-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_max_reactive_power","text":"get_max_reactive_power(value::InterruptibleLoad) -> Any\n\n\nGet InterruptibleLoad max_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_model-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_model","text":"get_model(value::InterruptibleLoad) -> PowerSystems.LoadModels.LoadModel\n\n\nGet InterruptibleLoad model.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_operation_cost-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::InterruptibleLoad) -> TwoPartCost\n\n\nGet InterruptibleLoad operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_reactive_power-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::InterruptibleLoad) -> Any\n\n\nGet InterruptibleLoad reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.get_services-Tuple{InterruptibleLoad}","page":"InterruptibleLoad","title":"PowerSystems.get_services","text":"get_services(value::InterruptibleLoad) -> Array{Service,1}\n\n\nGet InterruptibleLoad services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_active_power!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_available!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_available!","text":"set_available!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_base_power!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_bus!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_bus!","text":"set_bus!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_ext!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_ext!","text":"set_ext!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_internal!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_internal!","text":"set_internal!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_max_active_power!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_max_active_power!","text":"set_max_active_power!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad max_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_max_reactive_power!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_max_reactive_power!","text":"set_max_reactive_power!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad max_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_model!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_model!","text":"set_model!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad model.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_operation_cost!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_reactive_power!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InterruptibleLoad/#PowerSystems.set_services!-Tuple{InterruptibleLoad,Any}","page":"InterruptibleLoad","title":"PowerSystems.set_services!","text":"set_services!(value::InterruptibleLoad, val::Any) -> Any\n\n\nSet InterruptibleLoad services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PSS","page":"PSS","title":"PSS","text":"","category":"section"},{"location":"model_library/generated_PSS/#IEEEST","page":"PSS","title":"IEEEST","text":"","category":"section"},{"location":"model_library/generated_PSS/","page":"PSS","title":"PSS","text":"Modules = [PowerSystems]\nPages   = [\"/IEEEST.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_PSS/#PowerSystems.IEEEST","page":"PSS","title":"PowerSystems.IEEEST","text":"mutable struct IEEEST <: PSS\n    input_code::Int\n    remote_bus_control::Int\n    A1::Float64\n    A2::Float64\n    A3::Float64\n    A4::Float64\n    A5::Float64\n    A6::Float64\n    T1::Float64\n    T2::Float64\n    T3::Float64\n    T4::Float64\n    T5::Float64\n    T6::Float64\n    Ks::Float64\n    Ls_lim::Tuple{Float64, Float64}\n    Vcu::Float64\n    Vcl::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nIEEE Stabilizing Model PSS. \n\nArguments\n\ninput_code::Int: Code input for stabilizar, validation range: (1, 6), action if invalid: error\nremote_bus_control::Int: Remote  Bus number for control.\nA1::Float64: Filter coefficient, validation range: (0, nothing), action if invalid: warn\nA2::Float64: Filter coefficient, validation range: (0, nothing), action if invalid: warn\nA3::Float64: Filter coefficient, validation range: (0, nothing)\nA4::Float64: Filter coefficient, validation range: (0, nothing), action if invalid: warn\nA5::Float64: Filter coefficient, validation range: (0, nothing), action if invalid: warn\nA6::Float64: Filter coefficient, validation range: (0, nothing), action if invalid: warn\nT1::Float64: Time constant, validation range: (0, 10), action if invalid: warn\nT2::Float64: Time constant, validation range: (0, 10), action if invalid: warn\nT3::Float64: Time constant, validation range: (0, 10), action if invalid: warn\nT4::Float64: Time constant, validation range: (0, 10), action if invalid: warn\nT5::Float64: Time constant, validation range: (0, 10), action if invalid: warn\nT6::Float64: Time constant, validation range: (\"eps()\", \"2.0\"), action if invalid: error\nKs::Float64: Proportional gain, validation range: (0, nothing), action if invalid: warn\nLs_lim::Tuple{Float64, Float64}: PSS output limits for regulator output (Ls_min, Ls_max)\nVcu::Float64: Cutoff limiter upper bound, validation range: (0, \"1.25\"), action if invalid: warn\nVcl::Float64: Cutoff limiter lower bound, validation range: (0, \"1.0\"), action if invalid: warn\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nx_p1: 1st filter integration,\nx_p2: 2nd filter integration, \nx_p3: 3rd filter integration, \nx_p4: 4rd filter integration, \nx_p5: T1/T2 lead-lag integrator, \nx_p6: T3/T4 lead-lag integrator, \n:x_p7 last integer,\n\nn_states::Int: IEEEST has 7 states\nstates_types::Vector{StateTypes.StateType}: IEEEST has 7 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_PSS/#PowerSystems.get_A1-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A1","text":"get_A1(value::IEEEST) -> Float64\n\n\nGet IEEEST A1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_A2-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A2","text":"get_A2(value::IEEEST) -> Float64\n\n\nGet IEEEST A2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_A3-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A3","text":"get_A3(value::IEEEST) -> Float64\n\n\nGet IEEEST A3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_A4-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A4","text":"get_A4(value::IEEEST) -> Float64\n\n\nGet IEEEST A4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_A5-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A5","text":"get_A5(value::IEEEST) -> Float64\n\n\nGet IEEEST A5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_A6-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_A6","text":"get_A6(value::IEEEST) -> Float64\n\n\nGet IEEEST A6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_Ks-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_Ks","text":"get_Ks(value::IEEEST) -> Float64\n\n\nGet IEEEST Ks.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_Ls_lim-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_Ls_lim","text":"get_Ls_lim(value::IEEEST) -> Tuple{Float64,Float64}\n\n\nGet IEEEST Ls_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T1-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T1","text":"get_T1(value::IEEEST) -> Float64\n\n\nGet IEEEST T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T2-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T2","text":"get_T2(value::IEEEST) -> Float64\n\n\nGet IEEEST T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T3-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T3","text":"get_T3(value::IEEEST) -> Float64\n\n\nGet IEEEST T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T4-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T4","text":"get_T4(value::IEEEST) -> Float64\n\n\nGet IEEEST T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T5-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T5","text":"get_T5(value::IEEEST) -> Float64\n\n\nGet IEEEST T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_T6-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_T6","text":"get_T6(value::IEEEST) -> Float64\n\n\nGet IEEEST T6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_Vcl-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_Vcl","text":"get_Vcl(value::IEEEST) -> Float64\n\n\nGet IEEEST Vcl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_Vcu-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_Vcu","text":"get_Vcu(value::IEEEST) -> Float64\n\n\nGet IEEEST Vcu.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_ext-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_ext","text":"get_ext(value::IEEEST) -> Dict{String,Any}\n\n\nGet IEEEST ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_input_code-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_input_code","text":"get_input_code(value::IEEEST) -> Int64\n\n\nGet IEEEST input_code.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_internal-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_internal","text":"get_internal(value::IEEEST) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet IEEEST internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_n_states-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_n_states","text":"get_n_states(value::IEEEST) -> Int64\n\n\nGet IEEEST n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_remote_bus_control-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_remote_bus_control","text":"get_remote_bus_control(value::IEEEST) -> Int64\n\n\nGet IEEEST remote_bus_control.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_states-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_states","text":"get_states(value::IEEEST) -> Array{Symbol,1}\n\n\nGet IEEEST states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_states_types-Tuple{IEEEST}","page":"PSS","title":"PowerSystems.get_states_types","text":"get_states_types(value::IEEEST) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet IEEEST states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A1!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A1!","text":"set_A1!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A2!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A2!","text":"set_A2!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A3!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A3!","text":"set_A3!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A4!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A4!","text":"set_A4!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A5!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A5!","text":"set_A5!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_A6!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_A6!","text":"set_A6!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST A6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_Ks!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_Ks!","text":"set_Ks!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST Ks.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_Ls_lim!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_Ls_lim!","text":"set_Ls_lim!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST Ls_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T1!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T1!","text":"set_T1!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T2!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T2!","text":"set_T2!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T3!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T3!","text":"set_T3!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T4!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T4!","text":"set_T4!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T5!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T5!","text":"set_T5!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_T6!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_T6!","text":"set_T6!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST T6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_Vcl!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_Vcl!","text":"set_Vcl!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST Vcl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_Vcu!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_Vcu!","text":"set_Vcu!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST Vcu.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_ext!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_ext!","text":"set_ext!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_input_code!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_input_code!","text":"set_input_code!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST input_code.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_internal!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_internal!","text":"set_internal!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_n_states!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_remote_bus_control!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_remote_bus_control!","text":"set_remote_bus_control!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST remote_bus_control.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_states!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_states!","text":"set_states!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_states_types!-Tuple{IEEEST,Any}","page":"PSS","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::IEEEST, val::Any) -> Any\n\n\nSet IEEEST states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PSSFixed","page":"PSS","title":"PSSFixed","text":"","category":"section"},{"location":"model_library/generated_PSS/","page":"PSS","title":"PSS","text":"Modules = [PowerSystems]\nPages   = [\"/PSSFixed.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_PSS/#PowerSystems.PSSFixed","page":"PSS","title":"PowerSystems.PSSFixed","text":"mutable struct PSSFixed <: PSS\n    V_pss::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a PSS that returns a fixed voltage to add to the reference for the AVR\n\nArguments\n\nV_pss::Float64: Fixed voltage stabilization signal, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}\nn_states::Int: PSSFixed has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_PSS/#PowerSystems.get_V_pss-Tuple{PSSFixed}","page":"PSS","title":"PowerSystems.get_V_pss","text":"get_V_pss(value::PSSFixed) -> Float64\n\n\nGet PSSFixed V_pss.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_ext-Tuple{PSSFixed}","page":"PSS","title":"PowerSystems.get_ext","text":"get_ext(value::PSSFixed) -> Dict{String,Any}\n\n\nGet PSSFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_internal-Tuple{PSSFixed}","page":"PSS","title":"PowerSystems.get_internal","text":"get_internal(value::PSSFixed) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet PSSFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_n_states-Tuple{PSSFixed}","page":"PSS","title":"PowerSystems.get_n_states","text":"get_n_states(value::PSSFixed) -> Int64\n\n\nGet PSSFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_states-Tuple{PSSFixed}","page":"PSS","title":"PowerSystems.get_states","text":"get_states(value::PSSFixed) -> Array{Symbol,1}\n\n\nGet PSSFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_V_pss!-Tuple{PSSFixed,Any}","page":"PSS","title":"PowerSystems.set_V_pss!","text":"set_V_pss!(value::PSSFixed, val::Any) -> Any\n\n\nSet PSSFixed V_pss.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_ext!-Tuple{PSSFixed,Any}","page":"PSS","title":"PowerSystems.set_ext!","text":"set_ext!(value::PSSFixed, val::Any) -> Any\n\n\nSet PSSFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_internal!-Tuple{PSSFixed,Any}","page":"PSS","title":"PowerSystems.set_internal!","text":"set_internal!(value::PSSFixed, val::Any) -> Any\n\n\nSet PSSFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_n_states!-Tuple{PSSFixed,Any}","page":"PSS","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::PSSFixed, val::Any) -> Any\n\n\nSet PSSFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_states!-Tuple{PSSFixed,Any}","page":"PSS","title":"PowerSystems.set_states!","text":"set_states!(value::PSSFixed, val::Any) -> Any\n\n\nSet PSSFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PSSSimple","page":"PSS","title":"PSSSimple","text":"","category":"section"},{"location":"model_library/generated_PSS/","page":"PSS","title":"PSS","text":"Modules = [PowerSystems]\nPages   = [\"/PSSSimple.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_PSS/#PowerSystems.PSSSimple","page":"PSS","title":"PowerSystems.PSSSimple","text":"mutable struct PSSSimple <: PSS\n    K_Ï‰::Float64\n    K_p::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a PSS that returns a proportional droop voltage to add to the reference for the AVR\n\nArguments\n\nK_Ï‰::Float64: Proportional gain for frequency, validation range: (0, nothing)\nK_p::Float64: Proportional gain for active power, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}\nn_states::Int: PSSSimple has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_PSS/#PowerSystems.get_K_p-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_K_p","text":"get_K_p(value::PSSSimple) -> Float64\n\n\nGet PSSSimple K_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_K_Ï‰-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_K_Ï‰","text":"get_K_Ï‰(value::PSSSimple) -> Float64\n\n\nGet PSSSimple K_Ï‰.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_ext-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_ext","text":"get_ext(value::PSSSimple) -> Dict{String,Any}\n\n\nGet PSSSimple ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_internal-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_internal","text":"get_internal(value::PSSSimple) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet PSSSimple internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_n_states-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_n_states","text":"get_n_states(value::PSSSimple) -> Int64\n\n\nGet PSSSimple n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.get_states-Tuple{PSSSimple}","page":"PSS","title":"PowerSystems.get_states","text":"get_states(value::PSSSimple) -> Array{Symbol,1}\n\n\nGet PSSSimple states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_K_p!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_K_p!","text":"set_K_p!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple K_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_K_Ï‰!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_K_Ï‰!","text":"set_K_Ï‰!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple K_Ï‰.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_ext!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_ext!","text":"set_ext!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_internal!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_internal!","text":"set_internal!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_n_states!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PSS/#PowerSystems.set_states!-Tuple{PSSSimple,Any}","page":"PSS","title":"PowerSystems.set_states!","text":"set_states!(value::PSSSimple, val::Any) -> Any\n\n\nSet PSSSimple states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#LoadZone","page":"LoadZone","title":"LoadZone","text":"","category":"section"},{"location":"model_library/generated_LoadZone/","page":"LoadZone","title":"LoadZone","text":"Modules = [PowerSystems]\nPages   = [\"generated/LoadZone.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_LoadZone/#PowerSystems.LoadZone","page":"LoadZone","title":"PowerSystems.LoadZone","text":"mutable struct LoadZone <: AggregationTopology\n    name::String\n    peak_active_power::Float64\n    peak_reactive_power::Float64\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nA collection of buses for electricity price analysis.\n\nArguments\n\nname::String\npeak_active_power::Float64\npeak_reactive_power::Float64\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_LoadZone/#PowerSystems.get_internal-Tuple{LoadZone}","page":"LoadZone","title":"PowerSystems.get_internal","text":"get_internal(value::LoadZone) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet LoadZone internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#PowerSystems.get_peak_active_power-Tuple{LoadZone}","page":"LoadZone","title":"PowerSystems.get_peak_active_power","text":"get_peak_active_power(value::LoadZone) -> Float64\n\n\nGet LoadZone peak_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#PowerSystems.get_peak_reactive_power-Tuple{LoadZone}","page":"LoadZone","title":"PowerSystems.get_peak_reactive_power","text":"get_peak_reactive_power(value::LoadZone) -> Float64\n\n\nGet LoadZone peak_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#PowerSystems.set_internal!-Tuple{LoadZone,Any}","page":"LoadZone","title":"PowerSystems.set_internal!","text":"set_internal!(value::LoadZone, val::Any) -> Any\n\n\nSet LoadZone internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#PowerSystems.set_peak_active_power!-Tuple{LoadZone,Any}","page":"LoadZone","title":"PowerSystems.set_peak_active_power!","text":"set_peak_active_power!(value::LoadZone, val::Any) -> Any\n\n\nSet LoadZone peak_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_LoadZone/#PowerSystems.set_peak_reactive_power!-Tuple{LoadZone,Any}","page":"LoadZone","title":"PowerSystems.set_peak_reactive_power!","text":"set_peak_reactive_power!(value::LoadZone, val::Any) -> Any\n\n\nSet LoadZone peak_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#Dynamic-Branch","page":"Dynamic Lines","title":"Dynamic Branch","text":"","category":"section"},{"location":"model_library/dynamic_branch/","page":"Dynamic Lines","title":"Dynamic Lines","text":"Modules = [PowerSystems]\nPages   = [\"models/dynamic_branch.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/dynamic_branch/#PowerSystems.DynamicBranch","page":"Dynamic Lines","title":"PowerSystems.DynamicBranch","text":"Extends the branch type to add the information required for dynamic modeling of branches. Includes the fields for the states and the number of states\n\nArguments\n\nbranch::ACBranch\n\n\n\n\n\n","category":"type"},{"location":"model_library/dynamic_branch/#PowerSystems.get_active_power_flow-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::DynamicBranch)\n\n\nGet DynamicBranch activepowerflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_angle_limits-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_angle_limits","text":"get_angle_limits(value::DynamicBranch) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet DynamicBranch angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_arc-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_arc","text":"get_arc(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_available-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_available","text":"get_available(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_b-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_b","text":"get_b(value::DynamicBranch) -> NamedTuple{(:from, :to),Tuple{Float64,Float64}}\n\n\nGet DynamicBranch b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_ext-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_ext","text":"get_ext(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_internal-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_internal","text":"get_internal(value::DynamicBranch) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet DynamicBranch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_n_states-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_n_states","text":"get_n_states(value::DynamicBranch) -> Int64\n\n\nGet n_states\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_r-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_r","text":"get_r(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_rate-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_rate","text":"get_rate(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_reactive_power_flow-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::DynamicBranch)\n\n\nGet DynamicBranch reactivepowerflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_services-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_services","text":"get_services(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_states-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_states","text":"get_states(value::DynamicBranch) -> Array{Symbol,1}\n\n\nGet states\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.get_x-Tuple{DynamicBranch}","page":"Dynamic Lines","title":"PowerSystems.get_x","text":"get_x(value::DynamicBranch) -> Any\n\n\nGet DynamicBranch x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_active_power_flow!-Tuple{DynamicBranch,Float64}","page":"Dynamic Lines","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::DynamicBranch, val::Float64) -> Any\n\n\nSet DynamicBranch activepowerflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_angle_limits!-Tuple{DynamicBranch,NamedTuple{(:min, :max),Tuple{Float64,Float64}}}","page":"Dynamic Lines","title":"PowerSystems.set_angle_limits!","text":"set_angle_limits!(value::DynamicBranch, val::NamedTuple{(:min, :max),Tuple{Float64,Float64}}) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nSet DynamicBranch angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_arc!-Tuple{DynamicBranch,Arc}","page":"Dynamic Lines","title":"PowerSystems.set_arc!","text":"set_arc!(value::DynamicBranch, val::Arc) -> Any\n\n\nSet DynamicBranch arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_available!-Tuple{DynamicBranch,Bool}","page":"Dynamic Lines","title":"PowerSystems.set_available!","text":"set_available!(value::DynamicBranch, val::Bool) -> Any\n\n\nSet DynamicBranch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_b!-Tuple{DynamicBranch,Any}","page":"Dynamic Lines","title":"PowerSystems.set_b!","text":"set_b!(value::DynamicBranch, val::Any) -> Any\n\n\nSet DynamicBranch b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_ext!-Tuple{DynamicBranch,Dict{String,Any}}","page":"Dynamic Lines","title":"PowerSystems.set_ext!","text":"set_ext!(value::DynamicBranch, val::Dict{String,Any}) -> Any\n\n\nSet DynamicBranch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_internal!-Tuple{DynamicBranch,InfrastructureSystems.InfrastructureSystemsInternal}","page":"Dynamic Lines","title":"PowerSystems.set_internal!","text":"set_internal!(value::DynamicBranch, val::InfrastructureSystems.InfrastructureSystemsInternal) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nSet DynamicBranch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_n_states!-Tuple{DynamicBranch,Int64}","page":"Dynamic Lines","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::DynamicBranch, val::Int64) -> Int64\n\n\nSet n_states\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_r!-Tuple{DynamicBranch,Float64}","page":"Dynamic Lines","title":"PowerSystems.set_r!","text":"set_r!(value::DynamicBranch, val::Float64) -> Any\n\n\nSet DynamicBranch r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_rate!-Tuple{DynamicBranch,Float64}","page":"Dynamic Lines","title":"PowerSystems.set_rate!","text":"set_rate!(value::DynamicBranch, val::Float64) -> Any\n\n\nSet DynamicBranch rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_reactive_power_flow!-Tuple{DynamicBranch,Float64}","page":"Dynamic Lines","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::DynamicBranch, val::Float64) -> Any\n\n\nSet DynamicBranch reactivepowerflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_services!-Tuple{DynamicBranch,Array{Service,1}}","page":"Dynamic Lines","title":"PowerSystems.set_services!","text":"set_services!(value::DynamicBranch, val::Array{Service,1}) -> Any\n\n\nSet DynamicBranch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_states!-Tuple{DynamicBranch,Array{Symbol,1}}","page":"Dynamic Lines","title":"PowerSystems.set_states!","text":"set_states!(value::DynamicBranch, val::Array{Symbol,1}) -> Array{Symbol,1}\n\n\nSet states\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_branch/#PowerSystems.set_x!-Tuple{DynamicBranch,Float64}","page":"Dynamic Lines","title":"PowerSystems.set_x!","text":"set_x!(value::DynamicBranch, val::Float64) -> Any\n\n\nSet DynamicBranch x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#StaticReserveNonSpinning","page":"StaticReserveNonSpinning","title":"StaticReserveNonSpinning","text":"","category":"section"},{"location":"model_library/generated_StaticReserveNonSpinning/","page":"StaticReserveNonSpinning","title":"StaticReserveNonSpinning","text":"Modules = [PowerSystems]\nPages   = [\"generated/StaticReserveNonSpinning.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.StaticReserveNonSpinning","page":"StaticReserveNonSpinning","title":"PowerSystems.StaticReserveNonSpinning","text":"mutable struct StaticReserveNonSpinning <: ReserveNonSpinning\n    name::String\n    available::Bool\n    time_frame::Float64\n    requirement::Float64\n    ext::Dict{String, Any}\n    operation_cost::Union{Nothing, TwoPartCost}\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for a non-spinning reserve product for system simulations.\n\nArguments\n\nname::String\navailable::Bool\ntime_frame::Float64: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error\nrequirement::Float64: the static value of required reserves in system p.u., validation range: (0, nothing), action if invalid: error\next::Dict{String, Any}\noperation_cost::Union{Nothing, TwoPartCost}: Cost for providing reserves  TwoPartCost\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_available-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_available","text":"get_available(value::StaticReserveNonSpinning) -> Bool\n\n\nGet StaticReserveNonSpinning available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_ext-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_ext","text":"get_ext(value::StaticReserveNonSpinning) -> Dict{String,Any}\n\n\nGet StaticReserveNonSpinning ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_internal-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_internal","text":"get_internal(value::StaticReserveNonSpinning) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet StaticReserveNonSpinning internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_operation_cost-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::StaticReserveNonSpinning) -> Union{Nothing, TwoPartCost}\n\n\nGet StaticReserveNonSpinning operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_requirement-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_requirement","text":"get_requirement(value::StaticReserveNonSpinning) -> Float64\n\n\nGet StaticReserveNonSpinning requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.get_time_frame-Tuple{StaticReserveNonSpinning}","page":"StaticReserveNonSpinning","title":"PowerSystems.get_time_frame","text":"get_time_frame(value::StaticReserveNonSpinning) -> Float64\n\n\nGet StaticReserveNonSpinning time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_available!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_available!","text":"set_available!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_ext!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_ext!","text":"set_ext!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_internal!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_internal!","text":"set_internal!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_operation_cost!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_requirement!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_StaticReserveNonSpinning/#PowerSystems.set_time_frame!-Tuple{StaticReserveNonSpinning,Any}","page":"StaticReserveNonSpinning","title":"PowerSystems.set_time_frame!","text":"set_time_frame!(value::StaticReserveNonSpinning, val::Any) -> Any\n\n\nSet StaticReserveNonSpinning time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#TurbineGov","page":"TurbineGov","title":"TurbineGov","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/#GasTG","page":"TurbineGov","title":"GasTG","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/GasTG.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.GasTG","page":"TurbineGov","title":"PowerSystems.GasTG","text":"mutable struct GasTG <: TurbineGov\n    R::Float64\n    T1::Float64\n    T2::Float64\n    T3::Float64\n    AT::Float64\n    Kt::Float64\n    V_lim::Tuple{Float64, Float64}\n    D_turb::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of Gas Turbine-Governor. GAST in PSSE and GAST_PTI in PowerWorld.\n\nArguments\n\nR::Float64: Speed droop parameter, validation range: (\"eps()\", 0.1)\nT1::Float64: Governor time constant in s, validation range: (\"eps()\", 0.5)\nT2::Float64: Combustion chamber time constant, validation range: (\"eps()\", 0.5)\nT3::Float64: Load limit time constant (exhaust gas measurement time), validation range: (\"eps()\", 5.0)\nAT::Float64: Ambient temperature load limit, validation range: (0, 1)\nKt::Float64: Load limit feedback gain, validation range: (0, 5)\nV_lim::Tuple{Float64, Float64}: Operational control limits on fuel valve opening (Vmin, Vmax)\nD_turb::Float64: Speed damping coefficient of gas turbine rotor, validation range: (0, 0.5)\nP_ref::Float64: Reference Load Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the GAST model are:\n\nx_g1: Fuel valve opening,\nx_g2: Fuel flow,\nx_g3: Exhaust temperature load\n\nn_states::Int: GasTG has 3 states\nstates_types::Vector{StateTypes.StateType}: GAST has 3 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_AT-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_AT","text":"get_AT(value::GasTG) -> Float64\n\n\nGet GasTG AT.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_D_turb-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_D_turb","text":"get_D_turb(value::GasTG) -> Float64\n\n\nGet GasTG D_turb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Kt-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_Kt","text":"get_Kt(value::GasTG) -> Float64\n\n\nGet GasTG Kt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::GasTG) -> Float64\n\n\nGet GasTG P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::GasTG) -> Float64\n\n\nGet GasTG R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T1-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_T1","text":"get_T1(value::GasTG) -> Float64\n\n\nGet GasTG T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T2-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_T2","text":"get_T2(value::GasTG) -> Float64\n\n\nGet GasTG T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T3-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_T3","text":"get_T3(value::GasTG) -> Float64\n\n\nGet GasTG T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_V_lim-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_V_lim","text":"get_V_lim(value::GasTG) -> Tuple{Float64,Float64}\n\n\nGet GasTG V_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::GasTG) -> Dict{String,Any}\n\n\nGet GasTG ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::GasTG) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet GasTG internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::GasTG) -> Int64\n\n\nGet GasTG n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::GasTG) -> Array{Symbol,1}\n\n\nGet GasTG states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states_types-Tuple{GasTG}","page":"TurbineGov","title":"PowerSystems.get_states_types","text":"get_states_types(value::GasTG) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet GasTG states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_AT!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_AT!","text":"set_AT!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG AT.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_D_turb!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_D_turb!","text":"set_D_turb!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG D_turb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Kt!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_Kt!","text":"set_Kt!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG Kt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T1!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_T1!","text":"set_T1!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T2!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_T2!","text":"set_T2!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T3!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_T3!","text":"set_T3!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_V_lim!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_V_lim!","text":"set_V_lim!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG V_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states_types!-Tuple{GasTG,Any}","page":"TurbineGov","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::GasTG, val::Any) -> Any\n\n\nSet GasTG states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#GeneralGovModel","page":"TurbineGov","title":"GeneralGovModel","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/GeneralGovModel.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.GeneralGovModel","page":"TurbineGov","title":"PowerSystems.GeneralGovModel","text":"mutable struct GeneralGovModel <: TurbineGov\n    Rselect::Int\n    fuel_flag::Int\n    R::Float64\n    Tpelec::Float64\n    speed_error_signal::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Kp_gov::Float64\n    Ki_gov::Float64\n    Kd_gov::Float64\n    Td_gov::Float64\n    valve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    T_act::Float64\n    K_turb::Float64\n    Wf_nl::Float64\n    Tb::Float64\n    Tc::Float64\n    T_eng::Float64\n    Tf_load::Float64\n    Kp_load::Float64\n    Ki_load::Float64\n    Ld_ref::Float64\n    Dm::Float64\n    R_open::Float64\n    R_close::Float64\n    Ki_mw::Float64\n    A_set::Float64\n    Ka::Float64\n    Ta::Float64\n    T_rate::Float64\n    db::Float64\n    Tsa::Float64\n    Tsb::Float64\n    R_lim::NamedTuple{(:up, :down), Tuple{Float64, Float64}}\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nGE General Governor/Turbine Model. The GeneralGovModel (GGOV1) model is a general purpose governor model used for a variety of prime movers controlled by proportional-integral-derivative (PID) governors including gas turbines.\n\nArguments\n\nRselect::Int: Feedback signal for governor droop, validation range: (-2, 1), action if invalid: error\nfuel_flag::Int: Flag Switch for fuel source characteristic, validation range: (0, 1), action if invalid: error\nR::Float64: Speed droop parameter, validation range: (\"eps()\", nothing), action if invalid: warn\nTpelec::Float64: Electrical power transducer time constant, seconds, validation range: (\"eps()\", nothing), action if invalid: warn\nspeed_error_signal::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Speed error signal limits\nKp_gov::Float64: Governor proportional gain, validation range: (0.0, nothing), action if invalid: warn\nKi_gov::Float64: Governor integral gain, validation range: (0.0, nothing), action if invalid: warn\nKd_gov::Float64: Governor derivative gain, validation range: (0.0, nothing), action if invalid: warn\nTd_gov::Float64: Governor derivative time constant, validation range: (0.0, nothing), action if invalid: warn\nvalve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Valve position limits\nT_act::Float64: Actuator time constant, validation range: (0.0, nothing), action if invalid: warn\nK_turb::Float64: Turbine gain, validation range: (0.0, nothing), action if invalid: warn\nWf_nl::Float64: No load fuel flow, pu, validation range: (0.0, nothing), action if invalid: warn\nTb::Float64: Turbine lag time constant, sec, validation range: (0.0, nothing), action if invalid: warn\nTc::Float64: Turbine lead time constant, sec, validation range: (0.0, nothing), action if invalid: warn\nT_eng::Float64: Transport lag time constant for diesel engine, sec, validation range: (0.0, nothing), action if invalid: warn\nTf_load::Float64: Load limiter time constant, validation range: (0.0, nothing), action if invalid: warn\nKp_load::Float64: Load limiter proportional gain for PI controller, validation range: (0.0, nothing), action if invalid: warn\nKi_load::Float64: Load integral gain for PI controller, validation range: (0.0, nothing), action if invalid: warn\nLd_ref::Float64: Load limiter integral gain for PI controller, validation range: (0.0, nothing), action if invalid: warn\nDm::Float64: Mechanical damping coefficient, pu, validation range: (0.0, nothing), action if invalid: warn\nR_open::Float64: Maximum valve opening rate, pu/sec, validation range: (0.0, nothing), action if invalid: warn\nR_close::Float64: Maximum valve closing rate, pu/sec, validation range: (0.0, nothing), action if invalid: warn\nKi_mw::Float64: Power controller (reset) gain, validation range: (0.0, nothing), action if invalid: warn\nA_set::Float64: Acceleration limiter setpoint, pu/sec, validation range: (0.0, nothing), action if invalid: warn\nKa::Float64: Acceleration limiter gain, validation range: (0.0, nothing), action if invalid: warn\nTa::Float64: Acceleration limiter time constant , validation range: (\"eps()\", nothing), action if invalid: error\nT_rate::Float64: Turbine rating, validation range: (0.0, nothing), action if invalid: warn\ndb::Float64: Speed governor deadband, validation range: (0.0, nothing), action if invalid: warn\nTsa::Float64: Temperature detection lead time constant, validation range: (0.0, nothing), action if invalid: warn\nTsb::Float64: Temperature detection lag time constant, validation range: (0.0, nothing), action if invalid: warn\nR_lim::NamedTuple{(:up, :down), Tuple{Float64, Float64}}: Maximum rate of load increa\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the GGOV1 model are:\n\nPe: Machine Electrical Power Measurement,\nx_g1: Governor differential control,\nx_g2: Governor integral control, \nx_g3: Turbine actuator, \nx_g4: Turbine Lead-Lag, \nx_g5: Turbine load limiter measurement, \nx_g6: Turbine Load Limiter Integral Control, \nx_g7: Supervisory Load Control, \nx_g8: Acceleration Control, \nx_g9 Temperature Detection Lead - Lag:\n\nn_states::Int: GeneralGovModel has 10 states\nstates_types::Vector{StateTypes.StateType}: GGOV1 has 10 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_A_set-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_A_set","text":"get_A_set(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel A_set.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Dm-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Dm","text":"get_Dm(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Dm.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K_turb-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_K_turb","text":"get_K_turb(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel K_turb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ka-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ka","text":"get_Ka(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Kd_gov-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Kd_gov","text":"get_Kd_gov(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Kd_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ki_gov-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ki_gov","text":"get_Ki_gov(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ki_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ki_load-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ki_load","text":"get_Ki_load(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ki_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ki_mw-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ki_mw","text":"get_Ki_mw(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ki_mw.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Kp_gov-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Kp_gov","text":"get_Kp_gov(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Kp_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Kp_load-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Kp_load","text":"get_Kp_load(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Kp_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ld_ref-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ld_ref","text":"get_Ld_ref(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ld_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R_close-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_R_close","text":"get_R_close(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel R_close.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R_lim-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_R_lim","text":"get_R_lim(value::GeneralGovModel) -> NamedTuple{(:up, :down),Tuple{Float64,Float64}}\n\n\nGet GeneralGovModel R_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R_open-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_R_open","text":"get_R_open(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel R_open.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Rselect-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Rselect","text":"get_Rselect(value::GeneralGovModel) -> Int64\n\n\nGet GeneralGovModel Rselect.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T_act-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_T_act","text":"get_T_act(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel T_act.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T_eng-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_T_eng","text":"get_T_eng(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel T_eng.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T_rate-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_T_rate","text":"get_T_rate(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel T_rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ta-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Ta","text":"get_Ta(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tb-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tb","text":"get_Tb(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tc-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tc","text":"get_Tc(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Td_gov-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Td_gov","text":"get_Td_gov(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Td_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tf_load-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tf_load","text":"get_Tf_load(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tf_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tpelec-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tpelec","text":"get_Tpelec(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tpelec.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tsa-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tsa","text":"get_Tsa(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tsa.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tsb-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Tsb","text":"get_Tsb(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Tsb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Wf_nl-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_Wf_nl","text":"get_Wf_nl(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel Wf_nl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_db-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_db","text":"get_db(value::GeneralGovModel) -> Float64\n\n\nGet GeneralGovModel db.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::GeneralGovModel) -> Dict{String,Any}\n\n\nGet GeneralGovModel ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_fuel_flag-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_fuel_flag","text":"get_fuel_flag(value::GeneralGovModel) -> Int64\n\n\nGet GeneralGovModel fuel_flag.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::GeneralGovModel) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet GeneralGovModel internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::GeneralGovModel) -> Int64\n\n\nGet GeneralGovModel n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_speed_error_signal-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_speed_error_signal","text":"get_speed_error_signal(value::GeneralGovModel) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet GeneralGovModel speed_error_signal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::GeneralGovModel) -> Array{Symbol,1}\n\n\nGet GeneralGovModel states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states_types-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_states_types","text":"get_states_types(value::GeneralGovModel) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet GeneralGovModel states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_valve_position_limits-Tuple{GeneralGovModel}","page":"TurbineGov","title":"PowerSystems.get_valve_position_limits","text":"get_valve_position_limits(value::GeneralGovModel) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet GeneralGovModel valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_A_set!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_A_set!","text":"set_A_set!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel A_set.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Dm!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Dm!","text":"set_Dm!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Dm.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K_turb!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_K_turb!","text":"set_K_turb!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel K_turb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ka!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Kd_gov!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Kd_gov!","text":"set_Kd_gov!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Kd_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ki_gov!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ki_gov!","text":"set_Ki_gov!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ki_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ki_load!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ki_load!","text":"set_Ki_load!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ki_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ki_mw!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ki_mw!","text":"set_Ki_mw!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ki_mw.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Kp_gov!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Kp_gov!","text":"set_Kp_gov!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Kp_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Kp_load!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Kp_load!","text":"set_Kp_load!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Kp_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ld_ref!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ld_ref!","text":"set_Ld_ref!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ld_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R_close!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_R_close!","text":"set_R_close!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel R_close.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R_lim!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_R_lim!","text":"set_R_lim!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel R_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R_open!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_R_open!","text":"set_R_open!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel R_open.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Rselect!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Rselect!","text":"set_Rselect!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Rselect.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T_act!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_T_act!","text":"set_T_act!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel T_act.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T_eng!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_T_eng!","text":"set_T_eng!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel T_eng.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T_rate!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_T_rate!","text":"set_T_rate!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel T_rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ta!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tb!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tc!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Td_gov!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Td_gov!","text":"set_Td_gov!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Td_gov.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tf_load!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tf_load!","text":"set_Tf_load!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tf_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tpelec!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tpelec!","text":"set_Tpelec!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tpelec.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tsa!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tsa!","text":"set_Tsa!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tsa.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tsb!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Tsb!","text":"set_Tsb!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Tsb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Wf_nl!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_Wf_nl!","text":"set_Wf_nl!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel Wf_nl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_db!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_db!","text":"set_db!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel db.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_fuel_flag!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_fuel_flag!","text":"set_fuel_flag!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel fuel_flag.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_speed_error_signal!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_speed_error_signal!","text":"set_speed_error_signal!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel speed_error_signal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states_types!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_valve_position_limits!-Tuple{GeneralGovModel,Any}","page":"TurbineGov","title":"PowerSystems.set_valve_position_limits!","text":"set_valve_position_limits!(value::GeneralGovModel, val::Any) -> Any\n\n\nSet GeneralGovModel valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#HydroTurbineGov","page":"TurbineGov","title":"HydroTurbineGov","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/HydroTurbineGov.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.HydroTurbineGov","page":"TurbineGov","title":"PowerSystems.HydroTurbineGov","text":"mutable struct HydroTurbineGov <: TurbineGov\n    R::Float64\n    r::Float64\n    Tr::Float64\n    Tf::Float64\n    Tg::Float64\n    VELM::Float64\n    gate_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Tw::Float64\n    At::Float64\n    D_T::Float64\n    q_nl::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nHydro Turbine-Governor.\n\nArguments\n\nR::Float64: Permanent droop parameter, validation range: (0, 0.1), action if invalid: warn\nr::Float64: Temporary Droop, validation range: (0, 2), action if invalid: warn\nTr::Float64: Governor time constant, validation range: (\"eps()\", 30), action if invalid: error\nTf::Float64: Filter Time constant, validation range: (\"eps()\", 0.1)\nTg::Float64: Servo time constant, validation range: (\"eps()\", 1.0), action if invalid: error\nVELM::Float64: gate velocity limit, validation range: (\"eps()\", 0.3), action if invalid: error\ngate_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Gate position limits\nTw::Float64: water time constant, validation range: (\"eps()\", 3.0), action if invalid: error\nAt::Float64: Turbine gain, validation range: (0.8, 1.5), action if invalid: warn\nD_T::Float64: Turbine Damping, validation range: (0, 0.5), action if invalid: warn\nq_nl::Float64: No-power flow, validation range: (0, nothing), action if invalid: warn\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the HydroTurbineGov model are:\n\nx_g1: filter_output,\nx_g2: desired gate, \nx_g3: gate opening, \nx_g4: turbine flow\n\nn_states::Int: HYGOV has 4 states\nstates_types::Vector{StateTypes.StateType}: HYGOV has 4 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_At-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_At","text":"get_At(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov At.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_D_T-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_D_T","text":"get_D_T(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov D_T.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tf-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_Tf","text":"get_Tf(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tg-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_Tg","text":"get_Tg(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov Tg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tr-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_Tr","text":"get_Tr(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tw-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_Tw","text":"get_Tw(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov Tw.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_VELM-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_VELM","text":"get_VELM(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov VELM.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::HydroTurbineGov) -> Dict{String,Any}\n\n\nGet HydroTurbineGov ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_gate_position_limits-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_gate_position_limits","text":"get_gate_position_limits(value::HydroTurbineGov) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet HydroTurbineGov gate_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::HydroTurbineGov) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet HydroTurbineGov internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::HydroTurbineGov) -> Int64\n\n\nGet HydroTurbineGov n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_q_nl-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_q_nl","text":"get_q_nl(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov q_nl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_r-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_r","text":"get_r(value::HydroTurbineGov) -> Float64\n\n\nGet HydroTurbineGov r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::HydroTurbineGov) -> Array{Symbol,1}\n\n\nGet HydroTurbineGov states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states_types-Tuple{HydroTurbineGov}","page":"TurbineGov","title":"PowerSystems.get_states_types","text":"get_states_types(value::HydroTurbineGov) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet HydroTurbineGov states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_At!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_At!","text":"set_At!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov At.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_D_T!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_D_T!","text":"set_D_T!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov D_T.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tf!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tg!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_Tg!","text":"set_Tg!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov Tg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tr!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tw!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_Tw!","text":"set_Tw!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov Tw.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_VELM!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_VELM!","text":"set_VELM!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov VELM.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_gate_position_limits!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_gate_position_limits!","text":"set_gate_position_limits!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov gate_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_q_nl!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_q_nl!","text":"set_q_nl!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov q_nl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_r!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_r!","text":"set_r!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states_types!-Tuple{HydroTurbineGov,Any}","page":"TurbineGov","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::HydroTurbineGov, val::Any) -> Any\n\n\nSet HydroTurbineGov states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#IEEETurbineGov1","page":"TurbineGov","title":"IEEETurbineGov1","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/IEEETurbineGov1.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.IEEETurbineGov1","page":"TurbineGov","title":"PowerSystems.IEEETurbineGov1","text":"mutable struct IEEETurbineGov1 <: TurbineGov\n    K::Float64\n    T1::Float64\n    T2::Float64\n    T3::Float64\n    U0::Float64\n    U_c::Float64\n    valve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    T4::Float64\n    K1::Float64\n    K2::Float64\n    T5::Float64\n    K3::Float64\n    K4::Float64\n    T6::Float64\n    K5::Float64\n    K6::Float64\n    T7::Float64\n    K7::Float64\n    K8::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nIEEE Type 1 Speed-Governing Model\n\nArguments\n\nK::Float64: Governor Gain, validation range: (5, 30), action if invalid: warn\nT1::Float64: Input Filter Lag, validation range: (0, 5), action if invalid: warn\nT2::Float64: Input Filter Lead, validation range: (0, 10), action if invalid: warn\nT3::Float64: Valve position Time Constant, validation range: (\"eps()\", 1), action if invalid: error\nU0::Float64: Maximum Valve Opening Rate, validation range: (0.01, 0.03), action if invalid: warn\nU_c::Float64: Maximum Valve closing rate, validation range: (-0.3, 0.0), action if invalid: warn\nvalve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Valve position limits in MW\nT4::Float64: Time Constant inlet steam, validation range: (0, 1.0), action if invalid: warn\nK1::Float64: Fraction of high presure shaft power, validation range: (-2, 1), action if invalid: warn\nK2::Float64: Fraction of low presure shaft power, validation range: (0, nothing), action if invalid: warn\nT5::Float64: Time constant for second boiler pass, validation range: (0, 10), action if invalid: warn\nK3::Float64: Fraction of high presure shaft power second boiler pass, validation range: (0, 0.5), action if invalid: warn\nK4::Float64: Fraction of low presure shaft power second boiler pass, validation range: (0, 0.5), action if invalid: warn\nT6::Float64: Time constant for third boiler pass, validation range: (0, 10), action if invalid: warn\nK5::Float64: Fraction of high presure shaft power third boiler pass, validation range: (0, 0.35), action if invalid: warn\nK6::Float64: Fraction of low presure shaft power third boiler pass, validation range: (0, 0.55), action if invalid: warn\nT7::Float64: Time constant for fourth boiler pass, validation range: (0, 10), action if invalid: warn\nK7::Float64: Fraction of high presure shaft power fourth boiler pass, validation range: (0, 0.3), action if invalid: warn\nK8::Float64: Fraction of low presure shaft power fourth boiler pass, validation range: (0, 0.3), action if invalid: warn\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the IEEETurbineGov model are:\n\nx_g1: First Governor integrator,\nx_g2: Governor output,\nx_g3: First Turbine integrator, \nx_g4: Second Turbine Integrator, \nx_g5: Third Turbine Integrator, \nx_g6: Fourth Turbine Integrator,\n\nn_states::Int: IEEEG1 has 6 states\nstates_types::Vector{StateTypes.StateType}: IEEEG1 has 6 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K","text":"get_K(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K1-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K1","text":"get_K1(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K2-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K2","text":"get_K2(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K3-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K3","text":"get_K3(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K4-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K4","text":"get_K4(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K5-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K5","text":"get_K5(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K6-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K6","text":"get_K6(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K7-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K7","text":"get_K7(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K7.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_K8-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_K8","text":"get_K8(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 K8.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T1-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T1","text":"get_T1(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T2-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T2","text":"get_T2(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T3-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T3","text":"get_T3(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T4-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T4","text":"get_T4(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T5-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T5","text":"get_T5(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T6-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T6","text":"get_T6(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T7-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T7","text":"get_T7(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 T7.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_U0-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_U0","text":"get_U0(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 U0.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_U_c-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_U_c","text":"get_U_c(value::IEEETurbineGov1) -> Float64\n\n\nGet IEEETurbineGov1 U_c.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::IEEETurbineGov1) -> Dict{String,Any}\n\n\nGet IEEETurbineGov1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::IEEETurbineGov1) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet IEEETurbineGov1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::IEEETurbineGov1) -> Int64\n\n\nGet IEEETurbineGov1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::IEEETurbineGov1) -> Array{Symbol,1}\n\n\nGet IEEETurbineGov1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states_types-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_states_types","text":"get_states_types(value::IEEETurbineGov1) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet IEEETurbineGov1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_valve_position_limits-Tuple{IEEETurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_valve_position_limits","text":"get_valve_position_limits(value::IEEETurbineGov1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet IEEETurbineGov1 valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K!","text":"set_K!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K1!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K1!","text":"set_K1!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K2!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K2!","text":"set_K2!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K3!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K3!","text":"set_K3!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K4!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K4!","text":"set_K4!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K5!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K5!","text":"set_K5!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K6!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K6!","text":"set_K6!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K7!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K7!","text":"set_K7!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K7.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_K8!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_K8!","text":"set_K8!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 K8.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T1!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T1!","text":"set_T1!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T2!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T2!","text":"set_T2!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T3!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T3!","text":"set_T3!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T4!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T4!","text":"set_T4!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T5!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T5!","text":"set_T5!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T6!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T6!","text":"set_T6!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T6.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T7!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T7!","text":"set_T7!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 T7.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_U0!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_U0!","text":"set_U0!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 U0.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_U_c!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_U_c!","text":"set_U_c!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 U_c.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states_types!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_valve_position_limits!-Tuple{IEEETurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_valve_position_limits!","text":"set_valve_position_limits!(value::IEEETurbineGov1, val::Any) -> Any\n\n\nSet IEEETurbineGov1 valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#SteamTurbineGov1","page":"TurbineGov","title":"SteamTurbineGov1","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/SteamTurbineGov1.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.SteamTurbineGov1","page":"TurbineGov","title":"PowerSystems.SteamTurbineGov1","text":"mutable struct SteamTurbineGov1 <: TurbineGov\n    R::Float64\n    T1::Float64\n    valve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    T2::Float64\n    T3::Float64\n    D_T::Float64\n    DB_h::Float64\n    DB_l::Float64\n    T_rate::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nSteam Turbine-Governor. This model considers both TGOV1 or TGOV1DU in PSS/E.\n\nArguments\n\nR::Float64: Droop parameter, validation range: (0, 0.1), action if invalid: warn\nT1::Float64: Governor time constant, validation range: (\"eps()\", 0.5), action if invalid: error\nvalve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Valve position limits\nT2::Float64: Lead Lag Lead Time constant , validation range: (0, nothing), action if invalid: warn\nT3::Float64: Lead Lag Lag Time constant , validation range: (\"eps()\", 10), action if invalid: error\nD_T::Float64: Turbine Damping, validation range: (0, 0.5), action if invalid: warn\nDB_h::Float64: Deadband for overspeed, validation range: (0, nothing), action if invalid: warn\nDB_l::Float64: Deadband for underspeed, validation range: (nothing, 0), action if invalid: warn\nT_rate::Float64: Turbine Rate (MW). If zero, generator base is used., validation range: (0, nothing), action if invalid: warn\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the SteamTurbineGov1 model are:\n\nx_g1: Valve Opening,\nx_g2: Lead-lag state\n\nn_states::Int: TGOV1 has 2 states\nstates_types::Vector{StateTypes.StateType}: TGOV1 has 2 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_DB_h-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_DB_h","text":"get_DB_h(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 DB_h.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_DB_l-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_DB_l","text":"get_DB_l(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 DB_l.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_D_T-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_D_T","text":"get_D_T(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 D_T.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T1-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T1","text":"get_T1(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T2-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T2","text":"get_T2(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T3-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T3","text":"get_T3(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T_rate-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_T_rate","text":"get_T_rate(value::SteamTurbineGov1) -> Float64\n\n\nGet SteamTurbineGov1 T_rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::SteamTurbineGov1) -> Dict{String,Any}\n\n\nGet SteamTurbineGov1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::SteamTurbineGov1) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SteamTurbineGov1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::SteamTurbineGov1) -> Int64\n\n\nGet SteamTurbineGov1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::SteamTurbineGov1) -> Array{Symbol,1}\n\n\nGet SteamTurbineGov1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states_types-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_states_types","text":"get_states_types(value::SteamTurbineGov1) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet SteamTurbineGov1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_valve_position_limits-Tuple{SteamTurbineGov1}","page":"TurbineGov","title":"PowerSystems.get_valve_position_limits","text":"get_valve_position_limits(value::SteamTurbineGov1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet SteamTurbineGov1 valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_DB_h!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_DB_h!","text":"set_DB_h!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 DB_h.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_DB_l!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_DB_l!","text":"set_DB_l!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 DB_l.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_D_T!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_D_T!","text":"set_D_T!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 D_T.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T1!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T1!","text":"set_T1!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T2!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T2!","text":"set_T2!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T3!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T3!","text":"set_T3!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T_rate!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_T_rate!","text":"set_T_rate!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 T_rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states_types!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_valve_position_limits!-Tuple{SteamTurbineGov1,Any}","page":"TurbineGov","title":"PowerSystems.set_valve_position_limits!","text":"set_valve_position_limits!(value::SteamTurbineGov1, val::Any) -> Any\n\n\nSet SteamTurbineGov1 valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#TGFixed","page":"TurbineGov","title":"TGFixed","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/TGFixed.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.TGFixed","page":"TurbineGov","title":"PowerSystems.TGFixed","text":"mutable struct TGFixed <: TurbineGov\n    efficiency::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a fixed Turbine Governor that returns a fixed mechanical torque  given by the product of P_ref*efficiency\n\nArguments\n\nefficiency::Float64:  Efficiency factor that multiplies P_ref, validation range: (0, nothing)\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}\nn_states::Int: TGFixed has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::TGFixed) -> Float64\n\n\nGet TGFixed P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_efficiency-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_efficiency","text":"get_efficiency(value::TGFixed) -> Float64\n\n\nGet TGFixed efficiency.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::TGFixed) -> Dict{String,Any}\n\n\nGet TGFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::TGFixed) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet TGFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::TGFixed) -> Int64\n\n\nGet TGFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{TGFixed}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::TGFixed) -> Array{Symbol,1}\n\n\nGet TGFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_efficiency!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_efficiency!","text":"set_efficiency!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed efficiency.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{TGFixed,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::TGFixed, val::Any) -> Any\n\n\nSet TGFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#TGTypeI","page":"TurbineGov","title":"TGTypeI","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/TGTypeI.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.TGTypeI","page":"TurbineGov","title":"PowerSystems.TGTypeI","text":"mutable struct TGTypeI <: TurbineGov\n    R::Float64\n    Ts::Float64\n    Tc::Float64\n    T3::Float64\n    T4::Float64\n    T5::Float64\n    valve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a Turbine Governor Type I.\n\nArguments\n\nR::Float64: Droop parameter, validation range: (0, nothing)\nTs::Float64: Governor time constant, validation range: (0, nothing)\nTc::Float64: Servo time constant, validation range: (0, nothing)\nT3::Float64: Transient gain time constant, validation range: (0, nothing)\nT4::Float64: Power fraction time constant, validation range: (0, nothing)\nT5::Float64: Reheat time constant, validation range: (0, nothing)\nvalve_position_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Valve position limits in MW\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the TGTypeI model are:\n\nx_g1: Governor state,\nx_g2: Servo state,\nx_g3: Reheat state\n\nn_states::Int: TGTypeI has 3 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::TGTypeI) -> Float64\n\n\nGet TGTypeI P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::TGTypeI) -> Float64\n\n\nGet TGTypeI R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T3-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_T3","text":"get_T3(value::TGTypeI) -> Float64\n\n\nGet TGTypeI T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T4-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_T4","text":"get_T4(value::TGTypeI) -> Float64\n\n\nGet TGTypeI T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T5-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_T5","text":"get_T5(value::TGTypeI) -> Float64\n\n\nGet TGTypeI T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Tc-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_Tc","text":"get_Tc(value::TGTypeI) -> Float64\n\n\nGet TGTypeI Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ts-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_Ts","text":"get_Ts(value::TGTypeI) -> Float64\n\n\nGet TGTypeI Ts.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::TGTypeI) -> Dict{String,Any}\n\n\nGet TGTypeI ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::TGTypeI) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet TGTypeI internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::TGTypeI) -> Int64\n\n\nGet TGTypeI n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::TGTypeI) -> Array{Symbol,1}\n\n\nGet TGTypeI states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_valve_position_limits-Tuple{TGTypeI}","page":"TurbineGov","title":"PowerSystems.get_valve_position_limits","text":"get_valve_position_limits(value::TGTypeI) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet TGTypeI valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T3!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_T3!","text":"set_T3!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T4!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_T4!","text":"set_T4!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T5!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_T5!","text":"set_T5!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI T5.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Tc!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ts!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_Ts!","text":"set_Ts!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI Ts.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_valve_position_limits!-Tuple{TGTypeI,Any}","page":"TurbineGov","title":"PowerSystems.set_valve_position_limits!","text":"set_valve_position_limits!(value::TGTypeI, val::Any) -> Any\n\n\nSet TGTypeI valve_position_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#TGTypeII","page":"TurbineGov","title":"TGTypeII","text":"","category":"section"},{"location":"model_library/generated_TurbineGov/","page":"TurbineGov","title":"TurbineGov","text":"Modules = [PowerSystems]\nPages   = [\"/TGTypeII.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TurbineGov/#PowerSystems.TGTypeII","page":"TurbineGov","title":"PowerSystems.TGTypeII","text":"mutable struct TGTypeII <: TurbineGov\n    R::Float64\n    T1::Float64\n    T2::Float64\n    Ï„_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a Turbine Governor Type II.\n\nArguments\n\nR::Float64: Droop parameter, validation range: (0, nothing)\nT1::Float64: Transient gain time constant, validation range: (0, nothing)\nT2::Float64: Power fraction time constant, validation range: (0, nothing)\nÏ„_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Power into the governor limits\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the TGTypeI model are:\n\nx_g1: lead-lag state\n\nn_states::Int: TGTypeII has 1 state\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_P_ref-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::TGTypeII) -> Float64\n\n\nGet TGTypeII P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_R-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_R","text":"get_R(value::TGTypeII) -> Float64\n\n\nGet TGTypeII R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T1-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_T1","text":"get_T1(value::TGTypeII) -> Float64\n\n\nGet TGTypeII T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_T2-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_T2","text":"get_T2(value::TGTypeII) -> Float64\n\n\nGet TGTypeII T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_ext-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_ext","text":"get_ext(value::TGTypeII) -> Dict{String,Any}\n\n\nGet TGTypeII ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_internal-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_internal","text":"get_internal(value::TGTypeII) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet TGTypeII internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_n_states-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_n_states","text":"get_n_states(value::TGTypeII) -> Int64\n\n\nGet TGTypeII n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_states-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_states","text":"get_states(value::TGTypeII) -> Array{Symbol,1}\n\n\nGet TGTypeII states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.get_Ï„_limits-Tuple{TGTypeII}","page":"TurbineGov","title":"PowerSystems.get_Ï„_limits","text":"get_Ï„_limits(value::TGTypeII) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet TGTypeII Ï„_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_P_ref!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_R!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_R!","text":"set_R!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII R.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T1!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_T1!","text":"set_T1!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_T2!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_T2!","text":"set_T2!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_ext!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_ext!","text":"set_ext!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_internal!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_internal!","text":"set_internal!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_n_states!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_states!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_states!","text":"set_states!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TurbineGov/#PowerSystems.set_Ï„_limits!-Tuple{TGTypeII,Any}","page":"TurbineGov","title":"PowerSystems.set_Ï„_limits!","text":"set_Ï„_limits!(value::TGTypeII, val::Any) -> Any\n\n\nSet TGTypeII Ï„_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_developer/extending_parsing/#Extending-Parsing-Capabilities","page":"Extending Parsing","title":"Extending Parsing Capabilities","text":"","category":"section"},{"location":"model_developer/extending_parsing/#Extending-PowerSystemTableData-parsing","page":"Extending Parsing","title":"Extending PowerSystemTableData parsing","text":"","category":"section"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"This page describes how developers should read columns from raw data files.","category":"page"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"The main point is that you should not read individual hard-coded column names from DataFrames. The parsing code includes mapping functionality that allows you to use PowerSystems-standard names while letting the users define their own custom names.","category":"page"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"Note:  This assumes that you are familiar with this user workflow.","category":"page"},{"location":"model_developer/extending_parsing/#Procedure","page":"Extending Parsing","title":"Procedure","text":"","category":"section"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"Add an entry to the array of parameters for your category in src/descriptors/power_system_inputs.json according to the following:\nUse snake_case for the name field.\nThe fields name and description are required.\nTry to use a name that is generic and not specific to one dataset.\nIt is recommended that you define unit.\nIf PowerSystems expects the value to be per-unit then you must specify system_per_unit=true.\nPowerSystems has two commonly-used datasets with customized user config files: PowerSystemsTestData and RTS_GMLC. Update both of these files and submit pull requests.\nParse the raw data like in this example:","category":"page"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"\nfunction demo_bus_csv_parser!(data::PowerSystemTableData)\n    for bus in iterate_rows(data, BUS::InputCategory)\n        @show bus.name, bus.max_active_power, bus.max_reactive_power\n    end\nend","category":"page"},{"location":"model_developer/extending_parsing/","page":"Extending Parsing","title":"Extending Parsing","text":"iterate_rows returns a NamedTuple where each name defined in src/descriptors/power_system_inputs.json is a field.","category":"page"},{"location":"model_developer/extending_parsing/#Extending-PSS/e-Dynamic-Parsing-Capabilities","page":"Extending Parsing","title":"Extending PSS/e Dynamic Parsing Capabilities","text":"","category":"section"},{"location":"model_library/generated_HydroDispatch/#HydroDispatch","page":"HydroDispatch","title":"HydroDispatch","text":"","category":"section"},{"location":"model_library/generated_HydroDispatch/","page":"HydroDispatch","title":"HydroDispatch","text":"Modules = [PowerSystems]\nPages   = [\"generated/HydroDispatch.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.HydroDispatch","page":"HydroDispatch","title":"PowerSystems.HydroDispatch","text":"mutable struct HydroDispatch <: HydroGen\n    name::String\n    available::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    prime_mover::PrimeMovers.PrimeMover\n    active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits::Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}\n    ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    base_power::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nactive_power::Float64\nreactive_power::Float64, validation range: reactive_power_limits, action if invalid: warn\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\nactive_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits::Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}, action if invalid: warn\nramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error\ntime_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_active_power-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_active_power","text":"get_active_power(value::HydroDispatch) -> Any\n\n\nGet HydroDispatch active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_active_power_limits-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_active_power_limits","text":"get_active_power_limits(value::HydroDispatch) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HydroDispatch active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_available-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_available","text":"get_available(value::HydroDispatch) -> Bool\n\n\nGet HydroDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_base_power-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_base_power","text":"get_base_power(value::HydroDispatch) -> Float64\n\n\nGet HydroDispatch base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_bus-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_bus","text":"get_bus(value::HydroDispatch) -> Bus\n\n\nGet HydroDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_dynamic_injector-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::HydroDispatch) -> Union{Nothing, DynamicInjection}\n\n\nGet HydroDispatch dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_ext-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_ext","text":"get_ext(value::HydroDispatch) -> Dict{String,Any}\n\n\nGet HydroDispatch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_internal-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_internal","text":"get_internal(value::HydroDispatch) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet HydroDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_prime_mover-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::HydroDispatch) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet HydroDispatch prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_ramp_limits-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_ramp_limits","text":"get_ramp_limits(value::HydroDispatch) -> Union{Nothing, NamedTuple{(:up, :down),_A} where _A<:Tuple}\n\n\nGet HydroDispatch ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_rating-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_rating","text":"get_rating(value::HydroDispatch) -> Any\n\n\nGet HydroDispatch rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_reactive_power-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::HydroDispatch) -> Any\n\n\nGet HydroDispatch reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_reactive_power_limits-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::HydroDispatch) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet HydroDispatch reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_services-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_services","text":"get_services(value::HydroDispatch) -> Array{Service,1}\n\n\nGet HydroDispatch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.get_time_limits-Tuple{HydroDispatch}","page":"HydroDispatch","title":"PowerSystems.get_time_limits","text":"get_time_limits(value::HydroDispatch) -> Union{Nothing, NamedTuple{(:up, :down),Tuple{Float64,Float64}}}\n\n\nGet HydroDispatch time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_active_power!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_active_power_limits!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_active_power_limits!","text":"set_active_power_limits!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_available!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_available!","text":"set_available!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_base_power!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_bus!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_bus!","text":"set_bus!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_ext!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_ext!","text":"set_ext!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_internal!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_internal!","text":"set_internal!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_prime_mover!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_ramp_limits!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_ramp_limits!","text":"set_ramp_limits!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_rating!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_rating!","text":"set_rating!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_reactive_power!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_reactive_power_limits!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_services!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_services!","text":"set_services!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroDispatch/#PowerSystems.set_time_limits!-Tuple{HydroDispatch,Any}","page":"HydroDispatch","title":"PowerSystems.set_time_limits!","text":"set_time_limits!(value::HydroDispatch, val::Any) -> Any\n\n\nSet HydroDispatch time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_developer/adding_types/#Adding-PowerSystems-Types","page":"Adding Types","title":"Adding PowerSystems Types","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"This page describes how developers should add types to PowerSystems. Refer to this guide first.","category":"page"},{"location":"model_developer/adding_types/#Type-Hierarchy","page":"Adding Types","title":"Type Hierarchy","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"All structs that correlate to power system components must be subtypes of the Component abstract type. Browse its type hierachy to choose an appropriate supertype for your new struct.","category":"page"},{"location":"model_developer/adding_types/#Auto-generating-Structs","page":"Adding Types","title":"Auto-generating Structs","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Most PowerSystems structs are auto-generated from the JSON descriptor file src/descriptors/power_system_structs.json. You can add your new struct here or write it manually.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"If all you need is the basic struct definition and getter/setter functions then you will likely find the auto-generation helpful.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"If you will need to write specialized functions for the type then you will probably want to write it manually.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Refer to this link for more information.","category":"page"},{"location":"model_developer/adding_types/#Interfaces","page":"Adding Types","title":"Interfaces","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Some abstract types define required interface functions in docstring. Be sure to implement each of them for your new type.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Formalized documentation for each abstract type is TBD.","category":"page"},{"location":"model_developer/adding_types/#Specialize-an-Existing-Type","page":"Adding Types","title":"Specialize an Existing Type","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"There are scenarios where you may want to make a new type that is identical to an existing type except for one attribute or behavior, and don't want to duplicate the entire existing type and methods. In programming languages that support inheritance you would derive a new class from the existing class and automatically inherit its fields and methods. Julia doesn't support that. However, you can achieve a similar result with a forwarding macro. The basic idea is that you include the existing type within your struct and then use a macro to automatically forward specific methods to that instance.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"A few PowerSystems structs use the macro InfrastructureSystems.@forward to do this. Refer to the struct RoundRotorQuadratic for an example of how to use this.","category":"page"},{"location":"model_developer/adding_types/#Custom-Rules","page":"Adding Types","title":"Custom Rules","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Some types require special checks before they can be added to or removed from a system. One example is the case where a component includes another component that is also stored in the system. We must ensure that the parent component does not contain a reference to another component that is not already attached to the system.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Similarly, if the child object is removed from the system we must also remove the parent's reference to that child.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"The source file src/base.jl provides functions that you can implement for your new type to manage these scenarios.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"check_component_addition(sys::System, component::Component)\nhandle_component_addition!(sys::System, component::Component)\ncheck_component_removal(sys::System, component::Component)\nhandle_component_removal!(sys::System, component::Component)","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"The functions add_component!() and remove_component!() call the check function before performing actions and then call the handle function afterwards. The default behavior of these functions is to do nothing. Implement versions that take your type in order to add your own checks or perform additional actions.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Beware of the condition where a custom method is already implemented for a supertype of your type.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"Note that you can call the helper functions is_attached(component, system) and throw_if_not_attached(component, system).","category":"page"},{"location":"model_developer/adding_types/#JSON-Serialization","page":"Adding Types","title":"JSON Serialization","text":"","category":"section"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"PowerSystems provides functionality to serialize an entire system to a JSON file and then deserialize it back to a system. The main benefit is that deserializing is significantly faster than reconstructing the system from raw data files.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"For most structs with basic types (numbers, strings, arrays and dictionaries of numbers and strings) the library used by PowerSystems can convert structs between Julia and JSON with no work required by the user.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"In cases where a struct contains another PowerSystems component that is also stored in the system, extra work is required.  There are two reasons for this:","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"We don't want to duplicate JSON representations of the same component.\nThe deserialization process needs to ensure that the parent component has a reference to the child component. It should not contain a different instance that is equivalent in content.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"To accomplish these goals PowerSystems stores the child component's UUID in the JSON object instead of its value. The deserialization process ensures that the child is deserialized first. When it deserializes the parent it looks up the child's UUID in a dictionary and stores a reference to the value.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"PowerSystems implements this logic for many abstract types. For example, all subtypes of Device contain a Bus, and so PowerSystems solves this problem for all devices in one place.","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"It's likely that your new type will just work. Here's how you can test it:","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"using PowerSystems\n\n# Assume a system is built and stored in the variable sys.\nto_json(sys, \"sys.json\")\n\n# Browse the JSON file to examine how PowerSystems stored your instance.\n# This method requires installation of jq.\njq . sys.json | less\n\n# Re-create the system and find your component.\nsys2 = System(\"sys.json\")\nget_component(MyType, sys, \"component_name\")","category":"page"},{"location":"model_developer/adding_types/","page":"Adding Types","title":"Adding Types","text":"If this doesn't work then we recommend you submit an issue on GitHub so that we can consult with you on the best way to solve the problem.","category":"page"},{"location":"model_library/generated_Line/#Line","page":"Line","title":"Line","text":"","category":"section"},{"location":"model_library/generated_Line/","page":"Line","title":"Line","text":"Modules = [PowerSystems]\nPages   = [\"generated/Line.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Line/#PowerSystems.Line","page":"Line","title":"PowerSystems.Line","text":"mutable struct Line <: ACBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    reactive_power_flow::Float64\n    arc::Arc\n    r::Float64\n    x::Float64\n    b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}\n    rate::Float64\n    angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\nreactive_power_flow::Float64\narc::Arc\nr::Float64: System per-unit value, validation range: (0, 4), action if invalid: error\nx::Float64: System per-unit value, validation range: (0, 4), action if invalid: error\nb::NamedTuple{(:from, :to), Tuple{Float64, Float64}}: System per-unit value, validation range: (0, 100), action if invalid: error\nrate::Float64\nangle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}, validation range: (-1.571, 1.571), action if invalid: error\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Line/#PowerSystems.get_active_power_flow-Tuple{Line}","page":"Line","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::Line) -> Any\n\n\nGet Line active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_angle_limits-Tuple{Line}","page":"Line","title":"PowerSystems.get_angle_limits","text":"get_angle_limits(value::Line) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet Line angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_arc-Tuple{Line}","page":"Line","title":"PowerSystems.get_arc","text":"get_arc(value::Line) -> Arc\n\n\nGet Line arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_available-Tuple{Line}","page":"Line","title":"PowerSystems.get_available","text":"get_available(value::Line) -> Bool\n\n\nGet Line available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_b-Tuple{Line}","page":"Line","title":"PowerSystems.get_b","text":"get_b(value::Line) -> NamedTuple{(:from, :to),Tuple{Float64,Float64}}\n\n\nGet Line b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_ext-Tuple{Line}","page":"Line","title":"PowerSystems.get_ext","text":"get_ext(value::Line) -> Dict{String,Any}\n\n\nGet Line ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_internal-Tuple{Line}","page":"Line","title":"PowerSystems.get_internal","text":"get_internal(value::Line) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Line internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_r-Tuple{Line}","page":"Line","title":"PowerSystems.get_r","text":"get_r(value::Line) -> Float64\n\n\nGet Line r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_rate-Tuple{Line}","page":"Line","title":"PowerSystems.get_rate","text":"get_rate(value::Line) -> Any\n\n\nGet Line rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_reactive_power_flow-Tuple{Line}","page":"Line","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::Line) -> Any\n\n\nGet Line reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_services-Tuple{Line}","page":"Line","title":"PowerSystems.get_services","text":"get_services(value::Line) -> Array{Service,1}\n\n\nGet Line services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.get_x-Tuple{Line}","page":"Line","title":"PowerSystems.get_x","text":"get_x(value::Line) -> Float64\n\n\nGet Line x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_active_power_flow!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::Line, val::Any) -> Any\n\n\nSet Line active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_angle_limits!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_angle_limits!","text":"set_angle_limits!(value::Line, val::Any) -> Any\n\n\nSet Line angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_arc!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_arc!","text":"set_arc!(value::Line, val::Any) -> Any\n\n\nSet Line arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_available!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_available!","text":"set_available!(value::Line, val::Any) -> Any\n\n\nSet Line available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_b!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_b!","text":"set_b!(value::Line, val::Any) -> Any\n\n\nSet Line b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_ext!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_ext!","text":"set_ext!(value::Line, val::Any) -> Any\n\n\nSet Line ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_internal!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_internal!","text":"set_internal!(value::Line, val::Any) -> Any\n\n\nSet Line internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_r!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_r!","text":"set_r!(value::Line, val::Any) -> Any\n\n\nSet Line r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_rate!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_rate!","text":"set_rate!(value::Line, val::Any) -> Any\n\n\nSet Line rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_reactive_power_flow!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::Line, val::Any) -> Any\n\n\nSet Line reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_services!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_services!","text":"set_services!(value::Line, val::Any) -> Any\n\n\nSet Line services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Line/#PowerSystems.set_x!-Tuple{Line,Any}","page":"Line","title":"PowerSystems.set_x!","text":"set_x!(value::Line, val::Any) -> Any\n\n\nSet Line x.\n\n\n\n\n\n","category":"method"},{"location":"modeler/data/#Saving-and-Viewing-PowerSystems-Data","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"PowerSystems data can be serialized and deserialized in JSON.","category":"page"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"PowerSystems.to_json(system, \"system.json\")\nsystem = System(\"system.json\")","category":"page"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"It can be useful to view and filter the PowerSystems data in this format. There are many tools available to browse JSON data.","category":"page"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"Here is an example GUI tool that is available online in a browser.","category":"page"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"The command line utility jq offers even more features. The rest of this document provides example commands.","category":"page"},{"location":"modeler/data/#View-the-entire-file-pretty-printed.","page":"Saving and Viewing PowerSystems Data","title":"View the entire file pretty-printed.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq . system.json","category":"page"},{"location":"modeler/data/#View-the-PowerSystems-component-types.","page":"Saving and Viewing PowerSystems Data","title":"View the PowerSystems component types.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components | keys' system.json","category":"page"},{"location":"modeler/data/#View-specific-components.","page":"Saving and Viewing PowerSystems Data","title":"View specific components.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard' system.json","category":"page"},{"location":"modeler/data/#Get-the-count-of-a-component-type.","page":"Saving and Viewing PowerSystems Data","title":"Get the count of a component type.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.Bus  | length' system.json","category":"page"},{"location":"modeler/data/#View-specific-component-by-index.","page":"Saving and Viewing PowerSystems Data","title":"View specific component by index.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard | .[0]' system.json","category":"page"},{"location":"modeler/data/#View-specific-component-by-name.","page":"Saving and Viewing PowerSystems Data","title":"View specific component by name.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard | .[] | select(.name == \"107_CC_1\")' system.json","category":"page"},{"location":"modeler/data/#View-the-field-names-for-a-component.","page":"Saving and Viewing PowerSystems Data","title":"View the field names for a component.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard | .[0] | keys' system.json","category":"page"},{"location":"modeler/data/#Filter-on-a-field-value.","page":"Saving and Viewing PowerSystems Data","title":"Filter on a field value.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard | .[] | select(.active_power > 2.3)' system.json","category":"page"},{"location":"modeler/data/#Output-a-table-with-select-fields.","page":"Saving and Viewing PowerSystems Data","title":"Output a table with select fields.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq -r '[\"name\", \"econ.capacity\"], (.data.components.ThermalStandard | .[] | [.name, .active_power]) | @tsv' system.json","category":"page"},{"location":"modeler/data/#View-the-forecast-information-for-a-component.","page":"Saving and Viewing PowerSystems Data","title":"View the forecast information for a component.","text":"","category":"section"},{"location":"modeler/data/","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.data.components.ThermalStandard | .[0] | .forecasts' system.json","category":"page"},{"location":"model_library/generated_Arc/#Arc","page":"Arc","title":"Arc","text":"","category":"section"},{"location":"model_library/generated_Arc/","page":"Arc","title":"Arc","text":"Modules = [PowerSystems]\nPages   = [\"generated/Arc.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Arc/#PowerSystems.Arc","page":"Arc","title":"PowerSystems.Arc","text":"mutable struct Arc <: Topology\n    from::Bus\n    to::Bus\n    internal::InfrastructureSystemsInternal\nend\n\nA topological Arc.\n\nArguments\n\nfrom::Bus: The initial bus\nto::Bus: The terminal bus\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Arc/#PowerSystems.get_from-Tuple{Arc}","page":"Arc","title":"PowerSystems.get_from","text":"get_from(value::Arc) -> Bus\n\n\nGet Arc from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Arc/#PowerSystems.get_internal-Tuple{Arc}","page":"Arc","title":"PowerSystems.get_internal","text":"get_internal(value::Arc) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Arc internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Arc/#PowerSystems.get_to-Tuple{Arc}","page":"Arc","title":"PowerSystems.get_to","text":"get_to(value::Arc) -> Bus\n\n\nGet Arc to.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Arc/#PowerSystems.set_from!-Tuple{Arc,Any}","page":"Arc","title":"PowerSystems.set_from!","text":"set_from!(value::Arc, val::Any) -> Any\n\n\nSet Arc from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Arc/#PowerSystems.set_internal!-Tuple{Arc,Any}","page":"Arc","title":"PowerSystems.set_internal!","text":"set_internal!(value::Arc, val::Any) -> Any\n\n\nSet Arc internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Arc/#PowerSystems.set_to!-Tuple{Arc,Any}","page":"Arc","title":"PowerSystems.set_to!","text":"set_to!(value::Arc, val::Any) -> Any\n\n\nSet Arc to.\n\n\n\n\n\n","category":"method"},{"location":"developer/logging/#Logging","page":"Logging","title":"Logging","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"This document describes logging facilities available in the PowerSystems module. The examples assume the following imports:","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"import Logging\nimport PowerSystems: configure_logging, open_file_logger, MultiLogger, LogEventTracker","category":"page"},{"location":"developer/logging/#Use-Cases","page":"Logging","title":"Use Cases","text":"","category":"section"},{"location":"developer/logging/#Enable-logging-in-REPL-or-Jupyter-Notebook","page":"Logging","title":"Enable logging in REPL or Jupyter Notebook","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"Use configure_logging to create a logger with your preferences (console and/or file, levels, etc.).","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"Note: log messages are not automatically flushed to files. Call flush(logger) to make this happen.","category":"page"},{"location":"developer/logging/#Example","page":"Logging","title":"Example","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\nflush(logger)\n@error \"some error\"\nclose(logger)","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"The function provides lots of customization. Refer to the docstring for complete details.","category":"page"},{"location":"developer/logging/#Log-to-console-and-file-in-an-application-or-unit-test-environment.","page":"Logging","title":"Log to console and file in an application or unit test environment.","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"Create a MultiLogger from Logging.ConsoleLogger and Logging.SimpleLogger. Use open_file_logger to guarantee that all messages get flushed to the file.","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"console_logger = ConsoleLogger(stderr, Logging.Error)\n\nopen_file_logger(\"log.txt\", Logging.Info) do file_logger\n    multi_logger = MultiLogger([console_logger, file_logger])\n    global_logger(multi_logger)\n\n    do_stuff()\nend","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"Note: If someone may execute the code in the REPL then wrap that code in a try/finally block and reset the global logger upon exit.","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"function run_tests()\n    console_logger = ConsoleLogger(stderr, Logging.Error)\n\n    open_file_logger(\"log.txt\", Logging.Info) do file_logger\n        multi_logger = MultiLogger([console_logger, file_logger])\n        global_logger(multi_logger)\n\n        do_stuff()\n    end\nend\n\nlogger = global_logger()\n\ntry\n    run_tests()\nfinally\n    # Guarantee that the global logger is reset.\n    global_logger(logger)\n    nothing\nend","category":"page"},{"location":"developer/logging/#Suppress-frequent-messages","page":"Logging","title":"Suppress frequent messages","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"The standard Logging module in Julia provides a method to suppress messages. Tag the log message with maxlog=X.","category":"page"},{"location":"developer/logging/#Example-2","page":"Logging","title":"Example","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"for i in range(1, length=100)\n    @error \"something happened\" i maxlog=2\nend","category":"page"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"Only 2 messages will get logged.","category":"page"},{"location":"developer/logging/#Get-a-summary-of-log-messages","page":"Logging","title":"Get a summary of log messages","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"By default a MultiLogger creates a LogEventTracker that keeps counts of all messages. Call report_log_summary after execution.","category":"page"},{"location":"developer/logging/#Example-3","page":"Logging","title":"Example","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\n\n# Include a summary in the log file.\n@info report_log_summary(logger)\nclose(logger)","category":"page"},{"location":"developer/logging/#Example-output","page":"Logging","title":"Example output","text":"","category":"section"},{"location":"developer/logging/","page":"Logging","title":"Logging","text":"julia> for i in range(1, length=100)\n           @info \"hello\" maxlog=2\n           @warn \"beware\" maxlog=2\n       end\njulia> @info report_log_summary(logger)\nâ”Œ Info:\nâ”‚ Log message summary:\nâ”‚\nâ”‚ 0 Error events:\nâ”‚\nâ”‚ 1 Warn events:\nâ”‚   count=100 at REPL[19]:3\nâ”‚     example message=\"beware\"\nâ”‚     suppressed=98\nâ”‚\nâ”‚ 1 Info events:\nâ”‚   count=100 at REPL[19]:2\nâ”‚     example message=\"hello\"\nâ””     suppressed=98","category":"page"},{"location":"model_library/generated_HVDCLine/#HVDCLine","page":"HVDCLine","title":"HVDCLine","text":"","category":"section"},{"location":"model_library/generated_HVDCLine/","page":"HVDCLine","title":"HVDCLine","text":"Modules = [PowerSystems]\nPages   = [\"generated/HVDCLine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_HVDCLine/#PowerSystems.HVDCLine","page":"HVDCLine","title":"PowerSystems.HVDCLine","text":"mutable struct HVDCLine <: DCBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    arc::Arc\n    active_power_limits_from::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    active_power_limits_to::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits_from::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits_to::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    loss::NamedTuple{(:l0, :l1), Tuple{Float64, Float64}}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\na High voltage DC line.\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\narc::Arc\nactive_power_limits_from::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nactive_power_limits_to::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits_from::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits_to::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nloss::NamedTuple{(:l0, :l1), Tuple{Float64, Float64}}\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_active_power_flow-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::HVDCLine) -> Any\n\n\nGet HVDCLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_active_power_limits_from-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_active_power_limits_from","text":"get_active_power_limits_from(value::HVDCLine) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HVDCLine active_power_limits_from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_active_power_limits_to-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_active_power_limits_to","text":"get_active_power_limits_to(value::HVDCLine) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HVDCLine active_power_limits_to.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_arc-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_arc","text":"get_arc(value::HVDCLine) -> Arc\n\n\nGet HVDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_available-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_available","text":"get_available(value::HVDCLine) -> Bool\n\n\nGet HVDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_ext-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_ext","text":"get_ext(value::HVDCLine) -> Dict{String,Any}\n\n\nGet HVDCLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_internal-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_internal","text":"get_internal(value::HVDCLine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet HVDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_loss-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_loss","text":"get_loss(value::HVDCLine) -> NamedTuple{(:l0, :l1),Tuple{Float64,Float64}}\n\n\nGet HVDCLine loss.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_reactive_power_limits_from-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_reactive_power_limits_from","text":"get_reactive_power_limits_from(value::HVDCLine) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HVDCLine reactive_power_limits_from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_reactive_power_limits_to-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_reactive_power_limits_to","text":"get_reactive_power_limits_to(value::HVDCLine) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HVDCLine reactive_power_limits_to.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.get_services-Tuple{HVDCLine}","page":"HVDCLine","title":"PowerSystems.get_services","text":"get_services(value::HVDCLine) -> Array{Service,1}\n\n\nGet HVDCLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_active_power_flow!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_active_power_limits_from!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_active_power_limits_from!","text":"set_active_power_limits_from!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine active_power_limits_from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_active_power_limits_to!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_active_power_limits_to!","text":"set_active_power_limits_to!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine active_power_limits_to.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_arc!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_arc!","text":"set_arc!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_available!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_available!","text":"set_available!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_ext!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_ext!","text":"set_ext!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_internal!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_internal!","text":"set_internal!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_loss!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_loss!","text":"set_loss!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine loss.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_reactive_power_limits_from!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_reactive_power_limits_from!","text":"set_reactive_power_limits_from!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine reactive_power_limits_from.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_reactive_power_limits_to!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_reactive_power_limits_to!","text":"set_reactive_power_limits_to!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine reactive_power_limits_to.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HVDCLine/#PowerSystems.set_services!-Tuple{HVDCLine,Any}","page":"HVDCLine","title":"PowerSystems.set_services!","text":"set_services!(value::HVDCLine, val::Any) -> Any\n\n\nSet HVDCLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#Area","page":"Area","title":"Area","text":"","category":"section"},{"location":"model_library/generated_Area/","page":"Area","title":"Area","text":"Modules = [PowerSystems]\nPages   = [\"generated/Area.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Area/#PowerSystems.Area","page":"Area","title":"PowerSystems.Area","text":"mutable struct Area <: AggregationTopology\n    name::String\n    peak_active_power::Float64\n    peak_reactive_power::Float64\n    load_response::Float64\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nA collection of buses for control purposes.\n\nArguments\n\nname::String\npeak_active_power::Float64\npeak_reactive_power::Float64\nload_response::Float64\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Area/#PowerSystems.get_internal-Tuple{Area}","page":"Area","title":"PowerSystems.get_internal","text":"get_internal(value::Area) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Area internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.get_load_response-Tuple{Area}","page":"Area","title":"PowerSystems.get_load_response","text":"get_load_response(value::Area) -> Float64\n\n\nGet Area load_response.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.get_peak_active_power-Tuple{Area}","page":"Area","title":"PowerSystems.get_peak_active_power","text":"get_peak_active_power(value::Area) -> Float64\n\n\nGet Area peak_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.get_peak_reactive_power-Tuple{Area}","page":"Area","title":"PowerSystems.get_peak_reactive_power","text":"get_peak_reactive_power(value::Area) -> Float64\n\n\nGet Area peak_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.set_internal!-Tuple{Area,Any}","page":"Area","title":"PowerSystems.set_internal!","text":"set_internal!(value::Area, val::Any) -> Any\n\n\nSet Area internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.set_load_response!-Tuple{Area,Any}","page":"Area","title":"PowerSystems.set_load_response!","text":"set_load_response!(value::Area, val::Any) -> Any\n\n\nSet Area load_response.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.set_peak_active_power!-Tuple{Area,Any}","page":"Area","title":"PowerSystems.set_peak_active_power!","text":"set_peak_active_power!(value::Area, val::Any) -> Any\n\n\nSet Area peak_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Area/#PowerSystems.set_peak_reactive_power!-Tuple{Area,Any}","page":"Area","title":"PowerSystems.set_peak_reactive_power!","text":"set_peak_reactive_power!(value::Area, val::Any) -> Any\n\n\nSet Area peak_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"modeler/generated_network_matrices/","page":"Network Matrices","title":"Network Matrices","text":"EditURL = \"https://github.com/NREL-SIIP/PowerSystems.jl/blob/master/docs/src/modeler/network_matrices.jl\"","category":"page"},{"location":"modeler/generated_network_matrices/","page":"Network Matrices","title":"Network Matrices","text":"CurrentModule = PowerSystems","category":"page"},{"location":"modeler/generated_network_matrices/#Network-Matrices","page":"Network Matrices","title":"Network Matrices","text":"","category":"section"},{"location":"modeler/generated_network_matrices/","page":"Network Matrices","title":"Network Matrices","text":"Use these matrices wisely","category":"page"},{"location":"modeler/generated_network_matrices/","page":"Network Matrices","title":"Network Matrices","text":"Modules = [PowerSystems]\nPages   = [\"utils/network_calculations/ybus_calculations.jl\",\n           \"utils/network_calculations/ptdf_calculations.jl\",\n           \"utils/network_calculations/lodf_calculations.jl\"]","category":"page"},{"location":"modeler/generated_network_matrices/#PowerSystems.Ybus","page":"Network Matrices","title":"PowerSystems.Ybus","text":"Nodal admittance matrix (Ybus) is an N x N matrix describing a power system with N buses. It represents the nodal admittance of the buses in a power system.\n\nThe Ybus Struct is indexed using the Bus Numbers, no need for them to be sequential\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.Ybus-Tuple{Any,Any}","page":"Network Matrices","title":"PowerSystems.Ybus","text":"Ybus(branches::Any, nodes::Any; check_connectivity) -> Ybus\n\n\nBuilds a Ybus from a collection of buses and branches. The return is a Ybus Array indexed with the bus numbers and the branch names.\n\nKeyword arguments\n\ncheck_connectivity::Bool: Checks connectivity of the network using Goderya's algorithm\n\n\n\n\n\n","category":"method"},{"location":"modeler/generated_network_matrices/#PowerSystems.PTDF","page":"Network Matrices","title":"PowerSystems.PTDF","text":"Power Transfer Distribution Factors (PTDF) indicate the incremental change in real power that occurs on transmission lines due to real power injections changes at the buses.\n\nThe PTDF struct is indexed using the Bus numbers and branch names\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.PTDF-2","page":"Network Matrices","title":"PowerSystems.PTDF","text":"PTDF(sys::System) -> PTDF\nPTDF(sys::System, dist_slack::Array{Float64,1}) -> PTDF\n\n\nBuilds the PTDF matrix from a system. The return is a PTDF array indexed with the bus numbers.\n\nKeyword arguments\n\ndist_slack::Vector{Float64}: Vector of weights to be used as distributed slack bus.   The distributed slack vector has to be the same length as the number of buses\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.PTDF-3","page":"Network Matrices","title":"PowerSystems.PTDF","text":"PTDF(branches::Any, nodes::Any) -> PTDF\nPTDF(branches::Any, nodes::Any, dist_slack::Array{Float64,1}) -> PTDF\n\n\nBuilds the PTDF matrix from a group of branches and nodes. The return is a PTDF array indexed with the bus numbers.\n\nKeyword arguments\n\ndist_slack::Vector{Float64}: Vector of weights to be used as distributed slack bus.   The distributed slack vector has to be the same length as the number of buses\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.LODF","page":"Network Matrices","title":"PowerSystems.LODF","text":"Line Outage Distribution Factors (LODFs) are a sensitivity measure of how a change in a lineâ€™s flow affects the flows on other lines in the system.\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.LODF-2","page":"Network Matrices","title":"PowerSystems.LODF","text":"LODF(sys::System) -> LODF\nLODF(sys::System, dist_slack::Array{Float64,1}) -> LODF\n\n\nBuilds the LODF matrix from a system. The return is a LOLDF array indexed with the branch name.\n\nKeyword arguments\n\ndist_slack::Vector{Float64}: Vector of weights to be used as distributed slack bus.   The distributed slack vector has to be the same length as the number of buses\n\n\n\n\n\n","category":"type"},{"location":"modeler/generated_network_matrices/#PowerSystems.LODF-3","page":"Network Matrices","title":"PowerSystems.LODF","text":"LODF(branches::Any, nodes::Any) -> LODF\nLODF(branches::Any, nodes::Any, dist_slack::Array{Float64,1}) -> LODF\n\n\nBuilds the LODF matrix from a group of branches and nodes. The return is a LOLDF array indexed with the branch name.\n\nKeyword arguments\n\ndist_slack::Vector{Float64}: Vector of weights to be used as distributed slack bus.   The distributed slack vector has to be the same length as the number of buses\n\n\n\n\n\n","category":"type"},{"location":"user_guide/system/#System","page":"System","title":"System","text":"","category":"section"},{"location":"user_guide/system/","page":"System","title":"System","text":"The container of all system components is System.","category":"page"},{"location":"user_guide/system/","page":"System","title":"System","text":"This Section is under construction, refer to the # Constructing a System from raw dat section.","category":"page"},{"location":"user_guide/system/","page":"System","title":"System","text":"System","category":"page"},{"location":"user_guide/system/#PowerSystems.System","page":"System","title":"PowerSystems.System","text":"System\n\nA power system defined by fields for base_power, components, and forecasts.\n\nSystem(base_power)\nSystem(components, base_power)\nSystem(buses, generators, loads, branches, storage, base_power, services, annex; kwargs...)\nSystem(buses, generators, loads, base_power; kwargs...)\nSystem(file; kwargs...)\nSystem(; buses, generators, loads, branches, storage, base_power, services, annex, kwargs...)\nSystem(; kwargs...)\n\nArguments\n\nbuses::Vector{Bus}: an array of buses\ngenerators::Vector{Generator}: an array of generators of (possibly) different types\nloads::Vector{ElectricLoad}: an array of load specifications that includes timing of the loads\nbranches::Union{Nothing, Vector{Branch}}: an array of branches; may be nothing\nstorage::Union{Nothing, Vector{Storage}}: an array of storage devices; may be nothing\nbase_power::Float64: the base power value for the system\nservices::Union{Nothing, Vector{<:Service}}: an array of services; may be nothing\n\nKeyword arguments\n\nrunchecks::Bool: Run available checks on input fields and when add_component! is called. Throws InvalidRange if an error is found.\ntime_series_in_memory::Bool=false: Store time series data in memory instead of HDF5.\nconfig_path::String: specify path to validation config file\n\n\n\n\n\n","category":"type"},{"location":"model_library/regulation_device/#Regulation-Device","page":"Regulation Device","title":"Regulation Device","text":"","category":"section"},{"location":"model_library/regulation_device/","page":"Regulation Device","title":"Regulation Device","text":"Modules = [PowerSystems]\nPages   = [\"models/regulation_device.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/regulation_device/#PowerSystems.RegulationDevice","page":"Regulation Device","title":"PowerSystems.RegulationDevice","text":"Parametric struct to allow Injection Devices to be used in regulation services. Extends the device type and provides additional fields relevant to regulation services.\n\n\n\n\n\n","category":"type"},{"location":"model_library/regulation_device/#PowerSystems.RegulationDevice-Union{Tuple{T}, Tuple{T}} where T<:StaticInjection","page":"Regulation Device","title":"PowerSystems.RegulationDevice","text":"Default constructor for the Regulation Device\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#ThermalStandard","page":"ThermalStandard","title":"ThermalStandard","text":"","category":"section"},{"location":"model_library/generated_ThermalStandard/","page":"ThermalStandard","title":"ThermalStandard","text":"Modules = [PowerSystems]\nPages   = [\"generated/ThermalStandard.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.ThermalStandard","page":"ThermalStandard","title":"PowerSystems.ThermalStandard","text":"mutable struct ThermalStandard <: ThermalGen\n    name::String\n    available::Bool\n    status::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits::Union{Nothing, Min_Max}\n    ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    operation_cost::ThreePartCost\n    base_power::Float64\n    time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    prime_mover::PrimeMovers.PrimeMover\n    fuel::ThermalFuels.ThermalFuel\n    services::Vector{Service}\n    time_at_status::Float64\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for thermal generation technologies.\n\nArguments\n\nname::String\navailable::Bool\nstatus::Bool\nbus::Bus\nactive_power::Float64, validation range: active_power_limits, action if invalid: warn\nreactive_power::Float64, validation range: reactive_power_limits, action if invalid: warn\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nactive_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits::Union{Nothing, Min_Max}\nramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error\noperation_cost::ThreePartCost\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\ntime_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\nfuel::ThermalFuels.ThermalFuel: Prime mover fuel according to EIA 923\nservices::Vector{Service}: Services that this device contributes to\ntime_at_status::Float64\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_active_power-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_active_power","text":"get_active_power(value::ThermalStandard) -> Any\n\n\nGet ThermalStandard active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_active_power_limits-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_active_power_limits","text":"get_active_power_limits(value::ThermalStandard) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet ThermalStandard active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_available-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_available","text":"get_available(value::ThermalStandard) -> Bool\n\n\nGet ThermalStandard available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_base_power-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_base_power","text":"get_base_power(value::ThermalStandard) -> Float64\n\n\nGet ThermalStandard base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_bus-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_bus","text":"get_bus(value::ThermalStandard) -> Bus\n\n\nGet ThermalStandard bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_dynamic_injector-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::ThermalStandard) -> Union{Nothing, DynamicInjection}\n\n\nGet ThermalStandard dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_ext-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_ext","text":"get_ext(value::ThermalStandard) -> Dict{String,Any}\n\n\nGet ThermalStandard ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_fuel-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_fuel","text":"get_fuel(value::ThermalStandard) -> PowerSystems.ThermalFuels.ThermalFuel\n\n\nGet ThermalStandard fuel.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_internal-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_internal","text":"get_internal(value::ThermalStandard) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ThermalStandard internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_operation_cost-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::ThermalStandard) -> ThreePartCost\n\n\nGet ThermalStandard operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_prime_mover-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::ThermalStandard) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet ThermalStandard prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_ramp_limits-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_ramp_limits","text":"get_ramp_limits(value::ThermalStandard) -> Union{Nothing, NamedTuple{(:up, :down),_A} where _A<:Tuple}\n\n\nGet ThermalStandard ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_rating-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_rating","text":"get_rating(value::ThermalStandard) -> Any\n\n\nGet ThermalStandard rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_reactive_power-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::ThermalStandard) -> Any\n\n\nGet ThermalStandard reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_reactive_power_limits-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::ThermalStandard) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet ThermalStandard reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_services-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_services","text":"get_services(value::ThermalStandard) -> Array{Service,1}\n\n\nGet ThermalStandard services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_status-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_status","text":"get_status(value::ThermalStandard) -> Bool\n\n\nGet ThermalStandard status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_time_at_status-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_time_at_status","text":"get_time_at_status(value::ThermalStandard) -> Float64\n\n\nGet ThermalStandard time_at_status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.get_time_limits-Tuple{ThermalStandard}","page":"ThermalStandard","title":"PowerSystems.get_time_limits","text":"get_time_limits(value::ThermalStandard) -> Union{Nothing, NamedTuple{(:up, :down),Tuple{Float64,Float64}}}\n\n\nGet ThermalStandard time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_active_power!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_active_power_limits!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_active_power_limits!","text":"set_active_power_limits!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_available!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_available!","text":"set_available!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_base_power!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_bus!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_bus!","text":"set_bus!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_ext!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_ext!","text":"set_ext!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_fuel!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_fuel!","text":"set_fuel!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard fuel.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_internal!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_internal!","text":"set_internal!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_operation_cost!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_prime_mover!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_ramp_limits!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_ramp_limits!","text":"set_ramp_limits!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_rating!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_rating!","text":"set_rating!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_reactive_power!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_reactive_power_limits!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_services!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_services!","text":"set_services!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_status!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_status!","text":"set_status!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_time_at_status!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_time_at_status!","text":"set_time_at_status!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard time_at_status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalStandard/#PowerSystems.set_time_limits!-Tuple{ThermalStandard,Any}","page":"ThermalStandard","title":"PowerSystems.set_time_limits!","text":"set_time_limits!(value::ThermalStandard, val::Any) -> Any\n\n\nSet ThermalStandard time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#VariableReserveNonSpinning","page":"VariableReserveNonSpinning","title":"VariableReserveNonSpinning","text":"","category":"section"},{"location":"model_library/generated_VariableReserveNonSpinning/","page":"VariableReserveNonSpinning","title":"VariableReserveNonSpinning","text":"Modules = [PowerSystems]\nPages   = [\"generated/VariableReserveNonSpinning.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.VariableReserveNonSpinning","page":"VariableReserveNonSpinning","title":"PowerSystems.VariableReserveNonSpinning","text":"mutable struct VariableReserveNonSpinning <: ReserveNonSpinning\n    name::String\n    available::Bool\n    time_frame::Float64\n    requirement::Float64\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    operation_cost::Union{Nothing, TwoPartCost}\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for the procurement products for system simulations.\n\nArguments\n\nname::String\navailable::Bool\ntime_frame::Float64: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error\nrequirement::Float64: the required quantity of the product should be scaled by a Forecast\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\noperation_cost::Union{Nothing, TwoPartCost}: Cost for providing reserves  TwoPartCost\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_available-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_available","text":"get_available(value::VariableReserveNonSpinning) -> Bool\n\n\nGet VariableReserveNonSpinning available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_ext-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_ext","text":"get_ext(value::VariableReserveNonSpinning) -> Dict{String,Any}\n\n\nGet VariableReserveNonSpinning ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_internal-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_internal","text":"get_internal(value::VariableReserveNonSpinning) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet VariableReserveNonSpinning internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_operation_cost-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::VariableReserveNonSpinning) -> Union{Nothing, TwoPartCost}\n\n\nGet VariableReserveNonSpinning operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_requirement-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_requirement","text":"get_requirement(value::VariableReserveNonSpinning) -> Float64\n\n\nGet VariableReserveNonSpinning requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.get_time_frame-Tuple{VariableReserveNonSpinning}","page":"VariableReserveNonSpinning","title":"PowerSystems.get_time_frame","text":"get_time_frame(value::VariableReserveNonSpinning) -> Float64\n\n\nGet VariableReserveNonSpinning time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_available!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_available!","text":"set_available!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_ext!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_ext!","text":"set_ext!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_internal!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_internal!","text":"set_internal!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_operation_cost!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_requirement!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VariableReserveNonSpinning/#PowerSystems.set_time_frame!-Tuple{VariableReserveNonSpinning,Any}","page":"VariableReserveNonSpinning","title":"PowerSystems.set_time_frame!","text":"set_time_frame!(value::VariableReserveNonSpinning, val::Any) -> Any\n\n\nSet VariableReserveNonSpinning time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#Converter","page":"Converter","title":"Converter","text":"","category":"section"},{"location":"model_library/generated_Converter/#AverageConverter","page":"Converter","title":"AverageConverter","text":"","category":"section"},{"location":"model_library/generated_Converter/","page":"Converter","title":"Converter","text":"Modules = [PowerSystems]\nPages   = [\"/AverageConverter.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Converter/#PowerSystems.AverageConverter","page":"Converter","title":"PowerSystems.AverageConverter","text":"mutable struct AverageConverter <: Converter\n    rated_voltage::Float64\n    rated_current::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of an average converter model\n\nArguments\n\nrated_voltage::Float64: rated voltage, validation range: (0, nothing)\nrated_current::Float64: rated VA, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}\nn_states::Int: AverageConverter has no states\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Converter/#PowerSystems.get_ext-Tuple{AverageConverter}","page":"Converter","title":"PowerSystems.get_ext","text":"get_ext(value::AverageConverter) -> Dict{String,Any}\n\n\nGet AverageConverter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.get_n_states-Tuple{AverageConverter}","page":"Converter","title":"PowerSystems.get_n_states","text":"get_n_states(value::AverageConverter) -> Int64\n\n\nGet AverageConverter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.get_rated_current-Tuple{AverageConverter}","page":"Converter","title":"PowerSystems.get_rated_current","text":"get_rated_current(value::AverageConverter) -> Float64\n\n\nGet AverageConverter rated_current.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.get_rated_voltage-Tuple{AverageConverter}","page":"Converter","title":"PowerSystems.get_rated_voltage","text":"get_rated_voltage(value::AverageConverter) -> Float64\n\n\nGet AverageConverter rated_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.get_states-Tuple{AverageConverter}","page":"Converter","title":"PowerSystems.get_states","text":"get_states(value::AverageConverter) -> Array{Symbol,1}\n\n\nGet AverageConverter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.set_ext!-Tuple{AverageConverter,Any}","page":"Converter","title":"PowerSystems.set_ext!","text":"set_ext!(value::AverageConverter, val::Any) -> Any\n\n\nSet AverageConverter ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.set_n_states!-Tuple{AverageConverter,Any}","page":"Converter","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AverageConverter, val::Any) -> Any\n\n\nSet AverageConverter n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.set_rated_current!-Tuple{AverageConverter,Any}","page":"Converter","title":"PowerSystems.set_rated_current!","text":"set_rated_current!(value::AverageConverter, val::Any) -> Any\n\n\nSet AverageConverter rated_current.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.set_rated_voltage!-Tuple{AverageConverter,Any}","page":"Converter","title":"PowerSystems.set_rated_voltage!","text":"set_rated_voltage!(value::AverageConverter, val::Any) -> Any\n\n\nSet AverageConverter rated_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Converter/#PowerSystems.set_states!-Tuple{AverageConverter,Any}","page":"Converter","title":"PowerSystems.set_states!","text":"set_states!(value::AverageConverter, val::Any) -> Any\n\n\nSet AverageConverter states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PhaseShiftingTransformer","page":"PhaseShiftingTransformer","title":"PhaseShiftingTransformer","text":"","category":"section"},{"location":"model_library/generated_PhaseShiftingTransformer/","page":"PhaseShiftingTransformer","title":"PhaseShiftingTransformer","text":"Modules = [PowerSystems]\nPages   = [\"generated/PhaseShiftingTransformer.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.PhaseShiftingTransformer","page":"PhaseShiftingTransformer","title":"PowerSystems.PhaseShiftingTransformer","text":"mutable struct PhaseShiftingTransformer <: ACBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    reactive_power_flow::Float64\n    arc::Arc\n    r::Float64\n    x::Float64\n    primary_shunt::Float64\n    tap::Float64\n    Î±::Float64\n    rate::Union{Nothing, Float64}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\nreactive_power_flow::Float64\narc::Arc\nr::Float64: System per-unit value, validation range: (0, 4), action if invalid: error\nx::Float64: System per-unit value, validation range: (-2, 4), action if invalid: error\nprimary_shunt::Float64, validation range: (0, 2), action if invalid: error\ntap::Float64, validation range: (0, 2), action if invalid: error\nÎ±::Float64, validation range: (-1.571, 1.571), action if invalid: warn\nrate::Union{Nothing, Float64}, validation range: (0, nothing), action if invalid: error\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_active_power_flow-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::PhaseShiftingTransformer) -> Any\n\n\nGet PhaseShiftingTransformer active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_arc-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_arc","text":"get_arc(value::PhaseShiftingTransformer) -> Arc\n\n\nGet PhaseShiftingTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_available-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_available","text":"get_available(value::PhaseShiftingTransformer) -> Bool\n\n\nGet PhaseShiftingTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_ext-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_ext","text":"get_ext(value::PhaseShiftingTransformer) -> Dict{String,Any}\n\n\nGet PhaseShiftingTransformer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_internal-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_internal","text":"get_internal(value::PhaseShiftingTransformer) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet PhaseShiftingTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_primary_shunt-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_primary_shunt","text":"get_primary_shunt(value::PhaseShiftingTransformer) -> Float64\n\n\nGet PhaseShiftingTransformer primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_r-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_r","text":"get_r(value::PhaseShiftingTransformer) -> Float64\n\n\nGet PhaseShiftingTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_rate-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_rate","text":"get_rate(value::PhaseShiftingTransformer) -> Any\n\n\nGet PhaseShiftingTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_reactive_power_flow-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::PhaseShiftingTransformer) -> Any\n\n\nGet PhaseShiftingTransformer reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_services-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_services","text":"get_services(value::PhaseShiftingTransformer) -> Array{Service,1}\n\n\nGet PhaseShiftingTransformer services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_tap-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_tap","text":"get_tap(value::PhaseShiftingTransformer) -> Float64\n\n\nGet PhaseShiftingTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_x-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_x","text":"get_x(value::PhaseShiftingTransformer) -> Float64\n\n\nGet PhaseShiftingTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.get_Î±-Tuple{PhaseShiftingTransformer}","page":"PhaseShiftingTransformer","title":"PowerSystems.get_Î±","text":"get_Î±(value::PhaseShiftingTransformer) -> Float64\n\n\nGet PhaseShiftingTransformer Î±.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_active_power_flow!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_arc!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_arc!","text":"set_arc!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_available!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_available!","text":"set_available!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_ext!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_ext!","text":"set_ext!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_internal!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_internal!","text":"set_internal!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_primary_shunt!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_primary_shunt!","text":"set_primary_shunt!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_r!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_r!","text":"set_r!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_rate!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_rate!","text":"set_rate!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_reactive_power_flow!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_services!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_services!","text":"set_services!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_tap!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_tap!","text":"set_tap!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_x!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_x!","text":"set_x!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PhaseShiftingTransformer/#PowerSystems.set_Î±!-Tuple{PhaseShiftingTransformer,Any}","page":"PhaseShiftingTransformer","title":"PowerSystems.set_Î±!","text":"set_Î±!(value::PhaseShiftingTransformer, val::Any) -> Any\n\n\nSet PhaseShiftingTransformer Î±.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#Bus","page":"Bus","title":"Bus","text":"","category":"section"},{"location":"model_library/generated_Bus/","page":"Bus","title":"Bus","text":"Modules = [PowerSystems]\nPages   = [\"generated/Bus.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Bus/#PowerSystems.Bus","page":"Bus","title":"PowerSystems.Bus","text":"mutable struct Bus <: Topology\n    number::Int\n    name::String\n    bustype::Union{Nothing, BusTypes.BusType}\n    angle::Union{Nothing, Float64}\n    magnitude::Union{Nothing, Float64}\n    voltage_limits::Union{Nothing, Min_Max}\n    base_voltage::Union{Nothing, Float64}\n    area::Union{Nothing, Area}\n    load_zone::Union{Nothing, LoadZone}\n    ext::Dict{String, Any}\n    internal::InfrastructureSystemsInternal\nend\n\nA power-system bus.\n\nArguments\n\nnumber::Int: number associated with the bus\nname::String: the name of the bus\nbustype::Union{Nothing, BusTypes.BusType}: bus type\nangle::Union{Nothing, Float64}: angle of the bus in radians, validation range: (-1.571, 1.571), action if invalid: error\nmagnitude::Union{Nothing, Float64}: voltage as a multiple of basevoltage, validation range: voltage_limits, action if invalid: warn\nvoltage_limits::Union{Nothing, Min_Max}: limits on the voltage variation as multiples of basevoltage\nbase_voltage::Union{Nothing, Float64}: the base voltage in kV, validation range: (0, nothing), action if invalid: error\narea::Union{Nothing, Area}: the area containing the bus\nload_zone::Union{Nothing, LoadZone}: the load zone containing the bus\next::Dict{String, Any}\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Bus/#PowerSystems.get_angle-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_angle","text":"get_angle(value::Bus) -> Union{Nothing, Float64}\n\n\nGet Bus angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_area-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_area","text":"get_area(value::Bus) -> Union{Nothing, Area}\n\n\nGet Bus area.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_base_voltage-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_base_voltage","text":"get_base_voltage(value::Bus) -> Union{Nothing, Float64}\n\n\nGet Bus base_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_bustype-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_bustype","text":"get_bustype(value::Bus) -> Union{Nothing, PowerSystems.BusTypes.BusType}\n\n\nGet Bus bustype.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_ext-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_ext","text":"get_ext(value::Bus) -> Dict{String,Any}\n\n\nGet Bus ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_internal-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_internal","text":"get_internal(value::Bus) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Bus internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_load_zone-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_load_zone","text":"get_load_zone(value::Bus) -> Union{Nothing, LoadZone}\n\n\nGet Bus load_zone.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_magnitude-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_magnitude","text":"get_magnitude(value::Bus) -> Union{Nothing, Float64}\n\n\nGet Bus magnitude.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_number-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_number","text":"get_number(value::Bus) -> Int64\n\n\nGet Bus number.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.get_voltage_limits-Tuple{Bus}","page":"Bus","title":"PowerSystems.get_voltage_limits","text":"get_voltage_limits(value::Bus) -> Union{Nothing, NamedTuple{(:min, :max),Tuple{Float64,Float64}}}\n\n\nGet Bus voltage_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_angle!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_angle!","text":"set_angle!(value::Bus, val::Any) -> Any\n\n\nSet Bus angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_area!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_area!","text":"set_area!(value::Bus, val::Any) -> Area\n\n\nSet Bus area.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_base_voltage!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_base_voltage!","text":"set_base_voltage!(value::Bus, val::Any) -> Any\n\n\nSet Bus base_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_bustype!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_bustype!","text":"set_bustype!(value::Bus, val::Any) -> Any\n\n\nSet Bus bustype.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_ext!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_ext!","text":"set_ext!(value::Bus, val::Any) -> Any\n\n\nSet Bus ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_internal!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_internal!","text":"set_internal!(value::Bus, val::Any) -> Any\n\n\nSet Bus internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_load_zone!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_load_zone!","text":"set_load_zone!(value::Bus, val::Any) -> LoadZone\n\n\nSet Bus load_zone.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_magnitude!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_magnitude!","text":"set_magnitude!(value::Bus, val::Any) -> Any\n\n\nSet Bus magnitude.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_number!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_number!","text":"set_number!(value::Bus, val::Any) -> Any\n\n\nSet Bus number.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Bus/#PowerSystems.set_voltage_limits!-Tuple{Bus,Any}","page":"Bus","title":"PowerSystems.set_voltage_limits!","text":"set_voltage_limits!(value::Bus, val::Any) -> Any\n\n\nSet Bus voltage_limits.\n\n\n\n\n\n","category":"method"},{"location":"modeler/generated_modeling_with_JuMP/","page":"Modeling With Jump","title":"Modeling With Jump","text":"EditURL = \"https://github.com/NREL-SIIP/PowerSystems.jl/blob/master/docs/src/modeler/modeling_with_JuMP.jl\"","category":"page"},{"location":"modeler/generated_modeling_with_JuMP/#Modeling-with-JuMP","page":"Modeling With Jump","title":"Modeling with JuMP","text":"","category":"section"},{"location":"modeler/generated_modeling_with_JuMP/","page":"Modeling With Jump","title":"Modeling With Jump","text":"using PowerSystems\nusing JuMP","category":"page"},{"location":"model_library/generated_ThreePartCost/#ThreePartCost","page":"ThreePartCost","title":"ThreePartCost","text":"","category":"section"},{"location":"model_library/generated_ThreePartCost/","page":"ThreePartCost","title":"ThreePartCost","text":"Modules = [PowerSystems]\nPages   = [\"generated/ThreePartCost.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.ThreePartCost","page":"ThreePartCost","title":"PowerSystems.ThreePartCost","text":"mutable struct ThreePartCost <: OperationalCost\n    variable::VariableCost\n    fixed::Float64\n    startup::Float64\n    shutdn::Float64\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure Operational Cost Data in Three parts fixed, variable cost and start - stop costs.\n\nArguments\n\nvariable::VariableCost: variable cost\nfixed::Float64: fixed cost\nstartup::Float64: startup cost, validation range: (0, nothing), action if invalid: warn\nshutdn::Float64: shutdown cost, validation range: (0, nothing), action if invalid: warn\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.get_fixed-Tuple{ThreePartCost}","page":"ThreePartCost","title":"PowerSystems.get_fixed","text":"get_fixed(value::ThreePartCost) -> Float64\n\n\nGet ThreePartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.get_internal-Tuple{ThreePartCost}","page":"ThreePartCost","title":"PowerSystems.get_internal","text":"get_internal(value::ThreePartCost) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ThreePartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.get_shutdn-Tuple{ThreePartCost}","page":"ThreePartCost","title":"PowerSystems.get_shutdn","text":"get_shutdn(value::ThreePartCost) -> Float64\n\n\nGet ThreePartCost shutdn.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.get_startup-Tuple{ThreePartCost}","page":"ThreePartCost","title":"PowerSystems.get_startup","text":"get_startup(value::ThreePartCost) -> Float64\n\n\nGet ThreePartCost startup.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.get_variable-Tuple{ThreePartCost}","page":"ThreePartCost","title":"PowerSystems.get_variable","text":"get_variable(value::ThreePartCost) -> VariableCost\n\n\nGet ThreePartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.set_fixed!-Tuple{ThreePartCost,Any}","page":"ThreePartCost","title":"PowerSystems.set_fixed!","text":"set_fixed!(value::ThreePartCost, val::Any) -> Any\n\n\nSet ThreePartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.set_internal!-Tuple{ThreePartCost,Any}","page":"ThreePartCost","title":"PowerSystems.set_internal!","text":"set_internal!(value::ThreePartCost, val::Any) -> Any\n\n\nSet ThreePartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.set_shutdn!-Tuple{ThreePartCost,Any}","page":"ThreePartCost","title":"PowerSystems.set_shutdn!","text":"set_shutdn!(value::ThreePartCost, val::Any) -> Any\n\n\nSet ThreePartCost shutdn.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.set_startup!-Tuple{ThreePartCost,Any}","page":"ThreePartCost","title":"PowerSystems.set_startup!","text":"set_startup!(value::ThreePartCost, val::Any) -> Any\n\n\nSet ThreePartCost startup.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThreePartCost/#PowerSystems.set_variable!-Tuple{ThreePartCost,Any}","page":"ThreePartCost","title":"PowerSystems.set_variable!","text":"set_variable!(value::ThreePartCost, val::Any) -> Any\n\n\nSet ThreePartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#Transfer","page":"Transfer","title":"Transfer","text":"","category":"section"},{"location":"model_library/generated_Transfer/","page":"Transfer","title":"Transfer","text":"Modules = [PowerSystems]\nPages   = [\"generated/Transfer.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Transfer/#PowerSystems.Transfer","page":"Transfer","title":"PowerSystems.Transfer","text":"mutable struct Transfer <: Service\n    name::String\n    available::Bool\n    requirement::Float64\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nrequirement::Float64\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Transfer/#PowerSystems.get_available-Tuple{Transfer}","page":"Transfer","title":"PowerSystems.get_available","text":"get_available(value::Transfer) -> Bool\n\n\nGet Transfer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.get_ext-Tuple{Transfer}","page":"Transfer","title":"PowerSystems.get_ext","text":"get_ext(value::Transfer) -> Dict{String,Any}\n\n\nGet Transfer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.get_internal-Tuple{Transfer}","page":"Transfer","title":"PowerSystems.get_internal","text":"get_internal(value::Transfer) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Transfer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.get_requirement-Tuple{Transfer}","page":"Transfer","title":"PowerSystems.get_requirement","text":"get_requirement(value::Transfer) -> Float64\n\n\nGet Transfer requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.set_available!-Tuple{Transfer,Any}","page":"Transfer","title":"PowerSystems.set_available!","text":"set_available!(value::Transfer, val::Any) -> Any\n\n\nSet Transfer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.set_ext!-Tuple{Transfer,Any}","page":"Transfer","title":"PowerSystems.set_ext!","text":"set_ext!(value::Transfer, val::Any) -> Any\n\n\nSet Transfer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.set_internal!-Tuple{Transfer,Any}","page":"Transfer","title":"PowerSystems.set_internal!","text":"set_internal!(value::Transfer, val::Any) -> Any\n\n\nSet Transfer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transfer/#PowerSystems.set_requirement!-Tuple{Transfer,Any}","page":"Transfer","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::Transfer, val::Any) -> Any\n\n\nSet Transfer requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#VSCDCLine","page":"VSCDCLine","title":"VSCDCLine","text":"","category":"section"},{"location":"model_library/generated_VSCDCLine/","page":"VSCDCLine","title":"VSCDCLine","text":"Modules = [PowerSystems]\nPages   = [\"generated/VSCDCLine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.VSCDCLine","page":"VSCDCLine","title":"PowerSystems.VSCDCLine","text":"mutable struct VSCDCLine <: DCBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    arc::Arc\n    rectifier_tap_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    rectifier_xrc::Float64\n    rectifier_firing_angle::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    inverter_tap_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    inverter_xrc::Float64\n    inverter_firing_angle::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nAs implemented in Milano's Book, Page 397.\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\narc::Arc\nrectifier_tap_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nrectifier_xrc::Float64\nrectifier_firing_angle::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\ninverter_tap_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\ninverter_xrc::Float64\ninverter_firing_angle::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_active_power_flow-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::VSCDCLine) -> Any\n\n\nGet VSCDCLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_arc-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_arc","text":"get_arc(value::VSCDCLine) -> Arc\n\n\nGet VSCDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_available-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_available","text":"get_available(value::VSCDCLine) -> Bool\n\n\nGet VSCDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_ext-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_ext","text":"get_ext(value::VSCDCLine) -> Dict{String,Any}\n\n\nGet VSCDCLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_internal-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_internal","text":"get_internal(value::VSCDCLine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet VSCDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_inverter_firing_angle-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_inverter_firing_angle","text":"get_inverter_firing_angle(value::VSCDCLine) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet VSCDCLine inverter_firing_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_inverter_tap_limits-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_inverter_tap_limits","text":"get_inverter_tap_limits(value::VSCDCLine) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet VSCDCLine inverter_tap_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_inverter_xrc-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_inverter_xrc","text":"get_inverter_xrc(value::VSCDCLine) -> Float64\n\n\nGet VSCDCLine inverter_xrc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_rectifier_firing_angle-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_rectifier_firing_angle","text":"get_rectifier_firing_angle(value::VSCDCLine) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet VSCDCLine rectifier_firing_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_rectifier_tap_limits-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_rectifier_tap_limits","text":"get_rectifier_tap_limits(value::VSCDCLine) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet VSCDCLine rectifier_tap_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_rectifier_xrc-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_rectifier_xrc","text":"get_rectifier_xrc(value::VSCDCLine) -> Float64\n\n\nGet VSCDCLine rectifier_xrc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.get_services-Tuple{VSCDCLine}","page":"VSCDCLine","title":"PowerSystems.get_services","text":"get_services(value::VSCDCLine) -> Array{Service,1}\n\n\nGet VSCDCLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_active_power_flow!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_arc!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_arc!","text":"set_arc!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_available!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_available!","text":"set_available!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_ext!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_ext!","text":"set_ext!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_internal!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_internal!","text":"set_internal!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_inverter_firing_angle!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_inverter_firing_angle!","text":"set_inverter_firing_angle!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine inverter_firing_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_inverter_tap_limits!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_inverter_tap_limits!","text":"set_inverter_tap_limits!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine inverter_tap_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_inverter_xrc!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_inverter_xrc!","text":"set_inverter_xrc!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine inverter_xrc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_rectifier_firing_angle!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_rectifier_firing_angle!","text":"set_rectifier_firing_angle!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine rectifier_firing_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_rectifier_tap_limits!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_rectifier_tap_limits!","text":"set_rectifier_tap_limits!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine rectifier_tap_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_rectifier_xrc!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_rectifier_xrc!","text":"set_rectifier_xrc!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine rectifier_xrc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_VSCDCLine/#PowerSystems.set_services!-Tuple{VSCDCLine,Any}","page":"VSCDCLine","title":"PowerSystems.set_services!","text":"set_services!(value::VSCDCLine, val::Any) -> Any\n\n\nSet VSCDCLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerLoad","page":"PowerLoad","title":"PowerLoad","text":"","category":"section"},{"location":"model_library/generated_PowerLoad/","page":"PowerLoad","title":"PowerLoad","text":"Modules = [PowerSystems]\nPages   = [\"generated/PowerLoad.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_PowerLoad/#PowerSystems.PowerLoad","page":"PowerLoad","title":"PowerSystems.PowerLoad","text":"mutable struct PowerLoad <: StaticLoad\n    name::String\n    available::Bool\n    bus::Bus\n    model::Union{Nothing, LoadModels.LoadModel}\n    active_power::Float64\n    reactive_power::Float64\n    base_power::Float64\n    max_active_power::Float64\n    max_reactive_power::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData structure for a static power load.\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nmodel::Union{Nothing, LoadModels.LoadModel}\nactive_power::Float64\nreactive_power::Float64\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nmax_active_power::Float64\nmax_reactive_power::Float64\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_active_power-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_active_power","text":"get_active_power(value::PowerLoad) -> Any\n\n\nGet PowerLoad active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_available-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_available","text":"get_available(value::PowerLoad) -> Bool\n\n\nGet PowerLoad available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_base_power-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_base_power","text":"get_base_power(value::PowerLoad) -> Float64\n\n\nGet PowerLoad base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_bus-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_bus","text":"get_bus(value::PowerLoad) -> Bus\n\n\nGet PowerLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_dynamic_injector-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::PowerLoad) -> Union{Nothing, DynamicInjection}\n\n\nGet PowerLoad dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_ext-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_ext","text":"get_ext(value::PowerLoad) -> Dict{String,Any}\n\n\nGet PowerLoad ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_internal-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_internal","text":"get_internal(value::PowerLoad) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet PowerLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_max_active_power-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_max_active_power","text":"get_max_active_power(value::PowerLoad) -> Any\n\n\nGet PowerLoad max_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_max_reactive_power-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_max_reactive_power","text":"get_max_reactive_power(value::PowerLoad) -> Any\n\n\nGet PowerLoad max_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_model-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_model","text":"get_model(value::PowerLoad) -> Union{Nothing, PowerSystems.LoadModels.LoadModel}\n\n\nGet PowerLoad model.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_reactive_power-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::PowerLoad) -> Any\n\n\nGet PowerLoad reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.get_services-Tuple{PowerLoad}","page":"PowerLoad","title":"PowerSystems.get_services","text":"get_services(value::PowerLoad) -> Array{Service,1}\n\n\nGet PowerLoad services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_active_power!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_available!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_available!","text":"set_available!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_base_power!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_bus!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_bus!","text":"set_bus!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_ext!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_ext!","text":"set_ext!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_internal!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_internal!","text":"set_internal!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_max_active_power!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_max_active_power!","text":"set_max_active_power!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad max_active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_max_reactive_power!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_max_reactive_power!","text":"set_max_reactive_power!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad max_reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_model!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_model!","text":"set_model!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad model.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_reactive_power!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_PowerLoad/#PowerSystems.set_services!-Tuple{PowerLoad,Any}","page":"PowerLoad","title":"PowerSystems.set_services!","text":"set_services!(value::PowerLoad, val::Any) -> Any\n\n\nSet PowerLoad services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#TwoPartCost","page":"TwoPartCost","title":"TwoPartCost","text":"","category":"section"},{"location":"model_library/generated_TwoPartCost/","page":"TwoPartCost","title":"TwoPartCost","text":"Modules = [PowerSystems]\nPages   = [\"generated/TwoPartCost.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.TwoPartCost","page":"TwoPartCost","title":"PowerSystems.TwoPartCost","text":"mutable struct TwoPartCost <: OperationalCost\n    variable::VariableCost\n    fixed::Float64\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure Operational Cost Data in two parts: fixed and variable cost.\n\nArguments\n\nvariable::VariableCost: variable cost\nfixed::Float64: fixed cost, validation range: (0, nothing), action if invalid: warn\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.get_fixed-Tuple{TwoPartCost}","page":"TwoPartCost","title":"PowerSystems.get_fixed","text":"get_fixed(value::TwoPartCost) -> Float64\n\n\nGet TwoPartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.get_internal-Tuple{TwoPartCost}","page":"TwoPartCost","title":"PowerSystems.get_internal","text":"get_internal(value::TwoPartCost) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet TwoPartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.get_variable-Tuple{TwoPartCost}","page":"TwoPartCost","title":"PowerSystems.get_variable","text":"get_variable(value::TwoPartCost) -> VariableCost\n\n\nGet TwoPartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.set_fixed!-Tuple{TwoPartCost,Any}","page":"TwoPartCost","title":"PowerSystems.set_fixed!","text":"set_fixed!(value::TwoPartCost, val::Any) -> Any\n\n\nSet TwoPartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.set_internal!-Tuple{TwoPartCost,Any}","page":"TwoPartCost","title":"PowerSystems.set_internal!","text":"set_internal!(value::TwoPartCost, val::Any) -> Any\n\n\nSet TwoPartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TwoPartCost/#PowerSystems.set_variable!-Tuple{TwoPartCost,Any}","page":"TwoPartCost","title":"PowerSystems.set_variable!","text":"set_variable!(value::TwoPartCost, val::Any) -> Any\n\n\nSet TwoPartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"modeler/generated_power_flow/","page":"Power Flow","title":"Power Flow","text":"EditURL = \"https://github.com/NREL-SIIP/PowerSystems.jl/blob/master/docs/src/modeler/power_flow.jl\"","category":"page"},{"location":"modeler/generated_power_flow/#Power-Flow","page":"Power Flow","title":"Power Flow","text":"","category":"section"},{"location":"modeler/generated_power_flow/","page":"Power Flow","title":"Power Flow","text":"PowerSystems.jl provides the capability to run a power flow with the intention of providing a valid initial AC operating point to the system. It is not meant as an analytics tool; the main issue is to determine if the system has feasible AC data.","category":"page"},{"location":"modeler/generated_power_flow/","page":"Power Flow","title":"Power Flow","text":"The power flow solver uses NLsolve.jl under the hood and takes any keyword argument accepted by NLsolve","category":"page"},{"location":"modeler/generated_power_flow/","page":"Power Flow","title":"Power Flow","text":"Modules = [PowerSystems]\nPages = [\"power_flow.jl\"]\nPrivate = false","category":"page"},{"location":"modeler/generated_power_flow/#PowerSystems.solve_powerflow!-Tuple{System}","page":"Power Flow","title":"PowerSystems.solve_powerflow!","text":"solve_powerflow!(system::System; finite_diff, kwargs...) -> Bool\n\n\nSolves a the power flow into the system and writes the solution into the relevant structs. Updates generators active and reactive power setpoints and branches active and reactive power flows (calculated in the From - To direction) (see flow_val)\n\nSupports solving using Finite Differences Method (instead of using analytic Jacobian) by setting finite_diff = true. Supports passing NLsolve kwargs in the args. By default shows the solver trace.\n\nArguments available for nlsolve:\n\nmethod : See NLSolve.jl documentation for available solvers\nxtol: norm difference in x between two successive iterates under which convergence is declared. Default: 0.0.\nftol: infinite norm of residuals under which convergence is declared. Default: 1e-8.\niterations: maximum number of iterations. Default: 1_000.\nstore_trace: should a trace of the optimization algorithm's state be stored? Default: false.\nshow_trace: should a trace of the optimization algorithm's state be shown on STDOUT? Default: false.\nextended_trace: should additifonal algorithm internals be added to the state trace? Default: false.\n\nExamples\n\nsolve_powerflow!(sys)\n# Passing NLsolve arguments\nsolve_powerflow!(sys, method = :newton)\n# Using Finite Differences\nsolve_powerflow!(sys, finite_diff = true)\n\n\n\n\n\n\n","category":"method"},{"location":"modeler/generated_power_flow/#PowerSystems.solve_powerflow-Tuple{System}","page":"Power Flow","title":"PowerSystems.solve_powerflow","text":"solve_powerflow(system::System; finite_diff, kwargs...) -> Union{Bool, Dict{String,DataFrames.DataFrame}}\n\n\nSimilar to solve_powerflow!(sys) but does not update the system struct with results. Returns the results in a dictionary of dataframes.\n\nExamples\n\nres = solve_powerflow(sys)\n# Passing NLsolve arguments\nres = solve_powerflow(sys, method = :newton)\n# Using Finite Differences\nres = solve_powerflow(sys, finite_diff = true)\n\n\n\n\n\n\n","category":"method"},{"location":"#PowerSystems.jl","page":"Welcome Page","title":"PowerSystems.jl","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = PowerSystems","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"The Documentation is still under construction, some sections are unfinished. Please refer to the Model Library Section for the most up-to-date info","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"PowerSystems.jl is a Julia package that provides a rigorous data model using Julia structures to enable power systems modeling.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"PowerSystems.jl provides tools to prepare and process data useful for electric energy systems modeling. This package serves two purposes:","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"It facilitates the development and open sharing of large data sets for Power Systems modeling\nIt provides a data model that imposes discipline on model specification, addressing the challenge of design and terminology choices when sharing code and data.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"The main features include:","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"Extensive library of data structures for power systems modeling.\nParsing capabilities from common data formats (PSS/e raw and dyr, Matpower and CSV)\nNetwork Matrices calculations\nUtilities for fast iterations of components to develop models","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"PowerSystems.jl documentation and code are organized according to the needs of different users depending on their skillset and requirements. In broad terms there are three categories:","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"Modeler: Users that want to run a particular analysis or experiment and use PowerSystems.jl to develop data sets.\nModel Developer: Users that want to develop custom components and structs in order to exploit PowerSystems.jl features to produce custom data sets.\nAdvanced Developers: Users that want to add new core functionalities or fix bugs in the core capabilties of PowerSystems.jl. This user should also check InfrastructureSystems.jl.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"PowerSystems.jl is an active project under development, and we welcome your feedback, suggestions, and bug reports.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"Extended examples of use can be found in SIIP-Examples PowerSystems","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"#Contents","page":"Welcome Page","title":"Contents","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"Pages = [\n    \"user_guide/installation.md\",\n    \"user_guide/type_structure.md\",\n    \"modeler/parsing.md\",\n    \"modeler/data.md\"\n]\nDepth = 3","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"PowerSystems has been developed as part of the Scalable Integrated Infrastructure Planning (SIIP) initiative at the U.S. Department of Energy's National Renewable Energy Laboratory (NREL)","category":"page"},{"location":"modeler/parsing/#Constructing-a-System-from-raw-data","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"","category":"section"},{"location":"modeler/parsing/#Supported-Formats","page":"Constructing a System from raw data","title":"Supported Formats","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems table data (CSV Files)\nMATPOWER (code copied with permision from PowerModels.jl)\nPSS/e RAW Files (code copied with permision from PowerModels.jl)\nPSS/e DYR Files","category":"page"},{"location":"modeler/parsing/#PowerSystems-Table-Data","page":"Constructing a System from raw data","title":"PowerSystems Table Data","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"This is a custom format that allows users to define power system component data by category and column with custom names, types, and units.","category":"page"},{"location":"modeler/parsing/#Categories","page":"Constructing a System from raw data","title":"Categories","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Components for each category must be defined in their own CSV file. The following categories are currently supported:","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"branch.csv\nbus.csv\ndc_branch.csv\ngen.csv\nload.csv\nreserves.csv\nstorage.csv","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"These must reside in the directory passed when constructing PowerSystemTableData.","category":"page"},{"location":"modeler/parsing/#Customization","page":"Constructing a System from raw data","title":"Customization","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Generate a configuration file (such as user_descriptors.yaml) from the defaults, which are stored in src/descriptors/power_system_inputs.json.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"python ./bin/generate_config_file.py ./user_descriptors.yaml","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Next, edit this file with your customizations.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Note that the user-specific customizations are stored in YAML rather than JSON to allow for easier editing. The next few sections describe changes you can make to this YAML file.  Do not edit the default JSON file.","category":"page"},{"location":"modeler/parsing/#Column-names","page":"Constructing a System from raw data","title":"Column names","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems provides a mapping capability that allows you to keep your own column names.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"For example, when parsing raw data for a generator the code expects a column called name. If the raw data instead defines that column as GEN UID then you can change the custom_name field under the generator category to GEN UID in your YAML file.","category":"page"},{"location":"modeler/parsing/#Per-unit-conversion","page":"Constructing a System from raw data","title":"Per-unit conversion","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems defines whether it expects a column value to be per-unit in power_system_inputs.json. If it expects per-unit but your values are not per-unit then you can set system_per_unit: false in user_descriptors.yaml and PowerSystems will automatically convert the values.","category":"page"},{"location":"modeler/parsing/#Unit-conversion","page":"Constructing a System from raw data","title":"Unit conversion","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems provides a limited set of unit conversions. For example, if power_system_inputs.json indicates that a value's unit is degrees but your values are in radians then you can set unit_conversion: radian in your YAML file.","category":"page"},{"location":"modeler/parsing/#Example-file","page":"Constructing a System from raw data","title":"Example file","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Refer to RTS_GMLC for an example.","category":"page"},{"location":"modeler/parsing/#Time-series-data","page":"Constructing a System from raw data","title":"Time series data","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems requires a metadata file that maps components to their time series data in order to be able to automatically construct forecasts from raw data files. The following fields are required for each time array:","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"simulation:  User description of simulation\ncategory:  Type of component. Must map to PowerSystems abstract types (Bus, ElectricLoad, Generator, LoadZone, Reserve)\ncomponent_name:  Name of component\nlabel:  Name of accessor function that can be called on the component to retrieve the forecasted value.\nscaling_factor:  Controls normalization of the data. Use 1.0 for pre-normalized data. Use 'Max' to divide the timeseries by the max value in the column. Use any float for a custom scaling factor.\ndata_file:  Path to the time series data file","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems supports this metadata in either CSV or JSON formats. Refer to RTS_GMLC for an example.","category":"page"},{"location":"modeler/parsing/#Performance-considerations","page":"Constructing a System from raw data","title":"Performance considerations","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"By default PowerSystems stores time series data in HDF5 files. It does not keep all of the data in memory. This means that every time you access a forecast PowerSystems will have to read the data from storage, which will add latency. If you know ahead of time that all of your data will fit in memory then you can change this behavior by passing time_series_in_memory = true when you create the System.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"If the time series data is stored in HDF5 then PowerSystems will use the tmp filesystem by default. You can change this by passing time_series_directory = X when you create the System. This is required if the time series data is larger than the amount of tmp space available.","category":"page"},{"location":"modeler/parsing/#Custom-construction-of-generators","page":"Constructing a System from raw data","title":"Custom construction of generators","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PowerSystems supports custom construction of subtypes of the abstract type Generator based on fuel and type. The parsing code detects these fields in the raw data and then constructs the concrete type listed in the passed generator mapping file. The default file is src/parsers/generator_mapping.yaml. You can override this behavior by specifying your own file when constructing PowerSystemTableData.","category":"page"},{"location":"modeler/parsing/#System-creation-with-custom-config-files","page":"Constructing a System from raw data","title":"System creation with custom config files","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Here is an example of how to construct a System with all customizations listed on this page.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"data_dir = \"/data/my-data-dir\"\nbase_power = 100.0\ndescriptors = \"./user_descriptors.yaml\"\ntimeseries_metadata_file = \"./timeseries_pointers.json\"\ngenerator_mapping_file = \"./generator_mapping.yaml\"\ndata = PowerSystemTableData(\n    data_dir,\n    base_power,\n    descriptors;\n    timeseries_metadata_file = timeseries_metadata_file,\n    generator_mapping_file = generator_mapping_file,\n)\nsys = System(data, time_series_in_memory = true)","category":"page"},{"location":"modeler/parsing/#MATPOWER-/-PSS/e","page":"Constructing a System from raw data","title":"MATPOWER / PSS/e","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"The following code will create a System from a MATPOWER or PSS/e file by first parsing it with PowerModels.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"sys = System(PowerSystems.PowerModelsData(\"./case5.m\"))","category":"page"},{"location":"modeler/parsing/#PSS/e-dyr-parsing","page":"Constructing a System from raw data","title":"PSS/e dyr parsing","text":"","category":"section"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PSS/e's dynamic model library is extensive, we currently support parsing a limited amount of models out of the box.","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Machine models","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"\"GENSAE\"\n\"GENSAL\"\n\"GENROE\"\n\"GENCLS\"\n\"GENROU\"","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"AVR Models","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"\"IEEET1\"\n\"ESDC1A\"\n\"ESAC1A\"\n\"ESST4B\"\n\"EXAC2\"\n\"EXPIC1\"\n\"ESAC6A\"\n\"EXAC1\"\n\"SCRX\"\n\"ESDC2A\"","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"Prime Movers","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"\"HYGOV\"\n\"IEEEG1\"\n\"GGOV1\"","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"PSS models","category":"page"},{"location":"modeler/parsing/","page":"Constructing a System from raw data","title":"Constructing a System from raw data","text":"\"IEEEST\"","category":"page"},{"location":"developer/style/#Julia-Coding-Style-Guide-for-PowerSystems.jl","page":"Style Guide","title":"Julia Coding Style Guide for PowerSystems.jl","text":"","category":"section"},{"location":"developer/style/#Goals","page":"Style Guide","title":"Goals","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Define a straightforward set of rules that lead to consistent, readable code.\nDevelopers focus on producing high quality code, not how to format it.","category":"page"},{"location":"developer/style/#Base","page":"Style Guide","title":"Base","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Read the official","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Julia style guide as reference.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Read Julia contribution guidelines, notably its line length limit.\nRead Julia guidelines for docstrings.\nRead BlueStyle style guide.\nConsider using a plugin that configures your text editor to use EditorConfig settings.\nConsider using JuliaFormatter.jl.","category":"page"},{"location":"developer/style/#Code-Organization","page":"Style Guide","title":"Code Organization","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Import standard modules, then 3rd-party modules, then yours. Include a blank line between each group.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"<!â€“ ### Modules:  TODO â€“>","category":"page"},{"location":"developer/style/#Comments","page":"Style Guide","title":"Comments","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Use comments to describe non-obvious or non-trivial aspects of code. Describe why something was done but not how. The \"how\" should be apparent from the code itself.\nUse complete sentences and proper grammar.\nInclude a space in between the \"#\" and the first word of the comment.\nDon't use block comments for Julia code. Prefer using the # prefix. If you are commenting code, consider deleting it instead.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Bad:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"for i in 1:100\n    #=\n    arr[i] += a[i] * x^2\n    arr[i] += b[i] * x\n    arr[i] += c[i]\n    =#\n    nothing\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"for i in 1:100\n    # arr[i] += a[i] * x^2\n    # arr[i] += b[i] * x\n    # arr[i] += c[i]\n    nothing\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Use these tags in comments to describe known work:\nTODO:  tasks that need to be done\nFIXME:  code that needs refactoring\nBUG:  known bug that exists. Should include a bug ID and tracking system.\nPERF:  known performance limitation that needs improvement","category":"page"},{"location":"developer/style/#Constructors","page":"Style Guide","title":"Constructors","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Per guidance from Julia documentation, use inner constructors to enforce restrictions on parameters or to allow construction of self-referential objects. Use outer constructors to provide default values or to perform customization.\nDocument the reason why the outer constructor is different.\nNote that the compiler will provide a default constructor with all struct","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"members if no inner constructor is defined.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"When creating a constructor use function Foo() instead of Foo() = ....\nOne exception is the case where one file has all single-line functions.\nPrefer explicit return in multi line functions instead of the implicit return.","category":"page"},{"location":"developer/style/#Exceptions","page":"Style Guide","title":"Exceptions","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Use exceptions for unexpected errors and not for normal error handling.\nDetection of an unsupported data format from a user should likely throw\nan exception and terminate the application.\nDo not use try/catch to handle retrieving a potentially-missing key from a\ndictionary.\nUse @assert statements to guard against programming errors. Do not use them after detecting bad user input. Note that they may be compiled out in release builds.","category":"page"},{"location":"developer/style/#Globals","page":"Style Guide","title":"Globals","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Global constants should be written in upper case and be declared const.\nconst UPPER_CASE_VARIABLE = Ï€ / 2\nIf global variables are needed, prefix them with g_.\nDon't use magic numbers. Instead, define const GLOBALS or Enums (Julia @enum).","category":"page"},{"location":"developer/style/#One-line-Conditionals","page":"Style Guide","title":"One-line Conditionals","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Julia code base uses this idiom frequently: <condition> && <statement>.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"See Example:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"function fact(n::Int)\n   n >= 0 || error(\"n must be non-negative\")\n   n == 0 && return 1\n   n * fact(n-1)\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"This is acceptable for simple code as in this example. However, in general, prefer to write out an entire if statement.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Ternary operators provide a way to write clean, concise code.  Use good judgement.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"y = x > 0 ? x : -x","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"There are many examples in our codebase that use the form <cond> ? <statement> : <statement>. These may be expressed much more clearly in an if/else statement.","category":"page"},{"location":"developer/style/#Unit-Tests","page":"Style Guide","title":"Unit Tests","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"All code should be tested.","category":"page"},{"location":"developer/style/#Whitespace","page":"Style Guide","title":"Whitespace","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"If many function arguments cause the line length to be exceeded, put one","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"argument per line. In some cases it may make sense to pair some variables on the same line.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"function foo(\n    var1::String,\n    var2::String,\n    var3::String,\n    var6::T,\n) where T <: Number\n    println(\"hello world\")\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Bad:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"function foo(var1::String,\n             var2::String,\n             var3::String,\n             var6::T) where T <: Number\n    println(\"hello world\")\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Surround equal signs with spaces when passing keyword args to a","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"function or defining default values in function declarations.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Prefer elements in an array on separate lines. Follow opening square bracket with a new line and use closing square bracket on a separate new line.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"nodes = [\n    Node(1),\n    Node(2),\n    Node(3),\n    Node(4),\n    Node(5),\n];","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Bad:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"nodes = [Node(1), Node(2), Node(3), Node(4), Node(5)];","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Prefer a similar rule for Dictionaries, Sets and other data structures. Use your judgement when data structures can neatly fit on a single line.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Do not right-align equal signs when assigning groups of variables. It causes unnecessary changes whenever someone adds a new variable with a longer name.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Bad:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"x   = 1\nfoo = 2","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"x = 1\nfoo = 2","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Define abstract types on one line. Given the lack of IDE support for Julia, this makes it easier to find type definitions.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Bad:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"abstract type\n    Foo\nend","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"Good:","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"abstract type Foo end","category":"page"},{"location":"developer/style/#Exports","page":"Style Guide","title":"Exports","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"export should be used to make it easy for the user to use a symbol from the REPL, an interactive interface or a program.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"You may need to use export when extending functionality of other packages that have also exported the same symbol.","category":"page"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"All symbols that have export must have proper docstrings.","category":"page"},{"location":"developer/style/#References","page":"Style Guide","title":"References","text":"","category":"section"},{"location":"developer/style/","page":"Style Guide","title":"Style Guide","text":"The Zen of Python.","category":"page"},{"location":"model_library/generated_TapTransformer/#TapTransformer","page":"TapTransformer","title":"TapTransformer","text":"","category":"section"},{"location":"model_library/generated_TapTransformer/","page":"TapTransformer","title":"TapTransformer","text":"Modules = [PowerSystems]\nPages   = [\"generated/TapTransformer.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_TapTransformer/#PowerSystems.TapTransformer","page":"TapTransformer","title":"PowerSystems.TapTransformer","text":"mutable struct TapTransformer <: ACBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    reactive_power_flow::Float64\n    arc::Arc\n    r::Float64\n    x::Float64\n    primary_shunt::Float64\n    tap::Float64\n    rate::Union{Nothing, Float64}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\nreactive_power_flow::Float64\narc::Arc\nr::Float64: System per-unit value, validation range: (-2, 2), action if invalid: error\nx::Float64: System per-unit value, validation range: (-2, 4), action if invalid: error\nprimary_shunt::Float64: System per-unit value, validation range: (0, 2), action if invalid: error\ntap::Float64, validation range: (0, 2), action if invalid: error\nrate::Union{Nothing, Float64}, validation range: (0, nothing), action if invalid: error\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_active_power_flow-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::TapTransformer) -> Any\n\n\nGet TapTransformer active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_arc-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_arc","text":"get_arc(value::TapTransformer) -> Arc\n\n\nGet TapTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_available-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_available","text":"get_available(value::TapTransformer) -> Bool\n\n\nGet TapTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_ext-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_ext","text":"get_ext(value::TapTransformer) -> Dict{String,Any}\n\n\nGet TapTransformer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_internal-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_internal","text":"get_internal(value::TapTransformer) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet TapTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_primary_shunt-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_primary_shunt","text":"get_primary_shunt(value::TapTransformer) -> Float64\n\n\nGet TapTransformer primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_r-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_r","text":"get_r(value::TapTransformer) -> Float64\n\n\nGet TapTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_rate-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_rate","text":"get_rate(value::TapTransformer) -> Any\n\n\nGet TapTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_reactive_power_flow-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::TapTransformer) -> Any\n\n\nGet TapTransformer reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_services-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_services","text":"get_services(value::TapTransformer) -> Array{Service,1}\n\n\nGet TapTransformer services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_tap-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_tap","text":"get_tap(value::TapTransformer) -> Float64\n\n\nGet TapTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.get_x-Tuple{TapTransformer}","page":"TapTransformer","title":"PowerSystems.get_x","text":"get_x(value::TapTransformer) -> Float64\n\n\nGet TapTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_active_power_flow!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_arc!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_arc!","text":"set_arc!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_available!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_available!","text":"set_available!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_ext!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_ext!","text":"set_ext!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_internal!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_internal!","text":"set_internal!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_primary_shunt!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_primary_shunt!","text":"set_primary_shunt!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_r!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_r!","text":"set_r!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_rate!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_rate!","text":"set_rate!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_reactive_power_flow!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_services!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_services!","text":"set_services!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_tap!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_tap!","text":"set_tap!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_TapTransformer/#PowerSystems.set_x!-Tuple{TapTransformer,Any}","page":"TapTransformer","title":"PowerSystems.set_x!","text":"set_x!(value::TapTransformer, val::Any) -> Any\n\n\nSet TapTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"developer/testing/#Tests","page":"Testing","title":"Tests","text":"","category":"section"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"Unit tests can be executed in the REPL by executing the following:","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"julia> include(\"test/runtests.jl\")","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"The unit test module supports several customizations to aid development and debug.","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"Run a subset of tests in the REPL:","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"julia> push!(ARGS, \"<test_filename_without_.jl>\")\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"Change console logging level (defaults to Error):","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"julia> ENV[\"PS_CONSOLE_LOG_LEVEL\"] = Info\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"Change log file (./power-systems.log) logging level (defaults to Info):","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"julia> ENV[\"PS_LOG_LEVEL\"] = Debug\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"developer/testing/","page":"Testing","title":"Testing","text":"The unit test module appends a summary of all log message counts to the log file.  If a message is logged too frequently then consider tagging that message with maxlog=X to suppress it.","category":"page"},{"location":"user_guide/installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"user_guide/installation/","page":"Installation","title":"Installation","text":"The latest stable release of PowerSystems can be installed using the Julia package manager with","category":"page"},{"location":"user_guide/installation/","page":"Installation","title":"Installation","text":"] add PowerSystems","category":"page"},{"location":"user_guide/installation/","page":"Installation","title":"Installation","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"user_guide/installation/","page":"Installation","title":"Installation","text":"] add PowerSystems#master","category":"page"},{"location":"user_guide/installation/#Getting-test-data-to-start-with-some-data","page":"Installation","title":"Getting test data to start with some data","text":"","category":"section"},{"location":"model_library/generated_MonitoredLine/#MonitoredLine","page":"MonitoredLine","title":"MonitoredLine","text":"","category":"section"},{"location":"model_library/generated_MonitoredLine/","page":"MonitoredLine","title":"MonitoredLine","text":"Modules = [PowerSystems]\nPages   = [\"generated/MonitoredLine.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.MonitoredLine","page":"MonitoredLine","title":"PowerSystems.MonitoredLine","text":"mutable struct MonitoredLine <: ACBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    reactive_power_flow::Float64\n    arc::Arc\n    r::Float64\n    x::Float64\n    b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}\n    flow_limits::NamedTuple{(:from_to, :to_from), Tuple{Float64, Float64}}\n    rate::Float64\n    angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\nreactive_power_flow::Float64\narc::Arc\nr::Float64: System per-unit value, validation range: (0, 4), action if invalid: error\nx::Float64: System per-unit value, validation range: (0, 4), action if invalid: error\nb::NamedTuple{(:from, :to), Tuple{Float64, Float64}}: System per-unit value, validation range: (0, 2), action if invalid: error\nflow_limits::NamedTuple{(:from_to, :to_from), Tuple{Float64, Float64}}: TODO: throw warning above max SIL\nrate::Float64: TODO: compare to SIL (warn) (theoretical limit)\nangle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}, validation range: (-1.571, 1.571), action if invalid: error\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_active_power_flow-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::MonitoredLine) -> Any\n\n\nGet MonitoredLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_angle_limits-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_angle_limits","text":"get_angle_limits(value::MonitoredLine) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet MonitoredLine angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_arc-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_arc","text":"get_arc(value::MonitoredLine) -> Arc\n\n\nGet MonitoredLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_available-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_available","text":"get_available(value::MonitoredLine) -> Bool\n\n\nGet MonitoredLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_b-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_b","text":"get_b(value::MonitoredLine) -> NamedTuple{(:from, :to),Tuple{Float64,Float64}}\n\n\nGet MonitoredLine b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_ext-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_ext","text":"get_ext(value::MonitoredLine) -> Dict{String,Any}\n\n\nGet MonitoredLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_flow_limits-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_flow_limits","text":"get_flow_limits(value::MonitoredLine) -> NamedTuple{(:from_to, :to_from),Tuple{Float64,Float64}}\n\n\nGet MonitoredLine flow_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_internal-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_internal","text":"get_internal(value::MonitoredLine) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet MonitoredLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_r-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_r","text":"get_r(value::MonitoredLine) -> Float64\n\n\nGet MonitoredLine r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_rate-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_rate","text":"get_rate(value::MonitoredLine) -> Any\n\n\nGet MonitoredLine rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_reactive_power_flow-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::MonitoredLine) -> Any\n\n\nGet MonitoredLine reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_services-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_services","text":"get_services(value::MonitoredLine) -> Array{Service,1}\n\n\nGet MonitoredLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.get_x-Tuple{MonitoredLine}","page":"MonitoredLine","title":"PowerSystems.get_x","text":"get_x(value::MonitoredLine) -> Float64\n\n\nGet MonitoredLine x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_active_power_flow!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_angle_limits!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_angle_limits!","text":"set_angle_limits!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine angle_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_arc!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_arc!","text":"set_arc!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_available!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_available!","text":"set_available!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_b!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_b!","text":"set_b!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine b.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_ext!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_ext!","text":"set_ext!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_flow_limits!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_flow_limits!","text":"set_flow_limits!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine flow_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_internal!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_internal!","text":"set_internal!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_r!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_r!","text":"set_r!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_rate!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_rate!","text":"set_rate!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_reactive_power_flow!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_services!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_services!","text":"set_services!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MonitoredLine/#PowerSystems.set_x!-Tuple{MonitoredLine,Any}","page":"MonitoredLine","title":"PowerSystems.set_x!","text":"set_x!(value::MonitoredLine, val::Any) -> Any\n\n\nSet MonitoredLine x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#RenewableFix","page":"RenewableFix","title":"RenewableFix","text":"","category":"section"},{"location":"model_library/generated_RenewableFix/","page":"RenewableFix","title":"RenewableFix","text":"Modules = [PowerSystems]\nPages   = [\"generated/RenewableFix.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_RenewableFix/#PowerSystems.RenewableFix","page":"RenewableFix","title":"PowerSystems.RenewableFix","text":"mutable struct RenewableFix <: RenewableGen\n    name::String\n    available::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    prime_mover::PrimeMovers.PrimeMover\n    power_factor::Float64\n    base_power::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for fixed renewable generation technologies.\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nactive_power::Float64\nreactive_power::Float64\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\npower_factor::Float64, validation range: (0, 1), action if invalid: error\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_active_power-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_active_power","text":"get_active_power(value::RenewableFix) -> Any\n\n\nGet RenewableFix active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_available-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_available","text":"get_available(value::RenewableFix) -> Bool\n\n\nGet RenewableFix available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_base_power-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_base_power","text":"get_base_power(value::RenewableFix) -> Float64\n\n\nGet RenewableFix base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_bus-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_bus","text":"get_bus(value::RenewableFix) -> Bus\n\n\nGet RenewableFix bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_dynamic_injector-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::RenewableFix) -> Union{Nothing, DynamicInjection}\n\n\nGet RenewableFix dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_ext-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_ext","text":"get_ext(value::RenewableFix) -> Dict{String,Any}\n\n\nGet RenewableFix ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_internal-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_internal","text":"get_internal(value::RenewableFix) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet RenewableFix internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_power_factor-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_power_factor","text":"get_power_factor(value::RenewableFix) -> Float64\n\n\nGet RenewableFix power_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_prime_mover-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::RenewableFix) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet RenewableFix prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_rating-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_rating","text":"get_rating(value::RenewableFix) -> Any\n\n\nGet RenewableFix rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_reactive_power-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::RenewableFix) -> Any\n\n\nGet RenewableFix reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.get_services-Tuple{RenewableFix}","page":"RenewableFix","title":"PowerSystems.get_services","text":"get_services(value::RenewableFix) -> Array{Service,1}\n\n\nGet RenewableFix services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_active_power!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_available!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_available!","text":"set_available!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_base_power!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_bus!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_bus!","text":"set_bus!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_ext!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_ext!","text":"set_ext!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_internal!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_internal!","text":"set_internal!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_power_factor!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_power_factor!","text":"set_power_factor!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix power_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_prime_mover!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_rating!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_rating!","text":"set_rating!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_reactive_power!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableFix/#PowerSystems.set_services!-Tuple{RenewableFix,Any}","page":"RenewableFix","title":"PowerSystems.set_services!","text":"set_services!(value::RenewableFix, val::Any) -> Any\n\n\nSet RenewableFix services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_inverter/#DynamicInverter","page":"Dynamic Inverter","title":"DynamicInverter","text":"","category":"section"},{"location":"model_library/dynamic_inverter/","page":"Dynamic Inverter","title":"Dynamic Inverter","text":"Each inverter is a data structure that is defined by the following components:","category":"page"},{"location":"model_library/dynamic_inverter/","page":"Dynamic Inverter","title":"Dynamic Inverter","text":"DC Source: Defines the dynamics of the DC side of the converter.\nFrequency Estimator: That describes how the frequency of the grid can be estimated using the grid voltages. Typically a phase-locked loop (PLL).\nOuter Loop Control: That describes the active and reactive power control dynamics.\nInner Loop Control: That can describe virtual impedance, voltage control and current control dynamics.\nConverter: That describes the dynamics of the pulse width modulation (PWM) or space vector modulation (SVM).\nFilter: Used to connect the converter output to the grid.","category":"page"},{"location":"model_library/dynamic_inverter/","page":"Dynamic Inverter","title":"Dynamic Inverter","text":"<img src=\"../../assets/inv_metamodel.png\" width=\"75%\"/>","category":"page"},{"location":"model_library/dynamic_inverter/","page":"Dynamic Inverter","title":"Dynamic Inverter","text":"â €","category":"page"},{"location":"model_library/dynamic_inverter/","page":"Dynamic Inverter","title":"Dynamic Inverter","text":"Modules = [PowerSystems]\nPages   = [\"dynamic_inverter.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/dynamic_inverter/#PowerSystems.DynamicInverter","page":"Dynamic Inverter","title":"PowerSystems.DynamicInverter","text":"mutable struct DynamicInverter{\n    C <: Converter,\n    O <: OuterControl,\n    IC <: InnerControl,\n    DC <: DCSource,\n    P <: FrequencyEstimator,\n    F <: Filter,\n} <: DynamicInjection\n    static_injector::Union{Nothing, StaticInjection}\n    Ï‰_ref::Float64\n    converter::C\n    outer_control::O\n    inner_control::IC\n    dc_source::DC\n    freq_estimator::P\n    filter::F\n    n_states::Int64\n    states::Vector{Symbol}\n    ext::Dict{String, Any}\n    internal::InfrastructureSystemsInternal\nend\n\nA dynamic inverter is composed by 6 components, namely a Converter, an Outer Control, an Inner Control, a DC Source, a Frequency Estimator and a Filter. It requires a Static Injection device that is attached to it.\n\nArguments\n\nstatic_injector::Union{Nothing, StaticInjection}: Static Injector attached to the dynamic inverter.\nÏ‰_ref::Float64: Frequency reference set-point in pu.\nconverter <: Converter: Converter model for the PWM transformation.\nouter_control <: OuterControl: Outer-control controller model.\ninner_control <: InnerControl: Inner-control controller model.\ndc_source <: DCSource: DC Source model.\nfreq_estimator <: FrequencyEstimator: Frequency Estimator (typically a PLL) model.\nfilter <: Filter: Filter model.\nn_states::Int64: Number of states (will depend on the components).\nstates::Vector{Symbol}: Vector of states (will depend on the components).\next::Dict{String, Any}\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AGC/#AGC","page":"AGC","title":"AGC","text":"","category":"section"},{"location":"model_library/generated_AGC/","page":"AGC","title":"AGC","text":"Modules = [PowerSystems]\nPages   = [\"generated/AGC.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AGC/#PowerSystems.AGC","page":"AGC","title":"PowerSystems.AGC","text":"mutable struct AGC <: Service\n    name::String\n    available::Bool\n    bias::Float64\n    K_p::Float64\n    K_i::Float64\n    K_d::Float64\n    delta_t::Float64\n    area::Union{Nothing, Area}\n    initial_ace::Float64\n    ext::Dict{String, Any}\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbias::Float64\nK_p::Float64: PID Proportional Constant\nK_i::Float64: PID Integral Constant\nK_d::Float64: PID Derrivative Constant\ndelta_t::Float64: PID Discretization period [Seconds]\narea::Union{Nothing, Area}: the area controlled by the AGC\ninitial_ace::Float64: PID Discretization period [Seconds]\next::Dict{String, Any}\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AGC/#PowerSystems.get_K_d-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_K_d","text":"get_K_d(value::AGC) -> Float64\n\n\nGet AGC K_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_K_i-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_K_i","text":"get_K_i(value::AGC) -> Float64\n\n\nGet AGC K_i.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_K_p-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_K_p","text":"get_K_p(value::AGC) -> Float64\n\n\nGet AGC K_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_area-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_area","text":"get_area(value::AGC) -> Union{Nothing, Area}\n\n\nGet AGC area.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_available-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_available","text":"get_available(value::AGC) -> Bool\n\n\nGet AGC available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_bias-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_bias","text":"get_bias(value::AGC) -> Float64\n\n\nGet AGC bias.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_delta_t-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_delta_t","text":"get_delta_t(value::AGC) -> Float64\n\n\nGet AGC delta_t.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_ext-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_ext","text":"get_ext(value::AGC) -> Dict{String,Any}\n\n\nGet AGC ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_initial_ace-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_initial_ace","text":"get_initial_ace(value::AGC) -> Float64\n\n\nGet AGC initial_ace.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.get_internal-Tuple{AGC}","page":"AGC","title":"PowerSystems.get_internal","text":"get_internal(value::AGC) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AGC internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_K_d!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_K_d!","text":"set_K_d!(value::AGC, val::Any) -> Any\n\n\nSet AGC K_d.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_K_i!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_K_i!","text":"set_K_i!(value::AGC, val::Any) -> Any\n\n\nSet AGC K_i.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_K_p!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_K_p!","text":"set_K_p!(value::AGC, val::Any) -> Any\n\n\nSet AGC K_p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_area!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_area!","text":"set_area!(value::AGC, val::Any) -> Any\n\n\nSet AGC area.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_available!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_available!","text":"set_available!(value::AGC, val::Any) -> Any\n\n\nSet AGC available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_bias!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_bias!","text":"set_bias!(value::AGC, val::Any) -> Any\n\n\nSet AGC bias.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_delta_t!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_delta_t!","text":"set_delta_t!(value::AGC, val::Any) -> Any\n\n\nSet AGC delta_t.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_ext!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_ext!","text":"set_ext!(value::AGC, val::Any) -> Any\n\n\nSet AGC ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_initial_ace!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_initial_ace!","text":"set_initial_ace!(value::AGC, val::Any) -> Any\n\n\nSet AGC initial_ace.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AGC/#PowerSystems.set_internal!-Tuple{AGC,Any}","page":"AGC","title":"PowerSystems.set_internal!","text":"set_internal!(value::AGC, val::Any) -> Any\n\n\nSet AGC internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#Transformer2W","page":"Transformer2W","title":"Transformer2W","text":"","category":"section"},{"location":"model_library/generated_Transformer2W/","page":"Transformer2W","title":"Transformer2W","text":"Modules = [PowerSystems]\nPages   = [\"generated/Transformer2W.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Transformer2W/#PowerSystems.Transformer2W","page":"Transformer2W","title":"PowerSystems.Transformer2W","text":"mutable struct Transformer2W <: ACBranch\n    name::String\n    available::Bool\n    active_power_flow::Float64\n    reactive_power_flow::Float64\n    arc::Arc\n    r::Float64\n    x::Float64\n    primary_shunt::Float64\n    rate::Union{Nothing, Float64}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nThe 2-W transformer model uses an equivalent circuit assuming the impedance is on the High Voltage Side of the transformer. The model allocates the iron losses and magnetizing susceptance to the primary side.\n\nArguments\n\nname::String\navailable::Bool\nactive_power_flow::Float64\nreactive_power_flow::Float64\narc::Arc\nr::Float64: System per-unit value, validation range: (-2, 4), action if invalid: error\nx::Float64: System per-unit value, validation range: (-2, 4), action if invalid: error\nprimary_shunt::Float64: System per-unit value, validation range: (0, 2), action if invalid: error\nrate::Union{Nothing, Float64}, validation range: (0, nothing), action if invalid: error\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_active_power_flow-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_active_power_flow","text":"get_active_power_flow(value::Transformer2W) -> Any\n\n\nGet Transformer2W active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_arc-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_arc","text":"get_arc(value::Transformer2W) -> Arc\n\n\nGet Transformer2W arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_available-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_available","text":"get_available(value::Transformer2W) -> Bool\n\n\nGet Transformer2W available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_ext-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_ext","text":"get_ext(value::Transformer2W) -> Dict{String,Any}\n\n\nGet Transformer2W ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_internal-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_internal","text":"get_internal(value::Transformer2W) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Transformer2W internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_primary_shunt-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_primary_shunt","text":"get_primary_shunt(value::Transformer2W) -> Float64\n\n\nGet Transformer2W primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_r-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_r","text":"get_r(value::Transformer2W) -> Float64\n\n\nGet Transformer2W r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_rate-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_rate","text":"get_rate(value::Transformer2W) -> Any\n\n\nGet Transformer2W rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_reactive_power_flow-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_reactive_power_flow","text":"get_reactive_power_flow(value::Transformer2W) -> Any\n\n\nGet Transformer2W reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_services-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_services","text":"get_services(value::Transformer2W) -> Array{Service,1}\n\n\nGet Transformer2W services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.get_x-Tuple{Transformer2W}","page":"Transformer2W","title":"PowerSystems.get_x","text":"get_x(value::Transformer2W) -> Float64\n\n\nGet Transformer2W x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_active_power_flow!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_active_power_flow!","text":"set_active_power_flow!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W active_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_arc!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_arc!","text":"set_arc!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W arc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_available!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_available!","text":"set_available!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_ext!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_ext!","text":"set_ext!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_internal!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_internal!","text":"set_internal!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_primary_shunt!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_primary_shunt!","text":"set_primary_shunt!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W primary_shunt.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_r!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_r!","text":"set_r!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W r.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_rate!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_rate!","text":"set_rate!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W rate.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_reactive_power_flow!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_reactive_power_flow!","text":"set_reactive_power_flow!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W reactive_power_flow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_services!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_services!","text":"set_services!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Transformer2W/#PowerSystems.set_x!-Tuple{Transformer2W,Any}","page":"Transformer2W","title":"PowerSystems.set_x!","text":"set_x!(value::Transformer2W, val::Any) -> Any\n\n\nSet Transformer2W x.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#HydroEnergyReservoir","page":"HydroEnergyReservoir","title":"HydroEnergyReservoir","text":"","category":"section"},{"location":"model_library/generated_HydroEnergyReservoir/","page":"HydroEnergyReservoir","title":"HydroEnergyReservoir","text":"Modules = [PowerSystems]\nPages   = [\"generated/HydroEnergyReservoir.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.HydroEnergyReservoir","page":"HydroEnergyReservoir","title":"PowerSystems.HydroEnergyReservoir","text":"mutable struct HydroEnergyReservoir <: HydroGen\n    name::String\n    available::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    prime_mover::PrimeMovers.PrimeMover\n    active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits::Union{Nothing, Min_Max}\n    ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    operation_cost::TwoPartCost\n    base_power::Float64\n    storage_capacity::Float64\n    inflow::Float64\n    initial_storage::Float64\n    storage_target::Float64\n    conversion_factor::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nactive_power::Float64\nreactive_power::Float64, validation range: reactive_power_limits, action if invalid: warn\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\nactive_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits::Union{Nothing, Min_Max}, action if invalid: warn\nramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error\ntime_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error\noperation_cost::TwoPartCost: Operation Cost of Generation TwoPartCost\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nstorage_capacity::Float64: Maximum storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: (0, nothing), action if invalid: error\ninflow::Float64: Baseline inflow into the reservoir (units can be p.u. or m^3/hr), validation range: (0, nothing), action if invalid: error\ninitial_storage::Float64: Initial storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: (0, nothing), action if invalid: error\nstorage_target::Float64: Storage target at the end of simulation as ratio of storage capacity.\nconversion_factor::Float64: Conversion factor from flow/volume to energy: m^3 -> p.u-hr.\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_active_power-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_active_power","text":"get_active_power(value::HydroEnergyReservoir) -> Any\n\n\nGet HydroEnergyReservoir active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_active_power_limits-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_active_power_limits","text":"get_active_power_limits(value::HydroEnergyReservoir) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet HydroEnergyReservoir active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_available-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_available","text":"get_available(value::HydroEnergyReservoir) -> Bool\n\n\nGet HydroEnergyReservoir available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_base_power-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_base_power","text":"get_base_power(value::HydroEnergyReservoir) -> Float64\n\n\nGet HydroEnergyReservoir base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_bus-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_bus","text":"get_bus(value::HydroEnergyReservoir) -> Bus\n\n\nGet HydroEnergyReservoir bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_conversion_factor-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_conversion_factor","text":"get_conversion_factor(value::HydroEnergyReservoir) -> Float64\n\n\nGet HydroEnergyReservoir conversion_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_dynamic_injector-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::HydroEnergyReservoir) -> Union{Nothing, DynamicInjection}\n\n\nGet HydroEnergyReservoir dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_ext-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_ext","text":"get_ext(value::HydroEnergyReservoir) -> Dict{String,Any}\n\n\nGet HydroEnergyReservoir ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_inflow-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_inflow","text":"get_inflow(value::HydroEnergyReservoir) -> Float64\n\n\nGet HydroEnergyReservoir inflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_initial_storage-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_initial_storage","text":"get_initial_storage(value::HydroEnergyReservoir) -> Any\n\n\nGet HydroEnergyReservoir initial_storage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_internal-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_internal","text":"get_internal(value::HydroEnergyReservoir) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet HydroEnergyReservoir internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_operation_cost-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::HydroEnergyReservoir) -> TwoPartCost\n\n\nGet HydroEnergyReservoir operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_prime_mover-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::HydroEnergyReservoir) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet HydroEnergyReservoir prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_ramp_limits-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_ramp_limits","text":"get_ramp_limits(value::HydroEnergyReservoir) -> Union{Nothing, NamedTuple{(:up, :down),_A} where _A<:Tuple}\n\n\nGet HydroEnergyReservoir ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_rating-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_rating","text":"get_rating(value::HydroEnergyReservoir) -> Any\n\n\nGet HydroEnergyReservoir rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_reactive_power-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::HydroEnergyReservoir) -> Any\n\n\nGet HydroEnergyReservoir reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_reactive_power_limits-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::HydroEnergyReservoir) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet HydroEnergyReservoir reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_services-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_services","text":"get_services(value::HydroEnergyReservoir) -> Array{Service,1}\n\n\nGet HydroEnergyReservoir services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_storage_capacity-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_storage_capacity","text":"get_storage_capacity(value::HydroEnergyReservoir) -> Any\n\n\nGet HydroEnergyReservoir storage_capacity.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_storage_target-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_storage_target","text":"get_storage_target(value::HydroEnergyReservoir) -> Float64\n\n\nGet HydroEnergyReservoir storage_target.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.get_time_limits-Tuple{HydroEnergyReservoir}","page":"HydroEnergyReservoir","title":"PowerSystems.get_time_limits","text":"get_time_limits(value::HydroEnergyReservoir) -> Union{Nothing, NamedTuple{(:up, :down),Tuple{Float64,Float64}}}\n\n\nGet HydroEnergyReservoir time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_active_power!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_active_power_limits!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_active_power_limits!","text":"set_active_power_limits!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_available!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_available!","text":"set_available!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_base_power!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_bus!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_bus!","text":"set_bus!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_conversion_factor!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_conversion_factor!","text":"set_conversion_factor!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir conversion_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_ext!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_ext!","text":"set_ext!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_inflow!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_inflow!","text":"set_inflow!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir inflow.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_initial_storage!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_initial_storage!","text":"set_initial_storage!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir initial_storage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_internal!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_internal!","text":"set_internal!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_operation_cost!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_prime_mover!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_ramp_limits!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_ramp_limits!","text":"set_ramp_limits!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_rating!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_rating!","text":"set_rating!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_reactive_power!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_reactive_power_limits!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_services!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_services!","text":"set_services!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_storage_capacity!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_storage_capacity!","text":"set_storage_capacity!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir storage_capacity.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_storage_target!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_storage_target!","text":"set_storage_target!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir storage_target.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_HydroEnergyReservoir/#PowerSystems.set_time_limits!-Tuple{HydroEnergyReservoir,Any}","page":"HydroEnergyReservoir","title":"PowerSystems.set_time_limits!","text":"set_time_limits!(value::HydroEnergyReservoir, val::Any) -> Any\n\n\nSet HydroEnergyReservoir time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#RenewableDispatch","page":"RenewableDispatch","title":"RenewableDispatch","text":"","category":"section"},{"location":"model_library/generated_RenewableDispatch/","page":"RenewableDispatch","title":"RenewableDispatch","text":"Modules = [PowerSystems]\nPages   = [\"generated/RenewableDispatch.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.RenewableDispatch","page":"RenewableDispatch","title":"PowerSystems.RenewableDispatch","text":"mutable struct RenewableDispatch <: RenewableGen\n    name::String\n    available::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    prime_mover::PrimeMovers.PrimeMover\n    reactive_power_limits::Union{Nothing, Min_Max}\n    power_factor::Float64\n    operation_cost::TwoPartCost\n    base_power::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nactive_power::Float64\nreactive_power::Float64\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\nreactive_power_limits::Union{Nothing, Min_Max}\npower_factor::Float64, validation range: (0, 1), action if invalid: error\noperation_cost::TwoPartCost: Operation Cost of Generation TwoPartCost\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_active_power-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_active_power","text":"get_active_power(value::RenewableDispatch) -> Any\n\n\nGet RenewableDispatch active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_available-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_available","text":"get_available(value::RenewableDispatch) -> Bool\n\n\nGet RenewableDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_base_power-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_base_power","text":"get_base_power(value::RenewableDispatch) -> Float64\n\n\nGet RenewableDispatch base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_bus-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_bus","text":"get_bus(value::RenewableDispatch) -> Bus\n\n\nGet RenewableDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_dynamic_injector-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::RenewableDispatch) -> Union{Nothing, DynamicInjection}\n\n\nGet RenewableDispatch dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_ext-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_ext","text":"get_ext(value::RenewableDispatch) -> Dict{String,Any}\n\n\nGet RenewableDispatch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_internal-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_internal","text":"get_internal(value::RenewableDispatch) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet RenewableDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_operation_cost-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::RenewableDispatch) -> TwoPartCost\n\n\nGet RenewableDispatch operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_power_factor-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_power_factor","text":"get_power_factor(value::RenewableDispatch) -> Float64\n\n\nGet RenewableDispatch power_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_prime_mover-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::RenewableDispatch) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet RenewableDispatch prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_rating-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_rating","text":"get_rating(value::RenewableDispatch) -> Any\n\n\nGet RenewableDispatch rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_reactive_power-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::RenewableDispatch) -> Any\n\n\nGet RenewableDispatch reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_reactive_power_limits-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::RenewableDispatch) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet RenewableDispatch reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.get_services-Tuple{RenewableDispatch}","page":"RenewableDispatch","title":"PowerSystems.get_services","text":"get_services(value::RenewableDispatch) -> Array{Service,1}\n\n\nGet RenewableDispatch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_active_power!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_available!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_available!","text":"set_available!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_base_power!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_bus!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_bus!","text":"set_bus!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_ext!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_ext!","text":"set_ext!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_internal!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_internal!","text":"set_internal!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_operation_cost!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_power_factor!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_power_factor!","text":"set_power_factor!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch power_factor.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_prime_mover!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_rating!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_rating!","text":"set_rating!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_reactive_power!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_reactive_power_limits!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_RenewableDispatch/#PowerSystems.set_services!-Tuple{RenewableDispatch,Any}","page":"RenewableDispatch","title":"PowerSystems.set_services!","text":"set_services!(value::RenewableDispatch, val::Any) -> Any\n\n\nSet RenewableDispatch services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/dynamic_generator/#DynamicGenerator","page":"Dynamic Generator","title":"DynamicGenerator","text":"","category":"section"},{"location":"model_library/dynamic_generator/","page":"Dynamic Generator","title":"Dynamic Generator","text":"Each generator is a data structure that is defined by the following components:","category":"page"},{"location":"model_library/dynamic_generator/","page":"Dynamic Generator","title":"Dynamic Generator","text":"Machine: That defines the stator electro-magnetic dynamics.\nShaft: That describes the rotor electro-mechanical dynamics.\nAutomatic Voltage Regulator: Electromotive dynamics to model an AVR controller.\nPower System Stabilizer: Control dynamics to define an stabilization signal for the AVR.\nPrime Mover and Turbine Governor: Thermo-mechanical dynamics and associated controllers.","category":"page"},{"location":"model_library/dynamic_generator/","page":"Dynamic Generator","title":"Dynamic Generator","text":"<img src=\"../../assets/gen_metamodel.png\" width=\"75%\"/>","category":"page"},{"location":"model_library/dynamic_generator/","page":"Dynamic Generator","title":"Dynamic Generator","text":"Modules = [PowerSystems]\nPages   = [\"dynamic_generator.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/dynamic_generator/#PowerSystems.DynamicGenerator","page":"Dynamic Generator","title":"PowerSystems.DynamicGenerator","text":"mutable struct DynamicGenerator{\n    M <: Machine,\n    S <: Shaft,\n    A <: AVR,\n    TG <: TurbineGov,\n    P <: PSS,\n} <: DynamicInjection\n    static_injector::Union{Nothing, Generator}\n    Ï‰_ref::Float64\n    machine::M\n    shaft::S\n    avr::A\n    prime_mover::TG\n    pss::P\n    n_states::Int64\n    states::Vector{Symbol}\n    ext::Dict{String, Any}\n    internal::InfrastructureSystemsInternal\nend\n\nA dynamic generator is composed by 5 components, namely a Machine, a Shaft, an Automatic Voltage Regulator (AVR), a Prime Mover (o Turbine Governor) and Power System Stabilizer (PSS). It requires a Static Injection device that is attached to it.\n\nArguments\n\nstatic_injector::Union{Nothing, StaticInjection}: Static Injector attached to the dynamic generator.\nÏ‰_ref::Float64: Frequency reference set-point in pu.\nmachine <: Machine: Machine model for modeling the electro-magnetic phenomena.\nshaft <: Shaft: Shaft model for modeling the electro-mechanical phenomena.\navr <: AVR: AVR model of the excitacion system.\nprime_mover <: TurbineGov: Prime Mover and Turbine Governor model for mechanical power.\npss <: PSS: Power System Stabilizer model.\nn_states::Int64: Number of states (will depend on the components).\nstates::Vector{Symbol}: Vector of states (will depend on the components).\next::Dict{String, Any}\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Source/#Source","page":"Source","title":"Source","text":"","category":"section"},{"location":"model_library/generated_Source/","page":"Source","title":"Source","text":"Modules = [PowerSystems]\nPages   = [\"generated/Source.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Source/#PowerSystems.Source","page":"Source","title":"PowerSystems.Source","text":"mutable struct Source <: StaticInjection\n    name::String\n    available::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    R_th::Float64\n    X_th::Float64\n    internal_voltage::Float64\n    internal_angle::Float64\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    internal::InfrastructureSystemsInternal\nend\n\nThis struct acts as an infinity bus.\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nactive_power::Float64\nreactive_power::Float64\nR_th::Float64: Source Thevenin resistance, validation range: (0, nothing)\nX_th::Float64: Source Thevenin reactance, validation range: (0, nothing)\ninternal_voltage::Float64: Internal Voltage, validation range: (0, nothing)\ninternal_angle::Float64: Internal Angle\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Source/#PowerSystems.get_R_th-Tuple{Source}","page":"Source","title":"PowerSystems.get_R_th","text":"get_R_th(value::Source) -> Float64\n\n\nGet Source R_th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_X_th-Tuple{Source}","page":"Source","title":"PowerSystems.get_X_th","text":"get_X_th(value::Source) -> Float64\n\n\nGet Source X_th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_active_power-Tuple{Source}","page":"Source","title":"PowerSystems.get_active_power","text":"get_active_power(value::Source) -> Float64\n\n\nGet Source active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_available-Tuple{Source}","page":"Source","title":"PowerSystems.get_available","text":"get_available(value::Source) -> Bool\n\n\nGet Source available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_bus-Tuple{Source}","page":"Source","title":"PowerSystems.get_bus","text":"get_bus(value::Source) -> Bus\n\n\nGet Source bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_ext-Tuple{Source}","page":"Source","title":"PowerSystems.get_ext","text":"get_ext(value::Source) -> Dict{String,Any}\n\n\nGet Source ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_internal-Tuple{Source}","page":"Source","title":"PowerSystems.get_internal","text":"get_internal(value::Source) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet Source internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_internal_angle-Tuple{Source}","page":"Source","title":"PowerSystems.get_internal_angle","text":"get_internal_angle(value::Source) -> Float64\n\n\nGet Source internal_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_internal_voltage-Tuple{Source}","page":"Source","title":"PowerSystems.get_internal_voltage","text":"get_internal_voltage(value::Source) -> Float64\n\n\nGet Source internal_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_reactive_power-Tuple{Source}","page":"Source","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::Source) -> Float64\n\n\nGet Source reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.get_services-Tuple{Source}","page":"Source","title":"PowerSystems.get_services","text":"get_services(value::Source) -> Array{Service,1}\n\n\nGet Source services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_R_th!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_R_th!","text":"set_R_th!(value::Source, val::Any) -> Any\n\n\nSet Source R_th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_X_th!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_X_th!","text":"set_X_th!(value::Source, val::Any) -> Any\n\n\nSet Source X_th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_active_power!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::Source, val::Any) -> Any\n\n\nSet Source active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_available!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_available!","text":"set_available!(value::Source, val::Any) -> Any\n\n\nSet Source available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_bus!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_bus!","text":"set_bus!(value::Source, val::Any) -> Any\n\n\nSet Source bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_ext!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_ext!","text":"set_ext!(value::Source, val::Any) -> Any\n\n\nSet Source ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_internal!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_internal!","text":"set_internal!(value::Source, val::Any) -> Any\n\n\nSet Source internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_internal_angle!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_internal_angle!","text":"set_internal_angle!(value::Source, val::Any) -> Any\n\n\nSet Source internal_angle.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_internal_voltage!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_internal_voltage!","text":"set_internal_voltage!(value::Source, val::Any) -> Any\n\n\nSet Source internal_voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_reactive_power!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::Source, val::Any) -> Any\n\n\nSet Source reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Source/#PowerSystems.set_services!-Tuple{Source,Any}","page":"Source","title":"PowerSystems.set_services!","text":"set_services!(value::Source, val::Any) -> Any\n\n\nSet Source services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#FixedAdmittance","page":"FixedAdmittance","title":"FixedAdmittance","text":"","category":"section"},{"location":"model_library/generated_FixedAdmittance/","page":"FixedAdmittance","title":"FixedAdmittance","text":"Modules = [PowerSystems]\nPages   = [\"generated/FixedAdmittance.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.FixedAdmittance","page":"FixedAdmittance","title":"PowerSystems.FixedAdmittance","text":"mutable struct FixedAdmittance <: ElectricLoad\n    name::String\n    available::Bool\n    bus::Bus\n    Y::Complex{Float64}\n    services::Vector{Service}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nY::Complex{Float64}: System per-unit value\nservices::Vector{Service}: Services that this device contributes to\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_Y-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_Y","text":"get_Y(value::FixedAdmittance) -> Complex{Float64}\n\n\nGet FixedAdmittance Y.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_available-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_available","text":"get_available(value::FixedAdmittance) -> Bool\n\n\nGet FixedAdmittance available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_bus-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_bus","text":"get_bus(value::FixedAdmittance) -> Bus\n\n\nGet FixedAdmittance bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_ext-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_ext","text":"get_ext(value::FixedAdmittance) -> Dict{String,Any}\n\n\nGet FixedAdmittance ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_internal-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_internal","text":"get_internal(value::FixedAdmittance) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet FixedAdmittance internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.get_services-Tuple{FixedAdmittance}","page":"FixedAdmittance","title":"PowerSystems.get_services","text":"get_services(value::FixedAdmittance) -> Array{Service,1}\n\n\nGet FixedAdmittance services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_Y!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_Y!","text":"set_Y!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance Y.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_available!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_available!","text":"set_available!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_bus!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_bus!","text":"set_bus!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_ext!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_ext!","text":"set_ext!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_internal!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_internal!","text":"set_internal!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FixedAdmittance/#PowerSystems.set_services!-Tuple{FixedAdmittance,Any}","page":"FixedAdmittance","title":"PowerSystems.set_services!","text":"set_services!(value::FixedAdmittance, val::Any) -> Any\n\n\nSet FixedAdmittance services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#GenericBattery","page":"GenericBattery","title":"GenericBattery","text":"","category":"section"},{"location":"model_library/generated_GenericBattery/","page":"GenericBattery","title":"GenericBattery","text":"Modules = [PowerSystems]\nPages   = [\"generated/GenericBattery.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_GenericBattery/#PowerSystems.GenericBattery","page":"GenericBattery","title":"PowerSystems.GenericBattery","text":"mutable struct GenericBattery <: Storage\n    name::String\n    available::Bool\n    bus::Bus\n    prime_mover::PrimeMovers.PrimeMover\n    initial_energy::Float64\n    state_of_charge_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    rating::Float64\n    active_power::Float64\n    input_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    output_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    efficiency::NamedTuple{(:in, :out), Tuple{Float64, Float64}}\n    reactive_power::Float64\n    reactive_power_limits::Union{Nothing, Min_Max}\n    base_power::Float64\n    services::Vector{Service}\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData structure for a generic battery\n\nArguments\n\nname::String\navailable::Bool\nbus::Bus\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\ninitial_energy::Float64: State of Charge of the Battery p.u.-hr, validation range: (0, nothing), action if invalid: error\nstate_of_charge_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Maximum and Minimum storage capacity in p.u.-hr, validation range: (0, nothing), action if invalid: error\nrating::Float64\nactive_power::Float64\ninput_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}, validation range: (0, nothing), action if invalid: error\noutput_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}, validation range: (0, nothing), action if invalid: error\nefficiency::NamedTuple{(:in, :out), Tuple{Float64, Float64}}, validation range: (0, 1), action if invalid: warn\nreactive_power::Float64, validation range: reactive_power_limits, action if invalid: warn\nreactive_power_limits::Union{Nothing, Min_Max}\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nservices::Vector{Service}: Services that this device contributes to\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_active_power-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_active_power","text":"get_active_power(value::GenericBattery) -> Any\n\n\nGet GenericBattery active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_available-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_available","text":"get_available(value::GenericBattery) -> Bool\n\n\nGet GenericBattery available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_base_power-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_base_power","text":"get_base_power(value::GenericBattery) -> Float64\n\n\nGet GenericBattery base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_bus-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_bus","text":"get_bus(value::GenericBattery) -> Bus\n\n\nGet GenericBattery bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_dynamic_injector-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::GenericBattery) -> Union{Nothing, DynamicInjection}\n\n\nGet GenericBattery dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_efficiency-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_efficiency","text":"get_efficiency(value::GenericBattery) -> NamedTuple{(:in, :out),Tuple{Float64,Float64}}\n\n\nGet GenericBattery efficiency.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_ext-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_ext","text":"get_ext(value::GenericBattery) -> Dict{String,Any}\n\n\nGet GenericBattery ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_initial_energy-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_initial_energy","text":"get_initial_energy(value::GenericBattery) -> Any\n\n\nGet GenericBattery initial_energy.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_input_active_power_limits-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_input_active_power_limits","text":"get_input_active_power_limits(value::GenericBattery) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet GenericBattery input_active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_internal-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_internal","text":"get_internal(value::GenericBattery) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet GenericBattery internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_output_active_power_limits-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_output_active_power_limits","text":"get_output_active_power_limits(value::GenericBattery) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet GenericBattery output_active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_prime_mover-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::GenericBattery) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet GenericBattery prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_rating-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_rating","text":"get_rating(value::GenericBattery) -> Any\n\n\nGet GenericBattery rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_reactive_power-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::GenericBattery) -> Any\n\n\nGet GenericBattery reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_reactive_power_limits-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::GenericBattery) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet GenericBattery reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_services-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_services","text":"get_services(value::GenericBattery) -> Array{Service,1}\n\n\nGet GenericBattery services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.get_state_of_charge_limits-Tuple{GenericBattery}","page":"GenericBattery","title":"PowerSystems.get_state_of_charge_limits","text":"get_state_of_charge_limits(value::GenericBattery) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet GenericBattery state_of_charge_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_active_power!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_available!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_available!","text":"set_available!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_base_power!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_bus!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_bus!","text":"set_bus!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_efficiency!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_efficiency!","text":"set_efficiency!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery efficiency.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_ext!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_ext!","text":"set_ext!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_initial_energy!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_initial_energy!","text":"set_initial_energy!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery initial_energy.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_input_active_power_limits!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_input_active_power_limits!","text":"set_input_active_power_limits!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery input_active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_internal!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_internal!","text":"set_internal!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_output_active_power_limits!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_output_active_power_limits!","text":"set_output_active_power_limits!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery output_active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_prime_mover!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_rating!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_rating!","text":"set_rating!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_reactive_power!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_reactive_power_limits!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_services!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_services!","text":"set_services!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_GenericBattery/#PowerSystems.set_state_of_charge_limits!-Tuple{GenericBattery,Any}","page":"GenericBattery","title":"PowerSystems.set_state_of_charge_limits!","text":"set_state_of_charge_limits!(value::GenericBattery, val::Any) -> Any\n\n\nSet GenericBattery state_of_charge_limits.\n\n\n\n\n\n","category":"method"},{"location":"user_guide/quick_start_guide/#Quick-Start-Guide","page":"Quick Start Guide","title":"Quick Start Guide","text":"","category":"section"},{"location":"user_guide/quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"This section is still under development. Please visit PowerSystems.jl Intro in the mean time.","category":"page"},{"location":"model_library/generated_AVR/#AVR","page":"AVR","title":"AVR","text":"","category":"section"},{"location":"model_library/generated_AVR/#AVRFixed","page":"AVR","title":"AVRFixed","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/AVRFixed.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.AVRFixed","page":"AVR","title":"PowerSystems.AVRFixed","text":"mutable struct AVRFixed <: AVR\n    Vf::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a AVR that returns a fixed voltage to the rotor winding\n\nArguments\n\nVf::Float64: Fixed voltage field applied to the rotor winding, validation range: (0, nothing)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: Fixed AVR has no states\nn_states::Int: Fixed AVR has no states\nstates_types::Vector{StateTypes.StateType}: Fixed AVR has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::AVRFixed) -> Float64\n\n\nGet AVRFixed V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vf-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_Vf","text":"get_Vf(value::AVRFixed) -> Float64\n\n\nGet AVRFixed Vf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::AVRFixed) -> Dict{String,Any}\n\n\nGet AVRFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::AVRFixed) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AVRFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::AVRFixed) -> Int64\n\n\nGet AVRFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::AVRFixed) -> Array{Symbol,1}\n\n\nGet AVRFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{AVRFixed}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::AVRFixed) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet AVRFixed states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vf!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_Vf!","text":"set_Vf!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed Vf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{AVRFixed,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::AVRFixed, val::Any) -> Any\n\n\nSet AVRFixed states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#AVRSimple","page":"AVR","title":"AVRSimple","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/AVRSimple.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.AVRSimple","page":"AVR","title":"PowerSystems.AVRSimple","text":"mutable struct AVRSimple <: AVR\n    Kv::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a simple proportional AVR in the derivative of EMF i.e. an integrator controller on EMF\n\nArguments\n\nKv::Float64: Proportional Gain, validation range: (0, nothing)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVf: field voltage\n\nn_states::Int: Fixed AVR has 1 states\nstates_types::Vector{StateTypes.StateType}: Simple AVR has 1 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kv-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_Kv","text":"get_Kv(value::AVRSimple) -> Float64\n\n\nGet AVRSimple Kv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::AVRSimple) -> Float64\n\n\nGet AVRSimple V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::AVRSimple) -> Dict{String,Any}\n\n\nGet AVRSimple ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::AVRSimple) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AVRSimple internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::AVRSimple) -> Int64\n\n\nGet AVRSimple n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::AVRSimple) -> Array{Symbol,1}\n\n\nGet AVRSimple states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{AVRSimple}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::AVRSimple) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet AVRSimple states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kv!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_Kv!","text":"set_Kv!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple Kv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{AVRSimple,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::AVRSimple, val::Any) -> Any\n\n\nSet AVRSimple states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#AVRTypeI","page":"AVR","title":"AVRTypeI","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/AVRTypeI.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.AVRTypeI","page":"AVR","title":"PowerSystems.AVRTypeI","text":"mutable struct AVRTypeI <: AVR\n    Ka::Float64\n    Ke::Float64\n    Kf::Float64\n    Ta::Float64\n    Te::Float64\n    Tf::Float64\n    Tr::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ae::Float64\n    Be::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of an Automatic Voltage Regulator Type I - Resembles IEEE Type DC1\n\nArguments\n\nKa::Float64: Amplifier Gain, validation range: (0, nothing)\nKe::Float64: Field circuit integral deviation, validation range: (0, nothing)\nKf::Float64: Stabilizer Gain in s * pu/pu, validation range: (0, nothing)\nTa::Float64: Amplifier Time Constant in s, validation range: (0, nothing)\nTe::Float64: Field Circuit Time Constant in s, validation range: (0, nothing)\nTf::Float64: Stabilizer Time Constant in s, validation range: (0, nothing)\nTr::Float64: Voltage Measurement Time Constant in s, validation range: (0, nothing)\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for pi controler (Va_min, Va_max)\nAe::Float64: 1st ceiling coefficient, validation range: (0, nothing)\nBe::Float64: 2nd ceiling coefficient, validation range: (0, nothing)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVf: Voltage field,\nVr1: Amplifier State,\nVr2: Stabilizing Feedback State,\nVm: Measured voltage\n\nn_states::Int: The AVR Type I has 4 states\nstates_types::Vector{StateTypes.StateType}: AVR Type I has 4 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ae-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Ae","text":"get_Ae(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Ae.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Be-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Be","text":"get_Be(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Be.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::AVRTypeI) -> Float64\n\n\nGet AVRTypeI V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::AVRTypeI) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet AVRTypeI Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::AVRTypeI) -> Dict{String,Any}\n\n\nGet AVRTypeI ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::AVRTypeI) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AVRTypeI internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::AVRTypeI) -> Int64\n\n\nGet AVRTypeI n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::AVRTypeI) -> Array{Symbol,1}\n\n\nGet AVRTypeI states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{AVRTypeI}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::AVRTypeI) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet AVRTypeI states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ae!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Ae!","text":"set_Ae!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Ae.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Be!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Be!","text":"set_Be!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Be.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{AVRTypeI,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::AVRTypeI, val::Any) -> Any\n\n\nSet AVRTypeI states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#AVRTypeII","page":"AVR","title":"AVRTypeII","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/AVRTypeII.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.AVRTypeII","page":"AVR","title":"PowerSystems.AVRTypeII","text":"mutable struct AVRTypeII <: AVR\n    K0::Float64\n    T1::Float64\n    T2::Float64\n    T3::Float64\n    T4::Float64\n    Te::Float64\n    Tr::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ae::Float64\n    Be::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of an Automatic Voltage Regulator Type II -  Typical static exciter model\n\nArguments\n\nK0::Float64: Regulator Gain, validation range: (0, nothing)\nT1::Float64: First Pole in s, validation range: (0, nothing)\nT2::Float64: First zero in s, validation range: (0, nothing)\nT3::Float64: First Pole in s, validation range: (0, nothing)\nT4::Float64: First zero in s, validation range: (0, nothing)\nTe::Float64: Field Circuit Time Constant in s, validation range: (0, nothing)\nTr::Float64: Voltage Measurement Time Constant in s, validation range: (0, nothing)\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for pi controler (Va_min, Va_max)\nAe::Float64: 1st ceiling coefficient, validation range: (0, nothing)\nBe::Float64: 2nd ceiling coefficient, validation range: (0, nothing)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVf: Voltage field,\nVr1: First Lead-Lag state,\nVr2: Second lead-lag state,\nVm: Measured voltage\n\nn_states::Int: AVR Type II has 4 states\nstates_types::Vector{StateTypes.StateType}: AVR Type II has 4 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ae-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_Ae","text":"get_Ae(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII Ae.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Be-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_Be","text":"get_Be(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII Be.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K0-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_K0","text":"get_K0(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII K0.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_T1-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_T1","text":"get_T1(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_T2-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_T2","text":"get_T2(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_T3-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_T3","text":"get_T3(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_T4-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_T4","text":"get_T4(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::AVRTypeII) -> Float64\n\n\nGet AVRTypeII V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::AVRTypeII) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet AVRTypeII Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::AVRTypeII) -> Dict{String,Any}\n\n\nGet AVRTypeII ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::AVRTypeII) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet AVRTypeII internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::AVRTypeII) -> Int64\n\n\nGet AVRTypeII n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::AVRTypeII) -> Array{Symbol,1}\n\n\nGet AVRTypeII states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{AVRTypeII}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::AVRTypeII) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet AVRTypeII states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ae!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_Ae!","text":"set_Ae!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII Ae.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Be!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_Be!","text":"set_Be!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII Be.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K0!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_K0!","text":"set_K0!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII K0.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_T1!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_T1!","text":"set_T1!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII T1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_T2!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_T2!","text":"set_T2!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII T2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_T3!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_T3!","text":"set_T3!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII T3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_T4!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_T4!","text":"set_T4!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII T4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{AVRTypeII,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::AVRTypeII, val::Any) -> Any\n\n\nSet AVRTypeII states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESAC1A","page":"AVR","title":"ESAC1A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESAC1A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESAC1A","page":"AVR","title":"PowerSystems.ESAC1A","text":"mutable struct ESAC1A <: AVR\n    Tr::Float64\n    Tb::Float64\n    Tc::Float64\n    Ka::Float64\n    Ta::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    Kc::Float64\n    Kd::Float64\n    Ke::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nThis excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers. The exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients. Parameters of IEEE Std 421.5 Type AC1A Excitacion System. This model corresponds to ESAC1A in PSSE and PSLF\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nTb::Float64: Regulator denominator (lag) time constant in s, validation range: (0, 20), action if invalid: warn\nTc::Float64: Regulator numerator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nKa::Float64: Regulator output gain, validation range: (0, 1000), action if invalid: warn\nTa::Float64: Regulator output time constant in s, validation range: (0, 10)\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Va_min, Va_max)\nTe::Float64: Exciter field time constant in s, validation range: (\"eps()\", 2), action if invalid: error\nKf::Float64: Rate feedback excitation system stabilizer gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Rate feedback time constant, validation range: (\"eps()\", 1.5), action if invalid: error\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1), action if invalid: warn\nKd::Float64: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, 1), action if invalid: warn\nKe::Float64: Exciter field proportional constant, validation range: (0, 1), action if invalid: warn\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for exciter field voltage: (Vr_min, Vr_max)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(x) = B(x - A)^2/x\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: Lead-lag state,\nVr2: Regulator output state,\nVe: Integrator output state,\nVr3: Feedback output state\n\nn_states::Int: ESAC1A has 5 states\nstates_types::Vector{StateTypes.StateType}: ESAC1A has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::ESAC1A) -> Tuple{Float64,Float64}\n\n\nGet ESAC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kd-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Kd","text":"get_Kd(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::ESAC1A) -> Tuple{Float64,Float64}\n\n\nGet ESAC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESAC1A) -> Float64\n\n\nGet ESAC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESAC1A) -> Float64\n\n\nGet ESAC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::ESAC1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESAC1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESAC1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESAC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESAC1A) -> Dict{String,Any}\n\n\nGet ESAC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESAC1A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESAC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESAC1A) -> Int64\n\n\nGet ESAC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::ESAC1A) -> Tuple{Float64,Float64}\n\n\nGet ESAC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESAC1A) -> Array{Symbol,1}\n\n\nGet ESAC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESAC1A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESAC1A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESAC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kd!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kd!","text":"set_Kd!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESAC1A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESAC1A, val::Any) -> Any\n\n\nSet ESAC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESAC6A","page":"AVR","title":"ESAC6A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESAC6A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESAC6A","page":"AVR","title":"PowerSystems.ESAC6A","text":"mutable struct ESAC6A <: AVR\n    Tr::Float64\n    Ka::Float64\n    Ta::Float64\n    Tk::Float64\n    Tb::Float64\n    Tc::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Te::Float64\n    VFE_lim::Float64\n    Kh::Float64\n    VH_max::Float64\n    Th::Float64\n    Tj::Float64\n    Kc::Float64\n    Kd::Float64\n    Ke::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nModified AC6A. Used to represent field-controlled alternator-rectifier excitation systems with system-supplied electronic voltage regulators.  Parameters of IEEE Std 421.5 Type AC6A Excitacion System. ESAC6A in PSSE and PSLF.\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nKa::Float64: Regulator output gain, validation range: (0, 1000), action if invalid: warn\nTa::Float64: Regulator output lag time constant in s, validation range: (0, 10), action if invalid: warn\nTk::Float64: Voltage Regulator lead time constant, validation range: (0, 10), action if invalid: warn\nTb::Float64: Regulator denominator (lag) time constant in s, validation range: (0, 20), action if invalid: warn\nTc::Float64: Regulator numerator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Va_min, Va_max)\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for exciter field voltage (Vr_min, Vr_max)\nTe::Float64: Exciter field time constant, validation range: (\"eps()\", 2.0), action if invalid: error\nVFE_lim::Float64: Exciter field current limiter reference, validation range: (-5, 20), action if invalid: warn\nKh::Float64: Exciter field current regulator feedback gain, validation range: (0, 100), action if invalid: warn\nVH_max::Float64: Exciter field current limiter maximum output, validation range: (0, 100), action if invalid: warn\nTh::Float64: Exciter field current limiter denominator (lag) time constant, validation range: (0, 1)\nTj::Float64: Exciter field current limiter numerator (lead) time constant, validation range: (0, 1), action if invalid: warn\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1)\nKd::Float64: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, 2), action if invalid: warn\nKe::Float64: Exciter field proportional constant, validation range: (0, 2), action if invalid: warn\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: Lead-lag state,\nVr2: Regulator output state,\nVe: Integrator output state,\nVr3: Feedback output state\n\nn_states::Int: ESAC6A has 5 states\nstates_types::Vector{StateTypes.StateType}: ESAC6A has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::ESAC6A) -> Tuple{Float64,Float64}\n\n\nGet ESAC6A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kd-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Kd","text":"get_Kd(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kh-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Kh","text":"get_Kh(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Kh.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::ESAC6A) -> Tuple{Float64,Float64}\n\n\nGet ESAC6A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Th-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Th","text":"get_Th(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tj-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Tj","text":"get_Tj(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Tj.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tk-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Tk","text":"get_Tk(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Tk.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESAC6A) -> Float64\n\n\nGet ESAC6A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_VFE_lim-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_VFE_lim","text":"get_VFE_lim(value::ESAC6A) -> Float64\n\n\nGet ESAC6A VFE_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_VH_max-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_VH_max","text":"get_VH_max(value::ESAC6A) -> Float64\n\n\nGet ESAC6A VH_max.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESAC6A) -> Float64\n\n\nGet ESAC6A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::ESAC6A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESAC6A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESAC6A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESAC6A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESAC6A) -> Dict{String,Any}\n\n\nGet ESAC6A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESAC6A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESAC6A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESAC6A) -> Int64\n\n\nGet ESAC6A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::ESAC6A) -> Tuple{Float64,Float64}\n\n\nGet ESAC6A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESAC6A) -> Array{Symbol,1}\n\n\nGet ESAC6A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESAC6A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESAC6A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESAC6A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kd!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Kd!","text":"set_Kd!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kh!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Kh!","text":"set_Kh!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Kh.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Th!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Th!","text":"set_Th!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Th.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tj!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Tj!","text":"set_Tj!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Tj.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tk!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Tk!","text":"set_Tk!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Tk.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_VFE_lim!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_VFE_lim!","text":"set_VFE_lim!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A VFE_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_VH_max!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_VH_max!","text":"set_VH_max!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A VH_max.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESAC6A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESAC6A, val::Any) -> Any\n\n\nSet ESAC6A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESDC1A","page":"AVR","title":"ESDC1A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESDC1A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESDC1A","page":"AVR","title":"PowerSystems.ESDC1A","text":"mutable struct ESDC1A <: AVR\n    Tr::Float64\n    Ka::Float64\n    Ta::Float64\n    Tb::Float64\n    Tc::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ke::Float64\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    switch::Int\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nSelf-excited shunt fields with the voltage regulator operating in a mode commonly termed buck-boost.  Parameters of IEEE Std 421.5 Type DC1A Excitacion System. This model corresponds to ESDC1A in PSSE and PSLF\n\nArguments\n\nTr::Float64: Voltage Measurement Time Constant in s, validation range: (0, 0.5), action if invalid: warn\nKa::Float64: Amplifier Gain, validation range: (10, 500), action if invalid: warn\nTa::Float64: Amplifier Time Constant in s, validation range: (0, 1), action if invalid: warn\nTb::Float64: Regulator input Time Constant in s, validation range: (0, nothing), action if invalid: warn\nTc::Float64: Regulator input Time Constant in s, validation range: (0, nothing), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Voltage regulator limits (regulator output) (Vimin, Vimax)\nKe::Float64: Exciter constant related to self-excited field, validation range: (0, nothing)\nTe::Float64: Exciter time constant, integration rate associated with exciter control, validation range: (\"eps()\", 1), action if invalid: error\nKf::Float64: Excitation control system stabilizer gain, validation range: (\"eps()\", 0.3), action if invalid: error\nTf::Float64: Excitation control system stabilizer time constant, validation range: (\"eps()\", nothing), action if invalid: error\nswitch::Int: Switch, validation range: (0, 1), action if invalid: error\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVt: Terminal Voltage,\nVr1: input lead lag,\nVr2: Regulator Output,\nVf: Exciter Output, \nVr3: Rate feedback integrator\n\nn_states::Int: The ESDC1A has 5 states\nstates_types::Vector{StateTypes.StateType}: ESDC1A has 5 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::ESDC1A) -> Tuple{Float64,Float64}\n\n\nGet ESDC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::ESDC1A) -> Tuple{Float64,Float64}\n\n\nGet ESDC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESDC1A) -> Float64\n\n\nGet ESDC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESDC1A) -> Float64\n\n\nGet ESDC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESDC1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESDC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESDC1A) -> Dict{String,Any}\n\n\nGet ESDC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESDC1A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESDC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESDC1A) -> Int64\n\n\nGet ESDC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::ESDC1A) -> Tuple{Float64,Float64}\n\n\nGet ESDC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESDC1A) -> Array{Symbol,1}\n\n\nGet ESDC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESDC1A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESDC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_switch-Tuple{ESDC1A}","page":"AVR","title":"PowerSystems.get_switch","text":"get_switch(value::ESDC1A) -> Int64\n\n\nGet ESDC1A switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_switch!-Tuple{ESDC1A,Any}","page":"AVR","title":"PowerSystems.set_switch!","text":"set_switch!(value::ESDC1A, val::Any) -> Any\n\n\nSet ESDC1A switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESDC2A","page":"AVR","title":"ESDC2A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESDC2A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESDC2A","page":"AVR","title":"PowerSystems.ESDC2A","text":"mutable struct ESDC2A <: AVR\n    Tr::Float64\n    Ka::Float64\n    Ta::Float64\n    Tb::Float64\n    Tc::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ke::Float64\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    switch::Int\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nIs used to represent field-controlled dc commutator exciters with continuously acting voltage regulators having power supplies derived from the generator or auxiliaries bus. Parameters of IEEE Std 421.5 Type DC2A Excitacion System. This model corresponds to ESDC2A in PSSE and PSLF\n\nArguments\n\nTr::Float64: Voltage Measurement Time Constant in s, validation range: (0, 0.5), action if invalid: warn\nKa::Float64: Amplifier Gain, validation range: (10, 500), action if invalid: warn\nTa::Float64: Amplifier Time Constant in s, validation range: (0, 1.0), action if invalid: warn\nTb::Float64: Regulator input Time Constant in s, validation range: (0, nothing), action if invalid: warn\nTc::Float64: Regulator input Time Constant in s, validation range: (0, nothing), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Voltage regulator limits (regulator output) (Vimin, Vimax)\nKe::Float64: Exciter constant related to self-excited field, validation range: (-1.0, 1.0), action if invalid: warn\nTe::Float64: Exciter time constant, integration rate associated with exciter control, validation range: (\"eps()\", 2.0), action if invalid: error\nKf::Float64: Excitation control system stabilizer gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Excitation control system stabilizer time constant. Appropiate Data: 5.0 <= Tf/Kf <= 15.0, validation range: (\"eps()\", 1.5), action if invalid: error\nswitch::Int: Switch, validation range: (0, 1), action if invalid: error\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVt: Terminal Voltage,\nVr1: input lead lag,\nVr2: Regulator Output,\nVf: Exciter Output, \nVr3: Rate feedback integrator\n\nn_states::Int: The ESDC2A has 5 states\nstates_types::Vector{StateTypes.StateType}: ESDC2A has 5 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::ESDC2A) -> Tuple{Float64,Float64}\n\n\nGet ESDC2A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::ESDC2A) -> Tuple{Float64,Float64}\n\n\nGet ESDC2A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESDC2A) -> Float64\n\n\nGet ESDC2A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESDC2A) -> Float64\n\n\nGet ESDC2A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESDC2A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESDC2A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESDC2A) -> Dict{String,Any}\n\n\nGet ESDC2A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESDC2A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESDC2A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESDC2A) -> Int64\n\n\nGet ESDC2A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::ESDC2A) -> Tuple{Float64,Float64}\n\n\nGet ESDC2A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESDC2A) -> Array{Symbol,1}\n\n\nGet ESDC2A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESDC2A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESDC2A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_switch-Tuple{ESDC2A}","page":"AVR","title":"PowerSystems.get_switch","text":"get_switch(value::ESDC2A) -> Int64\n\n\nGet ESDC2A switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_switch!-Tuple{ESDC2A,Any}","page":"AVR","title":"PowerSystems.set_switch!","text":"set_switch!(value::ESDC2A, val::Any) -> Any\n\n\nSet ESDC2A switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESST1A","page":"AVR","title":"ESST1A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESST1A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESST1A","page":"AVR","title":"PowerSystems.ESST1A","text":"mutable struct ESST1A <: AVR\n    UEL_flags::Int\n    PSS_flags::Int\n    Tr::Float64\n    Vi_lim::Tuple{Float64, Float64}\n    Tc::Float64\n    Tb::Float64\n    Tc1::Float64\n    Tb1::Float64\n    Ka::Float64\n    Ta::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Kc::Float64\n    Kf::Float64\n    Tf::Float64\n    K_lr::Float64\n    I_lr::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nThis excitation system supplies power through a transformer from the generator terminals and its regulated by a controlled rectifier (via thyristors). Parameters of IEEE Std 421.5 Type ST1A Excitacion System. ESST1A in PSSE and PSLF\n\nArguments\n\nUEL_flags::Int: Code input for Underexcitization limiter (UEL) entry. Not supported., validation range: (1, 3), action if invalid: warn\nPSS_flags::Int: Code input for Power System Stabilizer (PSS) or (VOS) entry., validation range: (1, 2)\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.1), action if invalid: warn\nVi_lim::Tuple{Float64, Float64}: Voltage error limits (regulator input) (Vimin, Vimax)\nTc::Float64: First regulator denominator (lead) time constant in s, validation range: (0, 10), action if invalid: warn\nTb::Float64: First regulator denominator (lag) time constant in s, validation range: (0, 20)\nTc1::Float64: Second regulator denominator (lead) time constant in s, validation range: (0, 10), action if invalid: warn\nTb1::Float64: Second regulator denominator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nKa::Float64: Voltage regulator gain, validation range: (50, 1000), action if invalid: warn\nTa::Float64: Voltage regulator time constant in s, validation range: (0, 0.5), action if invalid: warn\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Va_min, Va_max)\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for exciter output (Vr_min, Vr_max)\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 0.3), action if invalid: warn\nKf::Float64: Rate feedback gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Rate feedback time constant in s, validation range: (\"eps()\", 1.5), action if invalid: error\nK_lr::Float64: Exciter output current limiter gain, validation range: (0, 5), action if invalid: warn\nI_lr::Float64: Exciter output current limit reference, validation range: (0, 5), action if invalid: warn\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: First Lead-lag state,\nVr2: Second lead-lag state,\nVa: Regulator output state,\nVr3: Feedback output state\n\nn_states::Int: ST1A has 5 states\nstates_types::Vector{StateTypes.StateType}: ST1A has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_I_lr-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_I_lr","text":"get_I_lr(value::ESST1A) -> Float64\n\n\nGet ESST1A I_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K_lr-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_K_lr","text":"get_K_lr(value::ESST1A) -> Float64\n\n\nGet ESST1A K_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::ESST1A) -> Float64\n\n\nGet ESST1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::ESST1A) -> Float64\n\n\nGet ESST1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::ESST1A) -> Float64\n\n\nGet ESST1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_PSS_flags-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_PSS_flags","text":"get_PSS_flags(value::ESST1A) -> Int64\n\n\nGet ESST1A PSS_flags.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESST1A) -> Float64\n\n\nGet ESST1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::ESST1A) -> Float64\n\n\nGet ESST1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb1-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tb1","text":"get_Tb1(value::ESST1A) -> Float64\n\n\nGet ESST1A Tb1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::ESST1A) -> Float64\n\n\nGet ESST1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc1-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tc1","text":"get_Tc1(value::ESST1A) -> Float64\n\n\nGet ESST1A Tc1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::ESST1A) -> Float64\n\n\nGet ESST1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESST1A) -> Float64\n\n\nGet ESST1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_UEL_flags-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_UEL_flags","text":"get_UEL_flags(value::ESST1A) -> Int64\n\n\nGet ESST1A UEL_flags.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESST1A) -> Float64\n\n\nGet ESST1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::ESST1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESST1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vi_lim-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Vi_lim","text":"get_Vi_lim(value::ESST1A) -> Tuple{Float64,Float64}\n\n\nGet ESST1A Vi_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESST1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESST1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESST1A) -> Dict{String,Any}\n\n\nGet ESST1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESST1A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESST1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESST1A) -> Int64\n\n\nGet ESST1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESST1A) -> Array{Symbol,1}\n\n\nGet ESST1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESST1A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESST1A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESST1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_I_lr!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_I_lr!","text":"set_I_lr!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A I_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K_lr!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_K_lr!","text":"set_K_lr!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A K_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_PSS_flags!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_PSS_flags!","text":"set_PSS_flags!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A PSS_flags.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb1!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tb1!","text":"set_Tb1!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tb1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc1!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tc1!","text":"set_Tc1!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tc1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_UEL_flags!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_UEL_flags!","text":"set_UEL_flags!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A UEL_flags.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vi_lim!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Vi_lim!","text":"set_Vi_lim!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Vi_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESST1A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESST1A, val::Any) -> Any\n\n\nSet ESST1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#ESST4B","page":"AVR","title":"ESST4B","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/ESST4B.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.ESST4B","page":"AVR","title":"PowerSystems.ESST4B","text":"mutable struct ESST4B <: AVR\n    Tr::Float64\n    K_pr::Float64\n    K_ir::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ta::Float64\n    K_pm::Float64\n    K_im::Float64\n    Vm_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Kg::Float64\n    Kp::Float64\n    Ki::Float64\n    VB_max::Float64\n    Kc::Float64\n    Xl::Float64\n    Î¸p::Float64\n    V_ref::Float64\n    Î¸p_rad::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nIn these excitation systems, voltage (and also current in compounded systems) is transformed to an appropriate level. Rectifiers, either controlled or non-controlled, provide the necessary direct current for the generator field. Parameters of IEEE Std 421.5 Type ST4B Excitacion System. ESST4B in PSSE and PSLF\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nK_pr::Float64: Regulator propotional gain, validation range: (0, 75), action if invalid: warn\nK_ir::Float64: Regulator integral gain, validation range: (0, 75), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Voltage regulator limits (Vimin, Vimax)\nTa::Float64: Voltage regulator time constant in s, validation range: (0, 1), action if invalid: warn\nK_pm::Float64: Voltage regulator proportional gain output, validation range: (0, 1.2), action if invalid: warn\nK_im::Float64: Voltage regulator integral gain output, validation range: (0, 18), action if invalid: warn\nVm_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for inner loop output (Vm_min, Vm_max)\nKg::Float64: Feedback gain constant of the inner loop field regulator, validation range: (0, 1.1), action if invalid: warn\nKp::Float64: Potential circuit (voltage) gain coefficient, validation range: (0, 10), action if invalid: warn\nKi::Float64: Compound circuit (current) gain coefficient, validation range: (0, 1.1), action if invalid: warn\nVB_max::Float64: Maximum available exciter voltage, validation range: (1, 20), action if invalid: warn\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1), action if invalid: warn\nXl::Float64: Reactance associated with potential source, validation range: (0, 0.5), action if invalid: warn\nÎ¸p::Float64: Potential circuit phase angle (degrees), validation range: (-90, 90), action if invalid: error\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nÎ¸p_rad::Float64: Potential circuit phase angle (radians)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVt: Sensed Terminal Voltage,\nVr1: Regulator Integrator,\nVr2: Regulator Output,\nVm: Output integrator\n\nn_states::Int: ST4B has 4 states\nstates_types::Vector{StateTypes.StateType}: ST4B has 4 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_K_im-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_K_im","text":"get_K_im(value::ESST4B) -> Float64\n\n\nGet ESST4B K_im.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K_ir-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_K_ir","text":"get_K_ir(value::ESST4B) -> Float64\n\n\nGet ESST4B K_ir.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K_pm-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_K_pm","text":"get_K_pm(value::ESST4B) -> Float64\n\n\nGet ESST4B K_pm.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K_pr-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_K_pr","text":"get_K_pr(value::ESST4B) -> Float64\n\n\nGet ESST4B K_pr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::ESST4B) -> Float64\n\n\nGet ESST4B Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kg-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Kg","text":"get_Kg(value::ESST4B) -> Float64\n\n\nGet ESST4B Kg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ki-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Ki","text":"get_Ki(value::ESST4B) -> Float64\n\n\nGet ESST4B Ki.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kp-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Kp","text":"get_Kp(value::ESST4B) -> Float64\n\n\nGet ESST4B Kp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::ESST4B) -> Float64\n\n\nGet ESST4B Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::ESST4B) -> Float64\n\n\nGet ESST4B Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_VB_max-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_VB_max","text":"get_VB_max(value::ESST4B) -> Float64\n\n\nGet ESST4B VB_max.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ESST4B) -> Float64\n\n\nGet ESST4B V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vm_lim-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Vm_lim","text":"get_Vm_lim(value::ESST4B) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESST4B Vm_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::ESST4B) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet ESST4B Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Xl-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Xl","text":"get_Xl(value::ESST4B) -> Float64\n\n\nGet ESST4B Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::ESST4B) -> Dict{String,Any}\n\n\nGet ESST4B ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::ESST4B) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ESST4B internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::ESST4B) -> Int64\n\n\nGet ESST4B n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::ESST4B) -> Array{Symbol,1}\n\n\nGet ESST4B states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::ESST4B) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet ESST4B states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Î¸p-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Î¸p","text":"get_Î¸p(value::ESST4B) -> Float64\n\n\nGet ESST4B Î¸p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Î¸p_rad-Tuple{ESST4B}","page":"AVR","title":"PowerSystems.get_Î¸p_rad","text":"get_Î¸p_rad(value::ESST4B) -> Float64\n\n\nGet ESST4B Î¸p_rad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K_im!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_K_im!","text":"set_K_im!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B K_im.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K_ir!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_K_ir!","text":"set_K_ir!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B K_ir.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K_pm!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_K_pm!","text":"set_K_pm!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B K_pm.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K_pr!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_K_pr!","text":"set_K_pr!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B K_pr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kg!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Kg!","text":"set_Kg!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Kg.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ki!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Ki!","text":"set_Ki!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Ki.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kp!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Kp!","text":"set_Kp!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Kp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_VB_max!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_VB_max!","text":"set_VB_max!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B VB_max.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vm_lim!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Vm_lim!","text":"set_Vm_lim!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Vm_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Xl!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Xl!","text":"set_Xl!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Xl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Î¸p!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Î¸p!","text":"set_Î¸p!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Î¸p.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Î¸p_rad!-Tuple{ESST4B,Any}","page":"AVR","title":"PowerSystems.set_Î¸p_rad!","text":"set_Î¸p_rad!(value::ESST4B, val::Any) -> Any\n\n\nSet ESST4B Î¸p_rad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#EXAC1","page":"AVR","title":"EXAC1","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/EXAC1.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.EXAC1","page":"AVR","title":"PowerSystems.EXAC1","text":"mutable struct EXAC1 <: AVR\n    Tr::Float64\n    Tb::Float64\n    Tc::Float64\n    Ka::Float64\n    Ta::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    Kc::Float64\n    Kd::Float64\n    Ke::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nModified ESAC1A. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers. The exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients. Parameters of IEEE Std 421.5 Type AC1A.  EXAC1 in PSSE and PSLF\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nTb::Float64: Regulator denominator (lag) time constant in s, validation range: (0, 20), action if invalid: warn\nTc::Float64: Regulator numerator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nKa::Float64: Regulator output gain, validation range: (0, 1000)\nTa::Float64: Regulator output time constant in s, validation range: (0, 10), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Vr_min, Vr_max)\nTe::Float64: Exciter field time constant in s, validation range: (\"eps()\", 2), action if invalid: error\nKf::Float64: Rate feedback excitation system stabilizer gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Rate feedback time constant, validation range: (\"eps()\", 1.5), action if invalid: error\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1)\nKd::Float64: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, 1), action if invalid: warn\nKe::Float64: Exciter field proportional constant, validation range: (0, 1), action if invalid: warn\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: Lead-lag state,\nVr2: Regulator output state,\nVe: Integrator output state,\nVr3: Feedback output state\n\nn_states::Int: EXAC1 has 5 states\nstates_types::Vector{StateTypes.StateType}: EXAC1 has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::EXAC1) -> Tuple{Float64,Float64}\n\n\nGet EXAC1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::EXAC1) -> Float64\n\n\nGet EXAC1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::EXAC1) -> Float64\n\n\nGet EXAC1 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kd-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Kd","text":"get_Kd(value::EXAC1) -> Float64\n\n\nGet EXAC1 Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::EXAC1) -> Float64\n\n\nGet EXAC1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::EXAC1) -> Float64\n\n\nGet EXAC1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::EXAC1) -> Tuple{Float64,Float64}\n\n\nGet EXAC1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::EXAC1) -> Float64\n\n\nGet EXAC1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::EXAC1) -> Float64\n\n\nGet EXAC1 Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::EXAC1) -> Float64\n\n\nGet EXAC1 Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::EXAC1) -> Float64\n\n\nGet EXAC1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::EXAC1) -> Float64\n\n\nGet EXAC1 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::EXAC1) -> Float64\n\n\nGet EXAC1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::EXAC1) -> Float64\n\n\nGet EXAC1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::EXAC1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXAC1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::EXAC1) -> Dict{String,Any}\n\n\nGet EXAC1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::EXAC1) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet EXAC1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::EXAC1) -> Int64\n\n\nGet EXAC1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::EXAC1) -> Tuple{Float64,Float64}\n\n\nGet EXAC1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::EXAC1) -> Array{Symbol,1}\n\n\nGet EXAC1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{EXAC1}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::EXAC1) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet EXAC1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kd!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Kd!","text":"set_Kd!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{EXAC1,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::EXAC1, val::Any) -> Any\n\n\nSet EXAC1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#EXAC1A","page":"AVR","title":"EXAC1A","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/EXAC1A.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.EXAC1A","page":"AVR","title":"PowerSystems.EXAC1A","text":"mutable struct EXAC1A <: AVR\n    Tr::Float64\n    Tb::Float64\n    Tc::Float64\n    Ka::Float64\n    Ta::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    Kc::Float64\n    Kd::Float64\n    Ke::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nModified ESAC1A. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers. The exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients. Parameters of IEEE Std 421.5 Type AC1A Excitacion System. EXAC1A in PSSE and PSLF\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nTb::Float64: Regulator denominator (lag) time constant in s, validation range: (0, 20), action if invalid: warn\nTc::Float64: Regulator numerator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nKa::Float64: Regulator output gain, validation range: (0, 1000), action if invalid: warn\nTa::Float64: Regulator output time constant in s, validation range: (0, 10)\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Va_min, Va_max)\nTe::Float64: Exciter field time constant in s, validation range: (\"eps()\", 2), action if invalid: error\nKf::Float64: Rate feedback excitation system stabilizer gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Rate feedback time constant, validation range: (\"eps()\", 1.5), action if invalid: error\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1), action if invalid: warn\nKd::Float64: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, 1), action if invalid: warn\nKe::Float64: Exciter field proportional constant, validation range: (0, 1)\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for exciter field voltage: (Vr_min, Vr_max)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(x) = B(x - A)^2/x\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: Lead-lag state,\nVr2: Regulator output state,\nVe: Integrator output state,\nVr3: Feedback output state\n\nn_states::Int: EXAC1A has 5 states\nstates_types::Vector{StateTypes.StateType}: EXAC1A has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::EXAC1A) -> Tuple{Float64,Float64}\n\n\nGet EXAC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kd-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Kd","text":"get_Kd(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::EXAC1A) -> Tuple{Float64,Float64}\n\n\nGet EXAC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::EXAC1A) -> Float64\n\n\nGet EXAC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::EXAC1A) -> Float64\n\n\nGet EXAC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::EXAC1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXAC1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::EXAC1A) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXAC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::EXAC1A) -> Dict{String,Any}\n\n\nGet EXAC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::EXAC1A) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet EXAC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::EXAC1A) -> Int64\n\n\nGet EXAC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::EXAC1A) -> Tuple{Float64,Float64}\n\n\nGet EXAC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::EXAC1A) -> Array{Symbol,1}\n\n\nGet EXAC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{EXAC1A}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::EXAC1A) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet EXAC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kd!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kd!","text":"set_Kd!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{EXAC1A,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::EXAC1A, val::Any) -> Any\n\n\nSet EXAC1A states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#EXAC2","page":"AVR","title":"EXAC2","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/EXAC2.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.EXAC2","page":"AVR","title":"PowerSystems.EXAC2","text":"mutable struct EXAC2 <: AVR\n    Tr::Float64\n    Tb::Float64\n    Tc::Float64\n    Ka::Float64\n    Ta::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Kb::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Te::Float64\n    Kl::Float64\n    Kh::Float64\n    Kf::Float64\n    Tf::Float64\n    Kc::Float64\n    Kd::Float64\n    Ke::Float64\n    V_lr::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nModified AC2. This excitation systems consists of an alternator main exciter feeding its output via non-controlled rectifiers. The exciter does not employ self-excitation, and the voltage regulator power is taken from a source that is not affected by external transients. Parameters of IEEE Std 421.5 Type AC2A Excitacion System. The alternator main exciter is used, feeding its output via non-controlled rectifiers. The Type AC2C model is similar to that of Type AC1C except for the inclusion of exciter time constant compensation and exciter field current limiting elements. EXAC2 in PSSE and PSLF.\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nTb::Float64: Regulator denominator (lag) time constant in s, validation range: (0, 20), action if invalid: warn\nTc::Float64: Regulator numerator (lead) time constant in s, validation range: (0, 20), action if invalid: warn\nKa::Float64: Regulator output gain, validation range: (0, 1000)\nTa::Float64: Regulator output time constant in s, validation range: (0, 10), action if invalid: warn\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for regulator output (Va_min, Va_max)\nKb::Float64: Second Stage regulator gain, validation range: (\"eps()\", 500), action if invalid: error\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for exciter field voltage (Vr_min, Vr_max)\nTe::Float64: Exciter field time constant, validation range: (\"eps()\", 2), action if invalid: error\nKl::Float64: Exciter field current limiter gain, validation range: (0, 1.1), action if invalid: warn\nKh::Float64: Exciter field current regulator feedback gain, validation range: (0, 1.1), action if invalid: warn\nKf::Float64: Rate feedback excitation system stabilizer gain, validation range: (0, 0.3), action if invalid: warn\nTf::Float64: Rate feedback time constant, validation range: (\"eps()\", nothing), action if invalid: error\nKc::Float64: Rectifier loading factor proportional to commutating reactance, validation range: (0, 1), action if invalid: warn\nKd::Float64: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, 1), action if invalid: warn\nKe::Float64: Exciter field proportional constant, validation range: (0, 1), action if invalid: warn\nV_lr::Float64: Maximum exciter field current, validation range: (0, nothing), action if invalid: warn\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: Lead-lag state,\nVr2: Regulator output state,\nVe: Integrator output state,\nVr3: Feedback output state\n\nn_states::Int: EXAC2 has 5 states\nstates_types::Vector{StateTypes.StateType}: EXAC2 has 5 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::EXAC2) -> Tuple{Float64,Float64}\n\n\nGet EXAC2 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::EXAC2) -> Float64\n\n\nGet EXAC2 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kb-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kb","text":"get_Kb(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kd-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kd","text":"get_Kd(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::EXAC2) -> Float64\n\n\nGet EXAC2 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kh-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kh","text":"get_Kh(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kh.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kl-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Kl","text":"get_Kl(value::EXAC2) -> Float64\n\n\nGet EXAC2 Kl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::EXAC2) -> Tuple{Float64,Float64}\n\n\nGet EXAC2 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::EXAC2) -> Float64\n\n\nGet EXAC2 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::EXAC2) -> Float64\n\n\nGet EXAC2 Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tc-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Tc","text":"get_Tc(value::EXAC2) -> Float64\n\n\nGet EXAC2 Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::EXAC2) -> Float64\n\n\nGet EXAC2 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::EXAC2) -> Float64\n\n\nGet EXAC2 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::EXAC2) -> Float64\n\n\nGet EXAC2 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_lr-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_V_lr","text":"get_V_lr(value::EXAC2) -> Float64\n\n\nGet EXAC2 V_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::EXAC2) -> Float64\n\n\nGet EXAC2 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::EXAC2) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXAC2 Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::EXAC2) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXAC2 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::EXAC2) -> Dict{String,Any}\n\n\nGet EXAC2 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::EXAC2) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet EXAC2 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::EXAC2) -> Int64\n\n\nGet EXAC2 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::EXAC2) -> Tuple{Float64,Float64}\n\n\nGet EXAC2 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::EXAC2) -> Array{Symbol,1}\n\n\nGet EXAC2 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{EXAC2}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::EXAC2) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet EXAC2 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kb!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kb!","text":"set_Kb!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kd!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kd!","text":"set_Kd!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kh!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kh!","text":"set_Kh!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kh.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kl!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Kl!","text":"set_Kl!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Kl.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tc!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Tc!","text":"set_Tc!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Tc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_lr!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_V_lr!","text":"set_V_lr!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 V_lr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{EXAC2,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::EXAC2, val::Any) -> Any\n\n\nSet EXAC2 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#EXPIC1","page":"AVR","title":"EXPIC1","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/EXPIC1.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.EXPIC1","page":"AVR","title":"PowerSystems.EXPIC1","text":"mutable struct EXPIC1 <: AVR\n    Tr::Float64\n    Ka::Float64\n    Ta::Float64\n    Va_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ta_2::Float64\n    Ta_3::Float64\n    Ta_4::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Kf::Float64\n    Tf_1::Float64\n    Tf_2::Float64\n    Efd_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ke::Float64\n    Te::Float64\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    Kp::Float64\n    Ki::Float64\n    Kc::Float64\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nGeneric Proportional/Integral Excitation System\n\nArguments\n\nTr::Float64: Regulator input filter time constant in s, validation range: (0, 0.5), action if invalid: warn\nKa::Float64: Voltage regulator gain, validation range: (1, 500), action if invalid: warn\nTa::Float64: Voltage regulator time constant in s, validation range: (0, 10), action if invalid: warn\nVa_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Limits for pi controler (Vr_min, Vr_max)\nTa_2::Float64: Voltage regulator time constant in s, validation range: (0, nothing)\nTa_3::Float64: Voltage regulator time constant in s, validation range: (0, nothing), action if invalid: warn\nTa_4::Float64: Voltage regulator time constant in s, validation range: (0, nothing), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Voltage regulator limits (regulator output) (Vimin, Vimax)\nKf::Float64: Rate feedback gain, validation range: (0, 0.3), action if invalid: warn\nTf_1::Float64: Rate Feedback time constant in s, validation range: (\"eps()\", 15)\nTf_2::Float64: Rate Feedback time constant in s, validation range: (0, 5), action if invalid: warn\nEfd_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Field Voltage regulator limits (regulator output) (Efdmin, Efdmax)\nKe::Float64: Exciter constant, validation range: (0, 1), action if invalid: warn\nTe::Float64: Exciter time constant, validation range: (0, 2), action if invalid: warn\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nKp::Float64: Potential source gain, validation range: (0, 5), action if invalid: warn\nKi::Float64: current source gain, validation range: (0, 1.1)\nKc::Float64: Exciter regulation factor, validation range: (0, 2), action if invalid: warn\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVm: Sensed terminal voltage,\nVr1: First Lead-lag state,\nVr2: Second regulator lead-lag state,\nVr2: Third regulator lead-lag state \nVf: Exciter output \nVr3: First feedback integrator,\nVr4: second feedback integrator\n\nn_states::Int: EXPIC1 has 6 states\nstates_types::Vector{StateTypes.StateType}: EXPIC has 6 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::EXPIC1) -> Tuple{Float64,Float64}\n\n\nGet EXPIC1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Efd_lim-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Efd_lim","text":"get_Efd_lim(value::EXPIC1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXPIC1 Efd_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kc-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Kc","text":"get_Kc(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ki-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ki","text":"get_Ki(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ki.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kp-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Kp","text":"get_Kp(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Kp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::EXPIC1) -> Tuple{Float64,Float64}\n\n\nGet EXPIC1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta_2-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ta_2","text":"get_Ta_2(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ta_2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta_3-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ta_3","text":"get_Ta_3(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ta_3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta_4-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Ta_4","text":"get_Ta_4(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Ta_4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf_1-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Tf_1","text":"get_Tf_1(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Tf_1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf_2-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Tf_2","text":"get_Tf_2(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Tf_2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::EXPIC1) -> Float64\n\n\nGet EXPIC1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Va_lim-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Va_lim","text":"get_Va_lim(value::EXPIC1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXPIC1 Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::EXPIC1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet EXPIC1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::EXPIC1) -> Dict{String,Any}\n\n\nGet EXPIC1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::EXPIC1) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet EXPIC1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::EXPIC1) -> Int64\n\n\nGet EXPIC1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::EXPIC1) -> Tuple{Float64,Float64}\n\n\nGet EXPIC1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::EXPIC1) -> Array{Symbol,1}\n\n\nGet EXPIC1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{EXPIC1}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::EXPIC1) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet EXPIC1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Efd_lim!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Efd_lim!","text":"set_Efd_lim!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Efd_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kc!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Kc!","text":"set_Kc!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Kc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ki!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ki!","text":"set_Ki!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ki.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kp!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Kp!","text":"set_Kp!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Kp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta_2!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ta_2!","text":"set_Ta_2!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ta_2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta_3!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ta_3!","text":"set_Ta_3!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ta_3.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta_4!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Ta_4!","text":"set_Ta_4!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Ta_4.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf_1!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Tf_1!","text":"set_Tf_1!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Tf_1.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf_2!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Tf_2!","text":"set_Tf_2!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Tf_2.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Va_lim!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Va_lim!","text":"set_Va_lim!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Va_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{EXPIC1,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::EXPIC1, val::Any) -> Any\n\n\nSet EXPIC1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#IEEET1","page":"AVR","title":"IEEET1","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/IEEET1.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.IEEET1","page":"AVR","title":"PowerSystems.IEEET1","text":"mutable struct IEEET1 <: AVR\n    Tr::Float64\n    Ka::Float64\n    Ta::Float64\n    Vr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    Ke::Float64\n    Te::Float64\n    Kf::Float64\n    Tf::Float64\n    switch::Int\n    E_sat::Tuple{Float64, Float64}\n    Se::Tuple{Float64, Float64}\n    V_ref::Float64\n    saturation_coeffs::Tuple{Float64, Float64}\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\n1968 IEEE type 1 excitation system model\n\nArguments\n\nTr::Float64: Voltage Measurement Time Constant in s, validation range: (0, 0.5), action if invalid: warn\nKa::Float64: Amplifier Gain, validation range: (10, 500), action if invalid: warn\nTa::Float64: Amplifier Time Constant in s, validation range: (0, 1), action if invalid: warn\nVr_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Voltage regulator limits (regulator output) (Vimin, Vimax)\nKe::Float64: Exciter constant related to self-excited field, validation range: (-1, 1)\nTe::Float64: Exciter time constant, integration rate associated with exciter control, validation range: (\"eps()\", 1), action if invalid: error\nKf::Float64: Excitation control system stabilizer gain, validation range: (\"eps()\", 0.3), action if invalid: warn\nTf::Float64: Excitation control system stabilizer time constant. Appropiate Data: 5 <= Tf/Kf <= 15, validation range: (\"eps()\", nothing), action if invalid: error\nswitch::Int: Switch, validation range: (0, 1), action if invalid: error\nE_sat::Tuple{Float64, Float64}: Exciter output voltage for saturation factor: (E1, E2)\nSe::Tuple{Float64, Float64}: Exciter saturation factor at exciter output voltage: (Se(E1), Se(E2))\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\nsaturation_coeffs::Tuple{Float64, Float64}: Coefficients (A,B) of the function: Se(V) = B(V - A)^2/V\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVt: Terminal Voltage,\nVr: Regulator Output,\nVf: Exciter Output, \nVr3: Rate feedback integrator\n\nn_states::Int: The IEEET1 has 4 states\nstates_types::Vector{StateTypes.StateType}: IEEET1 I has 4 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_E_sat-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_E_sat","text":"get_E_sat(value::IEEET1) -> Tuple{Float64,Float64}\n\n\nGet IEEET1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ka-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Ka","text":"get_Ka(value::IEEET1) -> Float64\n\n\nGet IEEET1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ke-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Ke","text":"get_Ke(value::IEEET1) -> Float64\n\n\nGet IEEET1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Kf-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Kf","text":"get_Kf(value::IEEET1) -> Float64\n\n\nGet IEEET1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Se-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Se","text":"get_Se(value::IEEET1) -> Tuple{Float64,Float64}\n\n\nGet IEEET1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Ta","text":"get_Ta(value::IEEET1) -> Float64\n\n\nGet IEEET1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::IEEET1) -> Float64\n\n\nGet IEEET1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tf-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Tf","text":"get_Tf(value::IEEET1) -> Float64\n\n\nGet IEEET1 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tr-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Tr","text":"get_Tr(value::IEEET1) -> Float64\n\n\nGet IEEET1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::IEEET1) -> Float64\n\n\nGet IEEET1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Vr_lim-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_Vr_lim","text":"get_Vr_lim(value::IEEET1) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet IEEET1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::IEEET1) -> Dict{String,Any}\n\n\nGet IEEET1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::IEEET1) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet IEEET1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::IEEET1) -> Int64\n\n\nGet IEEET1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_saturation_coeffs-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_saturation_coeffs","text":"get_saturation_coeffs(value::IEEET1) -> Tuple{Float64,Float64}\n\n\nGet IEEET1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::IEEET1) -> Array{Symbol,1}\n\n\nGet IEEET1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::IEEET1) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet IEEET1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_switch-Tuple{IEEET1}","page":"AVR","title":"PowerSystems.get_switch","text":"get_switch(value::IEEET1) -> Int64\n\n\nGet IEEET1 switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_E_sat!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_E_sat!","text":"set_E_sat!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 E_sat.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ka!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Ka!","text":"set_Ka!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Ka.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ke!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Ke!","text":"set_Ke!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Ke.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Kf!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Kf!","text":"set_Kf!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Kf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Se!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Se!","text":"set_Se!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Se.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tf!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Tf!","text":"set_Tf!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Tf.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tr!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Tr!","text":"set_Tr!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Tr.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Vr_lim!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_Vr_lim!","text":"set_Vr_lim!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 Vr_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_saturation_coeffs!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_saturation_coeffs!","text":"set_saturation_coeffs!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 saturation_coeffs.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_switch!-Tuple{IEEET1,Any}","page":"AVR","title":"PowerSystems.set_switch!","text":"set_switch!(value::IEEET1, val::Any) -> Any\n\n\nSet IEEET1 switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#SCRX","page":"AVR","title":"SCRX","text":"","category":"section"},{"location":"model_library/generated_AVR/","page":"AVR","title":"AVR","text":"Modules = [PowerSystems]\nPages   = [\"/SCRX.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_AVR/#PowerSystems.SCRX","page":"AVR","title":"PowerSystems.SCRX","text":"mutable struct SCRX <: AVR\n    Ta_Tb::Float64\n    Tb::Float64\n    K::Float64\n    Te::Float64\n    Efd_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    switch::Int\n    rc_rfd::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    states_types::Vector{StateTypes.StateType}\n    internal::InfrastructureSystemsInternal\nend\n\nThis exciter is based on an IEEE type SCRX solid state exciter.  The output field voltage is varied by a control system to maintain the system voltage at Vref.  Please note that this exciter model has no initialization capabilities - this means that it will respond to whatever inputs it receives regardless of the state of the machine model.\n\nArguments\n\nTa_Tb::Float64: Lead input constant ratio, validation range: (0.05, 0.3), action if invalid: error\nTb::Float64: Lag input constant in s, validation range: (5, 20), action if invalid: error\nK::Float64: Regulator Gain, validation range: (20, 100), action if invalid: warn\nTe::Float64: Regulator Time Constant, validation range: (0, 1), action if invalid: warn\nEfd_lim::NamedTuple{(:min, :max), Tuple{Float64, Float64}}: Field Voltage regulator limits (regulator output) (Efdmin, Efdmax)\nswitch::Int: Switch, validation range: (0, 1), action if invalid: error\nrc_rfd::Float64: Field current capability. Set = 0 for negative current capability. Typical value 10, validation range: (0, 10), action if invalid: warn\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nVr1: First integrator,\nVr2: Second integrator\n\nn_states::Int: SCRX has 2 states\nstates_types::Vector{StateTypes.StateType}: SCRX has 2 differential states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_AVR/#PowerSystems.get_Efd_lim-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_Efd_lim","text":"get_Efd_lim(value::SCRX) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nGet SCRX Efd_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_K-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_K","text":"get_K(value::SCRX) -> Float64\n\n\nGet SCRX K.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Ta_Tb-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_Ta_Tb","text":"get_Ta_Tb(value::SCRX) -> Float64\n\n\nGet SCRX Ta_Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Tb-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_Tb","text":"get_Tb(value::SCRX) -> Float64\n\n\nGet SCRX Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_Te-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_Te","text":"get_Te(value::SCRX) -> Float64\n\n\nGet SCRX Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_V_ref-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::SCRX) -> Float64\n\n\nGet SCRX V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_ext-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_ext","text":"get_ext(value::SCRX) -> Dict{String,Any}\n\n\nGet SCRX ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_internal-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_internal","text":"get_internal(value::SCRX) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SCRX internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_n_states-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_n_states","text":"get_n_states(value::SCRX) -> Int64\n\n\nGet SCRX n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_rc_rfd-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_rc_rfd","text":"get_rc_rfd(value::SCRX) -> Float64\n\n\nGet SCRX rc_rfd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_states","text":"get_states(value::SCRX) -> Array{Symbol,1}\n\n\nGet SCRX states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_states_types-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_states_types","text":"get_states_types(value::SCRX) -> Array{PowerSystems.StateTypes.StateType,1}\n\n\nGet SCRX states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.get_switch-Tuple{SCRX}","page":"AVR","title":"PowerSystems.get_switch","text":"get_switch(value::SCRX) -> Int64\n\n\nGet SCRX switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Efd_lim!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_Efd_lim!","text":"set_Efd_lim!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX Efd_lim.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_K!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_K!","text":"set_K!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX K.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Ta_Tb!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_Ta_Tb!","text":"set_Ta_Tb!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX Ta_Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Tb!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_Tb!","text":"set_Tb!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX Tb.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_Te!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_Te!","text":"set_Te!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX Te.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_V_ref!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_ext!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_ext!","text":"set_ext!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_internal!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_internal!","text":"set_internal!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_n_states!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_rc_rfd!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_rc_rfd!","text":"set_rc_rfd!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX rc_rfd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_states!","text":"set_states!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_states_types!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_states_types!","text":"set_states_types!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX states_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_AVR/#PowerSystems.set_switch!-Tuple{SCRX,Any}","page":"AVR","title":"PowerSystems.set_switch!","text":"set_switch!(value::SCRX, val::Any) -> Any\n\n\nSet SCRX switch.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#ThermalMultiStart","page":"ThermalMultiStart","title":"ThermalMultiStart","text":"","category":"section"},{"location":"model_library/generated_ThermalMultiStart/","page":"ThermalMultiStart","title":"ThermalMultiStart","text":"Modules = [PowerSystems]\nPages   = [\"generated/ThermalMultiStart.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.ThermalMultiStart","page":"ThermalMultiStart","title":"PowerSystems.ThermalMultiStart","text":"mutable struct ThermalMultiStart <: ThermalGen\n    name::String\n    available::Bool\n    status::Bool\n    bus::Bus\n    active_power::Float64\n    reactive_power::Float64\n    rating::Float64\n    prime_mover::PrimeMovers.PrimeMover\n    fuel::ThermalFuels.ThermalFuel\n    active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\n    reactive_power_limits::Union{Nothing, Min_Max}\n    ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    power_trajectory::Union{Nothing, NamedTuple{(:startup, :shutdown), Tuple{Float64, Float64}}}\n    time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}\n    start_time_limits::Union{Nothing, NamedTuple{(:hot, :warm, :cold), Tuple{Float64, Float64, Float64}}}\n    start_types::Int\n    operation_cost::MultiStartCost\n    base_power::Float64\n    services::Vector{Service}\n    time_at_status::Float64\n    must_run::Bool\n    dynamic_injector::Union{Nothing, DynamicInjection}\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for thermal generation technologies.\n\nArguments\n\nname::String\navailable::Bool\nstatus::Bool\nbus::Bus\nactive_power::Float64, validation range: active_power_limits, action if invalid: warn\nreactive_power::Float64, validation range: reactive_power_limits, action if invalid: warn\nrating::Float64: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error\nprime_mover::PrimeMovers.PrimeMover: Prime mover technology according to EIA 923\nfuel::ThermalFuels.ThermalFuel: Prime mover fuel according to EIA 923\nactive_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}\nreactive_power_limits::Union{Nothing, Min_Max}\nramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}, validation range: (0, nothing), action if invalid: error\npower_trajectory::Union{Nothing, NamedTuple{(:startup, :shutdown), Tuple{Float64, Float64}}}: Power trajectory the unit will take during the startup and shutdown ramp process, validation range: (0, nothing), action if invalid: error\ntime_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error\nstart_time_limits::Union{Nothing, NamedTuple{(:hot, :warm, :cold), Tuple{Float64, Float64, Float64}}}:  Time limits for startup based on turbine temperature in hours\nstart_types::Int:  Number of startup based on turbine temperature, validation range: (1, 3), action if invalid: error\noperation_cost::MultiStartCost\nbase_power::Float64: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn\nservices::Vector{Service}: Services that this device contributes to\ntime_at_status::Float64\nmust_run::Bool\ndynamic_injector::Union{Nothing, DynamicInjection}: corresponding dynamic injection device\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_active_power-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_active_power","text":"get_active_power(value::ThermalMultiStart) -> Any\n\n\nGet ThermalMultiStart active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_active_power_limits-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_active_power_limits","text":"get_active_power_limits(value::ThermalMultiStart) -> NamedTuple{(:min, :max),_A} where _A<:Tuple\n\n\nGet ThermalMultiStart active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_available-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_available","text":"get_available(value::ThermalMultiStart) -> Bool\n\n\nGet ThermalMultiStart available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_base_power-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_base_power","text":"get_base_power(value::ThermalMultiStart) -> Float64\n\n\nGet ThermalMultiStart base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_bus-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_bus","text":"get_bus(value::ThermalMultiStart) -> Bus\n\n\nGet ThermalMultiStart bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_dynamic_injector-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_dynamic_injector","text":"get_dynamic_injector(value::ThermalMultiStart) -> Union{Nothing, DynamicInjection}\n\n\nGet ThermalMultiStart dynamic_injector.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_ext-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_ext","text":"get_ext(value::ThermalMultiStart) -> Dict{String,Any}\n\n\nGet ThermalMultiStart ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_fuel-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_fuel","text":"get_fuel(value::ThermalMultiStart) -> PowerSystems.ThermalFuels.ThermalFuel\n\n\nGet ThermalMultiStart fuel.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_internal-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_internal","text":"get_internal(value::ThermalMultiStart) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ThermalMultiStart internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_must_run-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_must_run","text":"get_must_run(value::ThermalMultiStart) -> Bool\n\n\nGet ThermalMultiStart must_run.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_operation_cost-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::ThermalMultiStart) -> MultiStartCost\n\n\nGet ThermalMultiStart operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_power_trajectory-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_power_trajectory","text":"get_power_trajectory(value::ThermalMultiStart) -> Union{Nothing, NamedTuple{(:startup, :shutdown),Tuple{Float64,Float64}}}\n\n\nGet ThermalMultiStart power_trajectory.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_prime_mover-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_prime_mover","text":"get_prime_mover(value::ThermalMultiStart) -> PowerSystems.PrimeMovers.PrimeMover\n\n\nGet ThermalMultiStart prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_ramp_limits-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_ramp_limits","text":"get_ramp_limits(value::ThermalMultiStart) -> Union{Nothing, NamedTuple{(:up, :down),_A} where _A<:Tuple}\n\n\nGet ThermalMultiStart ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_rating-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_rating","text":"get_rating(value::ThermalMultiStart) -> Any\n\n\nGet ThermalMultiStart rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_reactive_power-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_reactive_power","text":"get_reactive_power(value::ThermalMultiStart) -> Any\n\n\nGet ThermalMultiStart reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_reactive_power_limits-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_reactive_power_limits","text":"get_reactive_power_limits(value::ThermalMultiStart) -> Union{Nothing, NamedTuple{(:min, :max),_A} where _A<:Tuple}\n\n\nGet ThermalMultiStart reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_services-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_services","text":"get_services(value::ThermalMultiStart) -> Array{Service,1}\n\n\nGet ThermalMultiStart services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_start_time_limits-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_start_time_limits","text":"get_start_time_limits(value::ThermalMultiStart) -> Union{Nothing, NamedTuple{(:hot, :warm, :cold),Tuple{Float64,Float64,Float64}}}\n\n\nGet ThermalMultiStart start_time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_start_types-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_start_types","text":"get_start_types(value::ThermalMultiStart) -> Int64\n\n\nGet ThermalMultiStart start_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_status-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_status","text":"get_status(value::ThermalMultiStart) -> Bool\n\n\nGet ThermalMultiStart status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_time_at_status-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_time_at_status","text":"get_time_at_status(value::ThermalMultiStart) -> Float64\n\n\nGet ThermalMultiStart time_at_status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.get_time_limits-Tuple{ThermalMultiStart}","page":"ThermalMultiStart","title":"PowerSystems.get_time_limits","text":"get_time_limits(value::ThermalMultiStart) -> Union{Nothing, NamedTuple{(:up, :down),Tuple{Float64,Float64}}}\n\n\nGet ThermalMultiStart time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_active_power!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_active_power!","text":"set_active_power!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart active_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_active_power_limits!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_active_power_limits!","text":"set_active_power_limits!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart active_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_available!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_available!","text":"set_available!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_base_power!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_base_power!","text":"set_base_power!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart base_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_bus!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_bus!","text":"set_bus!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart bus.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_ext!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_ext!","text":"set_ext!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_fuel!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_fuel!","text":"set_fuel!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart fuel.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_internal!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_internal!","text":"set_internal!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_must_run!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_must_run!","text":"set_must_run!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart must_run.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_operation_cost!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_power_trajectory!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_power_trajectory!","text":"set_power_trajectory!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart power_trajectory.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_prime_mover!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_prime_mover!","text":"set_prime_mover!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart prime_mover.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_ramp_limits!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_ramp_limits!","text":"set_ramp_limits!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart ramp_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_rating!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_rating!","text":"set_rating!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart rating.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_reactive_power!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_reactive_power!","text":"set_reactive_power!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart reactive_power.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_reactive_power_limits!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_reactive_power_limits!","text":"set_reactive_power_limits!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart reactive_power_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_services!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_services!","text":"set_services!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_start_time_limits!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_start_time_limits!","text":"set_start_time_limits!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart start_time_limits.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_start_types!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_start_types!","text":"set_start_types!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart start_types.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_status!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_status!","text":"set_status!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_time_at_status!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_time_at_status!","text":"set_time_at_status!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart time_at_status.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_ThermalMultiStart/#PowerSystems.set_time_limits!-Tuple{ThermalMultiStart,Any}","page":"ThermalMultiStart","title":"PowerSystems.set_time_limits!","text":"set_time_limits!(value::ThermalMultiStart, val::Any) -> Any\n\n\nSet ThermalMultiStart time_limits.\n\n\n\n\n\n","category":"method"},{"location":"user_guide/generated_type_structure/","page":"Type Structure","title":"Type Structure","text":"EditURL = \"https://github.com/NREL-SIIP/PowerSystems.jl/blob/master/docs/src/user_guide/type_structure.jl\"","category":"page"},{"location":"user_guide/generated_type_structure/#Type-Structure","page":"Type Structure","title":"Type Structure","text":"","category":"section"},{"location":"user_guide/generated_type_structure/","page":"Type Structure","title":"Type Structure","text":"The storage of power system data has traditionally been done with general use tables based on the power flow problem. However, tables are not inherently designed to store data with mixed data representations or hierarchal structures. This limitation was addressed in the early 1990's with the advent of automation, spurred by increasingly complex data needs for power systems operations. The industry required standardized models to exchange larger and more complex sets of information, and so resorted to an object-oriented data model. The CIM was developed and later made a standard maintained by the IEC - Technical Committee 57 Working Group 13. The aim was to provide a standard definition for power system components that could be used in automated EMS and asset-management databases.","category":"page"},{"location":"user_guide/generated_type_structure/","page":"Type Structure","title":"Type Structure","text":"From the computer engineering point-of-view, using tables would require to re-write a lot of code. In most languages with strongly type hierarchies, using a tree structure it is advantageous. This is particularly relevant for code re-use and data encapsulation. Collecting all potential devices is not possible; neither is it desirable. However, it is necessary to have the capability to extend the data model such that different user can store their data in an organized ontology.","category":"page"},{"location":"user_guide/generated_type_structure/","page":"Type Structure","title":"Type Structure","text":"Each device in PowerSystems.jl is defined using a Julia structure embedded in a type hierarchy. This implementation enables the categorization of the devices by their operational characteristics and the data required to model them. The type-based and method-forward paradigm in PowerSystems.jl incentivizes code re-use in modeling, enhances the reproducibility of code, and enables modularization for specific data types.","category":"page"},{"location":"model_library/generated_MultiStartCost/#MultiStartCost","page":"MultiStartCost","title":"MultiStartCost","text":"","category":"section"},{"location":"model_library/generated_MultiStartCost/","page":"MultiStartCost","title":"MultiStartCost","text":"Modules = [PowerSystems]\nPages   = [\"generated/MultiStartCost.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.MultiStartCost","page":"MultiStartCost","title":"PowerSystems.MultiStartCost","text":"mutable struct MultiStartCost <: OperationalCost\n    variable::VariableCost\n    no_load::Float64\n    fixed::Float64\n    startup::NamedTuple{(:hot, :warm, :cold), NTuple{3, Float64}}\n    shutdn::Float64\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure Operational Cost Data which includes fixed, variable cost, multiple start up cost and stop costs.\n\nArguments\n\nvariable::VariableCost: variable cost\nno_load::Float64: no load cost\nfixed::Float64: fixed cost\nstartup::NamedTuple{(:hot, :warm, :cold), NTuple{3, Float64}}: startup cost\nshutdn::Float64: shutdown cost, validation range: (0, nothing), action if invalid: warn\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_fixed-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_fixed","text":"get_fixed(value::MultiStartCost) -> Float64\n\n\nGet MultiStartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_internal-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_internal","text":"get_internal(value::MultiStartCost) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet MultiStartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_no_load-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_no_load","text":"get_no_load(value::MultiStartCost) -> Float64\n\n\nGet MultiStartCost no_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_shutdn-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_shutdn","text":"get_shutdn(value::MultiStartCost) -> Float64\n\n\nGet MultiStartCost shutdn.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_startup-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_startup","text":"get_startup(value::MultiStartCost) -> NamedTuple{(:hot, :warm, :cold),Tuple{Float64,Float64,Float64}}\n\n\nGet MultiStartCost startup.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.get_variable-Tuple{MultiStartCost}","page":"MultiStartCost","title":"PowerSystems.get_variable","text":"get_variable(value::MultiStartCost) -> VariableCost\n\n\nGet MultiStartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_fixed!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_fixed!","text":"set_fixed!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_internal!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_internal!","text":"set_internal!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_no_load!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_no_load!","text":"set_no_load!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost no_load.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_shutdn!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_shutdn!","text":"set_shutdn!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost shutdn.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_startup!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_startup!","text":"set_startup!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost startup.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_MultiStartCost/#PowerSystems.set_variable!-Tuple{MultiStartCost,Any}","page":"MultiStartCost","title":"PowerSystems.set_variable!","text":"set_variable!(value::MultiStartCost, val::Any) -> Any\n\n\nSet MultiStartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#Reserves","page":"Reserves","title":"Reserves","text":"","category":"section"},{"location":"model_library/reserves/#Static-Reserve","page":"Reserves","title":"Static Reserve","text":"","category":"section"},{"location":"model_library/reserves/","page":"Reserves","title":"Reserves","text":"Modules = [PowerSystems]\nPages   = [\"generated/StaticReserve.jl\"]\nPublic = true","category":"page"},{"location":"model_library/reserves/#PowerSystems.StaticReserve","page":"Reserves","title":"PowerSystems.StaticReserve","text":"mutable struct StaticReserve{T <: ReserveDirection} <: Reserve{T}\n    name::String\n    available::Bool\n    time_frame::Float64\n    requirement::Float64\n    ext::Dict{String, Any}\n    operation_cost::Union{Nothing, TwoPartCost}\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for a proportional reserve product for system simulations.\n\nArguments\n\nname::String\navailable::Bool\ntime_frame::Float64: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error\nrequirement::Float64: the static value of required reserves in system p.u., validation range: (0, nothing), action if invalid: error\next::Dict{String, Any}\noperation_cost::Union{Nothing, TwoPartCost}: Cost for providing reserves  TwoPartCost\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/reserves/#PowerSystems.get_available-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_available","text":"get_available(value::StaticReserve) -> Bool\n\n\nGet StaticReserve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_ext-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_ext","text":"get_ext(value::StaticReserve) -> Dict{String,Any}\n\n\nGet StaticReserve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_internal-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_internal","text":"get_internal(value::StaticReserve) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet StaticReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_operation_cost-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::StaticReserve) -> Union{Nothing, TwoPartCost}\n\n\nGet StaticReserve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_requirement-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_requirement","text":"get_requirement(value::StaticReserve) -> Float64\n\n\nGet StaticReserve requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_time_frame-Tuple{StaticReserve}","page":"Reserves","title":"PowerSystems.get_time_frame","text":"get_time_frame(value::StaticReserve) -> Float64\n\n\nGet StaticReserve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_available!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_available!","text":"set_available!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_ext!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_ext!","text":"set_ext!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_internal!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_internal!","text":"set_internal!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_operation_cost!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_requirement!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_time_frame!-Tuple{StaticReserve,Any}","page":"Reserves","title":"PowerSystems.set_time_frame!","text":"set_time_frame!(value::StaticReserve, val::Any) -> Any\n\n\nSet StaticReserve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#Static-Reserve-Group","page":"Reserves","title":"Static Reserve Group","text":"","category":"section"},{"location":"model_library/reserves/","page":"Reserves","title":"Reserves","text":"Modules = [PowerSystems]\nPages   = [\"generated/StaticReserveGroup.jl\"]\nPublic = true","category":"page"},{"location":"model_library/reserves/#PowerSystems.StaticReserveGroup","page":"Reserves","title":"PowerSystems.StaticReserveGroup","text":"mutable struct StaticReserveGroup{T <: ReserveDirection} <: Service\n    name::String\n    available::Bool\n    requirement::Float64\n    ext::Dict{String, Any}\n    contributing_services::Vector{Service}\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for a group reserve product for system simulations.\n\nArguments\n\nname::String\navailable::Bool\nrequirement::Float64: the static value of required reserves in system p.u., validation range: (0, nothing), action if invalid: error\next::Dict{String, Any}\ncontributing_services::Vector{Service}: Services that contribute for this requirement constraint\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/reserves/#PowerSystems.get_available-Tuple{StaticReserveGroup}","page":"Reserves","title":"PowerSystems.get_available","text":"get_available(value::StaticReserveGroup) -> Bool\n\n\nGet StaticReserveGroup available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_contributing_services-Tuple{StaticReserveGroup}","page":"Reserves","title":"PowerSystems.get_contributing_services","text":"get_contributing_services(value::StaticReserveGroup) -> Array{Service,1}\n\n\nGet StaticReserveGroup contributing_services.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_ext-Tuple{StaticReserveGroup}","page":"Reserves","title":"PowerSystems.get_ext","text":"get_ext(value::StaticReserveGroup) -> Dict{String,Any}\n\n\nGet StaticReserveGroup ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_internal-Tuple{StaticReserveGroup}","page":"Reserves","title":"PowerSystems.get_internal","text":"get_internal(value::StaticReserveGroup) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet StaticReserveGroup internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_requirement-Tuple{StaticReserveGroup}","page":"Reserves","title":"PowerSystems.get_requirement","text":"get_requirement(value::StaticReserveGroup) -> Float64\n\n\nGet StaticReserveGroup requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_available!-Tuple{StaticReserveGroup,Any}","page":"Reserves","title":"PowerSystems.set_available!","text":"set_available!(value::StaticReserveGroup, val::Any) -> Any\n\n\nSet StaticReserveGroup available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_ext!-Tuple{StaticReserveGroup,Any}","page":"Reserves","title":"PowerSystems.set_ext!","text":"set_ext!(value::StaticReserveGroup, val::Any) -> Any\n\n\nSet StaticReserveGroup ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_internal!-Tuple{StaticReserveGroup,Any}","page":"Reserves","title":"PowerSystems.set_internal!","text":"set_internal!(value::StaticReserveGroup, val::Any) -> Any\n\n\nSet StaticReserveGroup internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_requirement!-Tuple{StaticReserveGroup,Any}","page":"Reserves","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::StaticReserveGroup, val::Any) -> Any\n\n\nSet StaticReserveGroup requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#Variable-Reserve","page":"Reserves","title":"Variable Reserve","text":"","category":"section"},{"location":"model_library/reserves/","page":"Reserves","title":"Reserves","text":"Modules = [PowerSystems]\nPages   = [\"generated/VariableReserve.jl\"]\nPublic = true","category":"page"},{"location":"model_library/reserves/#PowerSystems.VariableReserve","page":"Reserves","title":"PowerSystems.VariableReserve","text":"mutable struct VariableReserve{T <: ReserveDirection} <: Reserve{T}\n    name::String\n    available::Bool\n    time_frame::Float64\n    requirement::Float64\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    operation_cost::Union{Nothing, TwoPartCost}\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for the procurement products for system simulations.\n\nArguments\n\nname::String\navailable::Bool\ntime_frame::Float64: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error\nrequirement::Float64: the required quantity of the product should be scaled by a Forecast\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\noperation_cost::Union{Nothing, TwoPartCost}: Cost for providing reserves  TwoPartCost\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/reserves/#PowerSystems.get_available-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_available","text":"get_available(value::VariableReserve) -> Bool\n\n\nGet VariableReserve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_ext-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_ext","text":"get_ext(value::VariableReserve) -> Dict{String,Any}\n\n\nGet VariableReserve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_internal-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_internal","text":"get_internal(value::VariableReserve) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet VariableReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_operation_cost-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::VariableReserve) -> Union{Nothing, TwoPartCost}\n\n\nGet VariableReserve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_requirement-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_requirement","text":"get_requirement(value::VariableReserve) -> Float64\n\n\nGet VariableReserve requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_time_frame-Tuple{VariableReserve}","page":"Reserves","title":"PowerSystems.get_time_frame","text":"get_time_frame(value::VariableReserve) -> Float64\n\n\nGet VariableReserve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_available!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_available!","text":"set_available!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_ext!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_ext!","text":"set_ext!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_internal!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_internal!","text":"set_internal!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_operation_cost!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_requirement!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_requirement!","text":"set_requirement!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve requirement.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_time_frame!-Tuple{VariableReserve,Any}","page":"Reserves","title":"PowerSystems.set_time_frame!","text":"set_time_frame!(value::VariableReserve, val::Any) -> Any\n\n\nSet VariableReserve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#Reserve-Demand-Curve","page":"Reserves","title":"Reserve Demand Curve","text":"","category":"section"},{"location":"model_library/reserves/","page":"Reserves","title":"Reserves","text":"Modules = [PowerSystems]\nPages   = [\"generated/ReserveDemandCurve.jl\"]\nPublic = true","category":"page"},{"location":"model_library/reserves/#PowerSystems.ReserveDemandCurve","page":"Reserves","title":"PowerSystems.ReserveDemandCurve","text":"mutable struct ReserveDemandCurve{T <: ReserveDirection} <: Reserve{T}\n    name::String\n    available::Bool\n    time_frame::Float64\n    operation_cost::TwoPartCost\n    ext::Dict{String, Any}\n    forecasts::InfrastructureSystems.Forecasts\n    internal::InfrastructureSystemsInternal\nend\n\nData Structure for a operating reserve with demand curve product for system simulations.\n\nArguments\n\nname::String\navailable::Bool\ntime_frame::Float64: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error\noperation_cost::TwoPartCost: Cost for providing reserves  TwoPartCost\next::Dict{String, Any}\nforecasts::InfrastructureSystems.Forecasts: internal forecast storage\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/reserves/#PowerSystems.get_available-Tuple{ReserveDemandCurve}","page":"Reserves","title":"PowerSystems.get_available","text":"get_available(value::ReserveDemandCurve) -> Bool\n\n\nGet ReserveDemandCurve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_ext-Tuple{ReserveDemandCurve}","page":"Reserves","title":"PowerSystems.get_ext","text":"get_ext(value::ReserveDemandCurve) -> Dict{String,Any}\n\n\nGet ReserveDemandCurve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_internal-Tuple{ReserveDemandCurve}","page":"Reserves","title":"PowerSystems.get_internal","text":"get_internal(value::ReserveDemandCurve) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet ReserveDemandCurve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_operation_cost-Tuple{ReserveDemandCurve}","page":"Reserves","title":"PowerSystems.get_operation_cost","text":"get_operation_cost(value::ReserveDemandCurve) -> TwoPartCost\n\n\nGet ReserveDemandCurve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.get_time_frame-Tuple{ReserveDemandCurve}","page":"Reserves","title":"PowerSystems.get_time_frame","text":"get_time_frame(value::ReserveDemandCurve) -> Float64\n\n\nGet ReserveDemandCurve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_available!-Tuple{ReserveDemandCurve,Any}","page":"Reserves","title":"PowerSystems.set_available!","text":"set_available!(value::ReserveDemandCurve, val::Any) -> Any\n\n\nSet ReserveDemandCurve available.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_ext!-Tuple{ReserveDemandCurve,Any}","page":"Reserves","title":"PowerSystems.set_ext!","text":"set_ext!(value::ReserveDemandCurve, val::Any) -> Any\n\n\nSet ReserveDemandCurve ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_internal!-Tuple{ReserveDemandCurve,Any}","page":"Reserves","title":"PowerSystems.set_internal!","text":"set_internal!(value::ReserveDemandCurve, val::Any) -> Any\n\n\nSet ReserveDemandCurve internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_operation_cost!-Tuple{ReserveDemandCurve,Any}","page":"Reserves","title":"PowerSystems.set_operation_cost!","text":"set_operation_cost!(value::ReserveDemandCurve, val::Any) -> Any\n\n\nSet ReserveDemandCurve operation_cost.\n\n\n\n\n\n","category":"method"},{"location":"model_library/reserves/#PowerSystems.set_time_frame!-Tuple{ReserveDemandCurve,Any}","page":"Reserves","title":"PowerSystems.set_time_frame!","text":"set_time_frame!(value::ReserveDemandCurve, val::Any) -> Any\n\n\nSet ReserveDemandCurve time_frame.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#DCSource","page":"DCSource","title":"DCSource","text":"","category":"section"},{"location":"model_library/generated_DCSource/#FixedDCSource","page":"DCSource","title":"FixedDCSource","text":"","category":"section"},{"location":"model_library/generated_DCSource/","page":"DCSource","title":"DCSource","text":"Modules = [PowerSystems]\nPages   = [\"/FixedDCSource.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_DCSource/#PowerSystems.FixedDCSource","page":"DCSource","title":"PowerSystems.FixedDCSource","text":"mutable struct FixedDCSource <: DCSource\n    voltage::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of a Fixed DC Source that returns a fixed DC voltage\n\nArguments\n\nvoltage::Float64: rated VA, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}\nn_states::Int: FixedDCSource has no states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_DCSource/#PowerSystems.get_ext-Tuple{FixedDCSource}","page":"DCSource","title":"PowerSystems.get_ext","text":"get_ext(value::FixedDCSource) -> Dict{String,Any}\n\n\nGet FixedDCSource ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.get_internal-Tuple{FixedDCSource}","page":"DCSource","title":"PowerSystems.get_internal","text":"get_internal(value::FixedDCSource) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet FixedDCSource internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.get_n_states-Tuple{FixedDCSource}","page":"DCSource","title":"PowerSystems.get_n_states","text":"get_n_states(value::FixedDCSource) -> Int64\n\n\nGet FixedDCSource n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.get_states-Tuple{FixedDCSource}","page":"DCSource","title":"PowerSystems.get_states","text":"get_states(value::FixedDCSource) -> Array{Symbol,1}\n\n\nGet FixedDCSource states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.get_voltage-Tuple{FixedDCSource}","page":"DCSource","title":"PowerSystems.get_voltage","text":"get_voltage(value::FixedDCSource) -> Float64\n\n\nGet FixedDCSource voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.set_ext!-Tuple{FixedDCSource,Any}","page":"DCSource","title":"PowerSystems.set_ext!","text":"set_ext!(value::FixedDCSource, val::Any) -> Any\n\n\nSet FixedDCSource ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.set_internal!-Tuple{FixedDCSource,Any}","page":"DCSource","title":"PowerSystems.set_internal!","text":"set_internal!(value::FixedDCSource, val::Any) -> Any\n\n\nSet FixedDCSource internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.set_n_states!-Tuple{FixedDCSource,Any}","page":"DCSource","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::FixedDCSource, val::Any) -> Any\n\n\nSet FixedDCSource n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.set_states!-Tuple{FixedDCSource,Any}","page":"DCSource","title":"PowerSystems.set_states!","text":"set_states!(value::FixedDCSource, val::Any) -> Any\n\n\nSet FixedDCSource states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_DCSource/#PowerSystems.set_voltage!-Tuple{FixedDCSource,Any}","page":"DCSource","title":"PowerSystems.set_voltage!","text":"set_voltage!(value::FixedDCSource, val::Any) -> Any\n\n\nSet FixedDCSource voltage.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#Shaft","page":"Shaft","title":"Shaft","text":"","category":"section"},{"location":"model_library/generated_Shaft/#FiveMassShaft","page":"Shaft","title":"FiveMassShaft","text":"","category":"section"},{"location":"model_library/generated_Shaft/","page":"Shaft","title":"Shaft","text":"Modules = [PowerSystems]\nPages   = [\"/FiveMassShaft.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Shaft/#PowerSystems.FiveMassShaft","page":"Shaft","title":"PowerSystems.FiveMassShaft","text":"mutable struct FiveMassShaft <: Shaft\n    H::Float64\n    H_hp::Float64\n    H_ip::Float64\n    H_lp::Float64\n    H_ex::Float64\n    D::Float64\n    D_hp::Float64\n    D_ip::Float64\n    D_lp::Float64\n    D_ex::Float64\n    D_12::Float64\n    D_23::Float64\n    D_34::Float64\n    D_45::Float64\n    K_hp::Float64\n    K_ip::Float64\n    K_lp::Float64\n    K_ex::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of 5 mass-spring shaft model.  It contains a High-Pressure (HP) steam turbine, Intermediate-Pressure (IP)  steam turbine, Low-Pressure (LP) steam turbine, the Rotor and an Exciter (EX) mover.\n\nArguments\n\nH::Float64: Rotor inertia constant in MWs/MVA, validation range: (0, nothing)\nH_hp::Float64: High pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)\nH_ip::Float64: Intermediate pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)\nH_lp::Float64: Low pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)\nH_ex::Float64:  Exciter inertia constant in MWs/MVA, validation range: (0, nothing)\nD::Float64: Rotor natural damping in pu, validation range: (0, nothing)\nD_hp::Float64: High pressure turbine natural damping in pu, validation range: (0, nothing)\nD_ip::Float64: Intermediate pressure turbine natural damping in pu, validation range: (0, nothing)\nD_lp::Float64: Low pressure turbine natural damping in pu, validation range: (0, nothing)\nD_ex::Float64: Exciter natural damping in pu, validation range: (0, nothing)\nD_12::Float64: High-Intermediate pressure turbine damping, validation range: (0, nothing)\nD_23::Float64: Intermediate-Low pressure turbine damping, validation range: (0, nothing)\nD_34::Float64: Low pressure turbine-Rotor damping, validation range: (0, nothing)\nD_45::Float64: Rotor-Exciter damping, validation range: (0, nothing)\nK_hp::Float64: High pressure turbine angle coefficient, validation range: (0, nothing)\nK_ip::Float64: Intermediate pressure turbine angle coefficient, validation range: (0, nothing)\nK_lp::Float64: Low pressure turbine angle coefficient, validation range: (0, nothing)\nK_ex::Float64: Exciter angle coefficient, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nÎ´: rotor angle,\nÏ‰: rotor speed,\nÎ´_hp: rotor angle of high pressure turbine,\nÏ‰_hp: rotor speed of high pressure turbine,\nÎ´_ip: rotor angle of intermediate pressure turbine,\nÏ‰_ip: rotor speed of intermediate pressure turbine,\nÎ´_lp: rotor angle of low pressure turbine,\nÏ‰_lp: rotor speed of low pressure turbine,\nÎ´_ex: rotor angle of exciter,\nÏ‰_lp: rotor speed of exciter\n\nn_states::Int: FiveMassShaft has 10 states\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D","text":"get_D(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_12-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_12","text":"get_D_12(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_12.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_23-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_23","text":"get_D_23(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_23.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_34-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_34","text":"get_D_34(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_34.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_45-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_45","text":"get_D_45(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_45.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_ex-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_ex","text":"get_D_ex(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_hp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_hp","text":"get_D_hp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_ip-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_ip","text":"get_D_ip(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D_lp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_D_lp","text":"get_D_lp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft D_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_H","text":"get_H(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft H.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H_ex-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_H_ex","text":"get_H_ex(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft H_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H_hp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_H_hp","text":"get_H_hp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft H_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H_ip-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_H_ip","text":"get_H_ip(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft H_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H_lp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_H_lp","text":"get_H_lp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft H_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_K_ex-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_K_ex","text":"get_K_ex(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft K_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_K_hp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_K_hp","text":"get_K_hp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft K_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_K_ip-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_K_ip","text":"get_K_ip(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft K_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_K_lp-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_K_lp","text":"get_K_lp(value::FiveMassShaft) -> Float64\n\n\nGet FiveMassShaft K_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_ext-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_ext","text":"get_ext(value::FiveMassShaft) -> Dict{String,Any}\n\n\nGet FiveMassShaft ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_internal-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_internal","text":"get_internal(value::FiveMassShaft) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet FiveMassShaft internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_n_states-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_n_states","text":"get_n_states(value::FiveMassShaft) -> Int64\n\n\nGet FiveMassShaft n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_states-Tuple{FiveMassShaft}","page":"Shaft","title":"PowerSystems.get_states","text":"get_states(value::FiveMassShaft) -> Array{Symbol,1}\n\n\nGet FiveMassShaft states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D!","text":"set_D!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_12!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_12!","text":"set_D_12!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_12.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_23!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_23!","text":"set_D_23!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_23.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_34!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_34!","text":"set_D_34!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_34.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_45!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_45!","text":"set_D_45!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_45.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_ex!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_ex!","text":"set_D_ex!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_hp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_hp!","text":"set_D_hp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_ip!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_ip!","text":"set_D_ip!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D_lp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_D_lp!","text":"set_D_lp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft D_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_H!","text":"set_H!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft H.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H_ex!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_H_ex!","text":"set_H_ex!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft H_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H_hp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_H_hp!","text":"set_H_hp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft H_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H_ip!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_H_ip!","text":"set_H_ip!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft H_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H_lp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_H_lp!","text":"set_H_lp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft H_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_K_ex!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_K_ex!","text":"set_K_ex!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft K_ex.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_K_hp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_K_hp!","text":"set_K_hp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft K_hp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_K_ip!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_K_ip!","text":"set_K_ip!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft K_ip.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_K_lp!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_K_lp!","text":"set_K_lp!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft K_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_ext!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_ext!","text":"set_ext!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_internal!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_internal!","text":"set_internal!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_n_states!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_states!-Tuple{FiveMassShaft,Any}","page":"Shaft","title":"PowerSystems.set_states!","text":"set_states!(value::FiveMassShaft, val::Any) -> Any\n\n\nSet FiveMassShaft states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#SingleMass","page":"Shaft","title":"SingleMass","text":"","category":"section"},{"location":"model_library/generated_Shaft/","page":"Shaft","title":"Shaft","text":"Modules = [PowerSystems]\nPages   = [\"/SingleMass.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_Shaft/#PowerSystems.SingleMass","page":"Shaft","title":"PowerSystems.SingleMass","text":"mutable struct SingleMass <: Shaft\n    H::Float64\n    D::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\n    internal::InfrastructureSystemsInternal\nend\n\nParameters of single mass shaft model. Typically represents the rotor mass.\n\nArguments\n\nH::Float64: Rotor inertia constant in MWs/MVA, validation range: (0, nothing)\nD::Float64: Rotor natural damping in pu, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states are:\n\nÎ´: rotor angle,\nÏ‰: rotor speed\n\nn_states::Int: SingleMass has 1 state\ninternal::InfrastructureSystemsInternal: power system internal reference, do not modify\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_Shaft/#PowerSystems.get_D-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_D","text":"get_D(value::SingleMass) -> Float64\n\n\nGet SingleMass D.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_H-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_H","text":"get_H(value::SingleMass) -> Float64\n\n\nGet SingleMass H.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_ext-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_ext","text":"get_ext(value::SingleMass) -> Dict{String,Any}\n\n\nGet SingleMass ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_internal-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_internal","text":"get_internal(value::SingleMass) -> InfrastructureSystems.InfrastructureSystemsInternal\n\n\nGet SingleMass internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_n_states-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_n_states","text":"get_n_states(value::SingleMass) -> Int64\n\n\nGet SingleMass n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.get_states-Tuple{SingleMass}","page":"Shaft","title":"PowerSystems.get_states","text":"get_states(value::SingleMass) -> Array{Symbol,1}\n\n\nGet SingleMass states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_D!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_D!","text":"set_D!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass D.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_H!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_H!","text":"set_H!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass H.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_ext!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_ext!","text":"set_ext!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_internal!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_internal!","text":"set_internal!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass internal.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_n_states!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_Shaft/#PowerSystems.set_states!-Tuple{SingleMass,Any}","page":"Shaft","title":"PowerSystems.set_states!","text":"set_states!(value::SingleMass, val::Any) -> Any\n\n\nSet SingleMass states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#OuterControl","page":"OuterControl","title":"OuterControl","text":"","category":"section"},{"location":"model_library/outer_control/","page":"OuterControl","title":"OuterControl","text":"The outer control is composed by the ReactivePowerControl and the ActivePowerControl types.","category":"page"},{"location":"model_library/outer_control/","page":"OuterControl","title":"OuterControl","text":"Modules = [PowerSystems]\nPages   = [\"/OuterControl.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/outer_control/#PowerSystems.OuterControl","page":"OuterControl","title":"PowerSystems.OuterControl","text":"mutable struct OuterControl{\n    A <: ActivePowerControl,\n    R <: ReactivePowerControl\n} <: DynamicInverterComponent\n    active_power::A\n    reactive_power::R\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int64\nend\n\nParameters of a Outer-Loop controller using a active power controller and a reactive power droop controller.\n\nArguments\n\nA <: ActivePowerControl: Active power controller (typically droop or virtual inertia).\nR <: ReactivePowerControl: Reactive power controller (typically droop).\next::Dict{String, Any}\nstates::Vector{Symbol}: Vector of states (will depend on the components).\nn_states::Int64: Number of states (will depend on the components).\n\n\n\n\n\n","category":"type"},{"location":"model_library/outer_control/#Virtual-Inertia","page":"OuterControl","title":"Virtual Inertia","text":"","category":"section"},{"location":"model_library/outer_control/","page":"OuterControl","title":"OuterControl","text":"Modules = [PowerSystems]\nPages   = [\"generated/VirtualInertia.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/outer_control/#PowerSystems.VirtualInertia","page":"OuterControl","title":"PowerSystems.VirtualInertia","text":"mutable struct VirtualInertia <: ActivePowerControl\n    Ta::Float64\n    kd::Float64\n    kÏ‰::Float64\n    P_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of a Virtual Inertia with SRF using VSM for active power controller\n\nArguments\n\nTa::Float64: VSM inertia constant, validation range: (0, nothing)\nkd::Float64: VSM damping constant, validation range: (0, nothing)\nkÏ‰::Float64: frequency droop gain, validation range: (0, nothing)\nP_ref::Float64: Reference Power Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the VirtualInertia model are:\n\nÏ‰_oc: Speed of the rotating reference frame of the virtual synchronous generator model,\nÎ¸_oc: Phase angle displacement of the virtual synchronous generator model\n\nn_states::Int: VirtualInertia has two states\n\n\n\n\n\n","category":"type"},{"location":"model_library/outer_control/#PowerSystems.get_P_ref-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_P_ref","text":"get_P_ref(value::VirtualInertia) -> Float64\n\n\nGet VirtualInertia P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_Ta-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_Ta","text":"get_Ta(value::VirtualInertia) -> Float64\n\n\nGet VirtualInertia Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_ext-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_ext","text":"get_ext(value::VirtualInertia) -> Dict{String,Any}\n\n\nGet VirtualInertia ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_kd-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_kd","text":"get_kd(value::VirtualInertia) -> Float64\n\n\nGet VirtualInertia kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_kÏ‰-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_kÏ‰","text":"get_kÏ‰(value::VirtualInertia) -> Float64\n\n\nGet VirtualInertia kÏ‰.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_n_states-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_n_states","text":"get_n_states(value::VirtualInertia) -> Int64\n\n\nGet VirtualInertia n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_states-Tuple{VirtualInertia}","page":"OuterControl","title":"PowerSystems.get_states","text":"get_states(value::VirtualInertia) -> Array{Symbol,1}\n\n\nGet VirtualInertia states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_P_ref!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_P_ref!","text":"set_P_ref!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia P_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_Ta!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_Ta!","text":"set_Ta!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia Ta.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_ext!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_ext!","text":"set_ext!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_kd!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_kd!","text":"set_kd!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia kd.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_kÏ‰!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_kÏ‰!","text":"set_kÏ‰!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia kÏ‰.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_n_states!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_states!-Tuple{VirtualInertia,Any}","page":"OuterControl","title":"PowerSystems.set_states!","text":"set_states!(value::VirtualInertia, val::Any) -> Any\n\n\nSet VirtualInertia states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#Reactive-Power-Droop","page":"OuterControl","title":"Reactive Power Droop","text":"","category":"section"},{"location":"model_library/outer_control/","page":"OuterControl","title":"OuterControl","text":"Modules = [PowerSystems]\nPages   = [\"generated/ReactivePowerDroop.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/outer_control/#PowerSystems.ReactivePowerDroop","page":"OuterControl","title":"PowerSystems.ReactivePowerDroop","text":"mutable struct ReactivePowerDroop <: ReactivePowerControl\n    kq::Float64\n    Ï‰f::Float64\n    V_ref::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of a Reactive Power droop controller\n\nArguments\n\nkq::Float64: frequency droop gain, validation range: (0, nothing)\nÏ‰f::Float64: filter frequency cutoff, validation range: (0, nothing)\nV_ref::Float64: Reference Voltage Set-point, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the ReactivePowerDroop model are:\n\nq_oc: Filtered reactive output power\n\nn_states::Int: ReactivePowerDroop has 1 state\n\n\n\n\n\n","category":"type"},{"location":"model_library/outer_control/#PowerSystems.get_V_ref-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_V_ref","text":"get_V_ref(value::ReactivePowerDroop) -> Float64\n\n\nGet ReactivePowerDroop V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_ext-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_ext","text":"get_ext(value::ReactivePowerDroop) -> Dict{String,Any}\n\n\nGet ReactivePowerDroop ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_kq-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_kq","text":"get_kq(value::ReactivePowerDroop) -> Float64\n\n\nGet ReactivePowerDroop kq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_n_states-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_n_states","text":"get_n_states(value::ReactivePowerDroop) -> Int64\n\n\nGet ReactivePowerDroop n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_states-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_states","text":"get_states(value::ReactivePowerDroop) -> Array{Symbol,1}\n\n\nGet ReactivePowerDroop states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.get_Ï‰f-Tuple{ReactivePowerDroop}","page":"OuterControl","title":"PowerSystems.get_Ï‰f","text":"get_Ï‰f(value::ReactivePowerDroop) -> Float64\n\n\nGet ReactivePowerDroop Ï‰f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_V_ref!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_V_ref!","text":"set_V_ref!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop V_ref.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_ext!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_ext!","text":"set_ext!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_kq!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_kq!","text":"set_kq!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop kq.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_n_states!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_states!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_states!","text":"set_states!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/outer_control/#PowerSystems.set_Ï‰f!-Tuple{ReactivePowerDroop,Any}","page":"OuterControl","title":"PowerSystems.set_Ï‰f!","text":"set_Ï‰f!(value::ReactivePowerDroop, val::Any) -> Any\n\n\nSet ReactivePowerDroop Ï‰f.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#InnerControl","page":"InnerControl","title":"InnerControl","text":"","category":"section"},{"location":"model_library/generated_InnerControl/#CurrentControl","page":"InnerControl","title":"CurrentControl","text":"","category":"section"},{"location":"model_library/generated_InnerControl/","page":"InnerControl","title":"InnerControl","text":"Modules = [PowerSystems]\nPages   = [\"/CurrentControl.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_InnerControl/#PowerSystems.CurrentControl","page":"InnerControl","title":"PowerSystems.CurrentControl","text":"mutable struct CurrentControl <: InnerControl\n    kpv::Float64\n    kiv::Float64\n    kffv::Float64\n    rv::Float64\n    lv::Float64\n    kpc::Float64\n    kic::Float64\n    kffi::Float64\n    Ï‰ad::Float64\n    kad::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of an inner loop current control PID using virtual impedance based on D'Arco, Suul and Fosso. \"A Virtual Synchronous Machine implementation for distributed control of power converters in SmartGrids.\" Electric Power Systems Research 122 (2015) 180â€“197.\n\nArguments\n\nkpv::Float64: voltage controller proportional gain, validation range: (0, nothing)\nkiv::Float64: voltage controller integral gain, validation range: (0, nothing)\nkffv::Float64: Binary variable to enable feed-forward gain of voltage., validation range: (0, nothing)\nrv::Float64: virtual resistance, validation range: (0, nothing)\nlv::Float64: virtual inductance, validation range: (0, nothing)\nkpc::Float64: current controller proportional gain, validation range: (0, nothing)\nkic::Float64: current controller integral gain, validation range: (0, nothing)\nkffi::Float64: Binary variable to enable feed-forward gain of current, validation range: (0, nothing)\nÏ‰ad::Float64: active damping filter cutoff frequency (rad/sec), validation range: (0, nothing)\nkad::Float64: active damping gain, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the VirtualInertia model are:\n\nÎ¾d_ic: d-axis integrator state of the PI voltage controller,\nÎ¾q_ic: q-axis integrator state of the PI voltage controller,\nÎ³d_ic: d-axis integrator state of the PI current controller,\nÎ³q_ic: q-axis integrator state of the PI current controller,\nÏ•d_ic: d-axis low-pass filter of active damping,\nÏ•q_ic: q-axis low-pass filter of active damping\n\nn_states::Int: CurrentControl has 6 states\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_ext-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_ext","text":"get_ext(value::CurrentControl) -> Dict{String,Any}\n\n\nGet CurrentControl ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kad-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kad","text":"get_kad(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kffi-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kffi","text":"get_kffi(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kffi.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kffv-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kffv","text":"get_kffv(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kffv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kic-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kic","text":"get_kic(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kic.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kiv-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kiv","text":"get_kiv(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kiv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kpc-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kpc","text":"get_kpc(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kpc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_kpv-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_kpv","text":"get_kpv(value::CurrentControl) -> Float64\n\n\nGet CurrentControl kpv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_lv-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_lv","text":"get_lv(value::CurrentControl) -> Float64\n\n\nGet CurrentControl lv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_n_states-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_n_states","text":"get_n_states(value::CurrentControl) -> Int64\n\n\nGet CurrentControl n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_rv-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_rv","text":"get_rv(value::CurrentControl) -> Float64\n\n\nGet CurrentControl rv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_states-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_states","text":"get_states(value::CurrentControl) -> Array{Symbol,1}\n\n\nGet CurrentControl states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.get_Ï‰ad-Tuple{CurrentControl}","page":"InnerControl","title":"PowerSystems.get_Ï‰ad","text":"get_Ï‰ad(value::CurrentControl) -> Float64\n\n\nGet CurrentControl Ï‰ad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_ext!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_ext!","text":"set_ext!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kad!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kad!","text":"set_kad!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kad.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kffi!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kffi!","text":"set_kffi!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kffi.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kffv!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kffv!","text":"set_kffv!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kffv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kic!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kic!","text":"set_kic!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kic.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kiv!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kiv!","text":"set_kiv!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kiv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kpc!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kpc!","text":"set_kpc!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kpc.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_kpv!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_kpv!","text":"set_kpv!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl kpv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_lv!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_lv!","text":"set_lv!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl lv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_n_states!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_rv!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_rv!","text":"set_rv!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl rv.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_states!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_states!","text":"set_states!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_InnerControl/#PowerSystems.set_Ï‰ad!-Tuple{CurrentControl,Any}","page":"InnerControl","title":"PowerSystems.set_Ï‰ad!","text":"set_Ï‰ad!(value::CurrentControl, val::Any) -> Any\n\n\nSet CurrentControl Ï‰ad.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#Internal-API","page":"Internal API","title":"Internal API","text":"","category":"section"},{"location":"api/internal/","page":"Internal API","title":"Internal API","text":"Modules = [PowerSystems]\nPublic = false","category":"page"},{"location":"api/internal/#PowerSystems._pti_dtypes","page":"Internal API","title":"PowerSystems._pti_dtypes","text":"lookup array of data types for PTI file sections given by field_name, as enumerated by PSS/e Program Operation Manual.\n\n\n\n\n\n","category":"constant"},{"location":"api/internal/#PowerSystems._pti_sections","page":"Internal API","title":"PowerSystems._pti_sections","text":"A list of data file sections in the order that they appear in a PTI v33 file\n\n\n\n\n\n","category":"constant"},{"location":"api/internal/#PowerSystems.pm_component_status","page":"Internal API","title":"PowerSystems.pm_component_status","text":"maps component types to status parameters\n\n\n\n\n\n","category":"constant"},{"location":"api/internal/#PowerSystems.pm_component_status_inactive","page":"Internal API","title":"PowerSystems.pm_component_status_inactive","text":"maps component types to inactive status values\n\n\n\n\n\n","category":"constant"},{"location":"api/internal/#PowerSystems.PowerSystemTableData-Tuple{AbstractString,Float64,AbstractString}","page":"Internal API","title":"PowerSystems.PowerSystemTableData","text":"PowerSystemTableData(directory::AbstractString, base_power::Float64, user_descriptor_file::AbstractString; descriptor_file, generator_mapping_file, timeseries_metadata_file) -> PowerSystems.PowerSystemTableData\n\n\nReads in all the data stored in csv files The general format for data is     folder:         gen.csv         branch.csv         bus.csv         ..         load.csv\n\nArguments\n\ndirectory::AbstractString: directory containing CSV files\nbase_power::Float64: base power for System\nuser_descriptor_file::AbstractString: customized input descriptor file\ndescriptor_file=POWER_SYSTEM_DESCRIPTOR_FILE: PowerSystems descriptor file\ngenerator_mapping_file=GENERATOR_MAPPING_FILE: generator mapping configuration file\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._FieldInfo","page":"Internal API","title":"PowerSystems._FieldInfo","text":"Stores user-customized information for required dataframe columns.\n\n\n\n\n\n","category":"type"},{"location":"api/internal/#Base.convert-Tuple{Type{NamedTuple{(:min, :max),Tuple{Float64,Float64}}},Tuple{Float64,Float64}}","page":"Internal API","title":"Base.convert","text":"convert(_::Type{NamedTuple{(:min, :max),Tuple{Float64,Float64}}}, input::Tuple{Float64,Float64}) -> NamedTuple{(:min, :max),Tuple{Float64,Float64}}\n\n\nConvert Tuple to Min Max Named Tuple\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#Base.convert-Tuple{Type{NamedTuple{(:up, :down),Tuple{Float64,Float64}}},Tuple{Float64,Float64}}","page":"Internal API","title":"Base.convert","text":"convert(_::Type{NamedTuple{(:up, :down),Tuple{Float64,Float64}}}, input::Tuple{Float64,Float64}) -> NamedTuple{(:up, :down),Tuple{Float64,Float64}}\n\n\nConvert Tuple to Up Down Named Tuple\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#InfrastructureSystems.convert_type-Union{Tuple{T}, Tuple{Type{T},NamedTuple,Dict}} where T<:Device","page":"Internal API","title":"InfrastructureSystems.convert_type","text":"convert_type(_::Type{T<:Device}, data::NamedTuple, component_cache::Dict) -> DynamicBranch\n\n\nCreates a Device object by decoding the data that was in JSON. This data stores the values for buses and services as UUIDs, so this will lookup each in component_cache.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._add_dcline_costs!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._add_dcline_costs!","text":"_add_dcline_costs!(data::Dict{String,Any})\n\n\nadds dcline costs, if gen costs exist\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._add_line_delimiter-Tuple{AbstractString,Any,Any}","page":"Internal API","title":"PowerSystems._add_line_delimiter","text":"_add_line_delimiter(mp_line::AbstractString, start_char::Any, end_char::Any) -> AbstractString\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._apply_func!-Tuple{Dict{String,#s857} where #s857,String,Any}","page":"Internal API","title":"PowerSystems._apply_func!","text":"_apply_func!(data::Dict{String,#s857} where #s857, key::String, func::Any) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._biggest_generator-Tuple{Any}","page":"Internal API","title":"PowerSystems._biggest_generator","text":"_biggest_generator(gens::Any) -> Any\n\n\nfind the largest active generator in the network\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._bold-Tuple{String}","page":"Internal API","title":"PowerSystems._bold","text":"_bold(s::String) -> String\n\n\nMakes a string bold in the terminal\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._calc_branch_flow_ac-Tuple{Dict{String,#s849} where #s849}","page":"Internal API","title":"PowerSystems._calc_branch_flow_ac","text":"_calc_branch_flow_ac(data::Dict{String,#s849} where #s849) -> Dict{String,Any}\n\n\nhelper function for calcbranchflow_ac\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._calc_branch_flow_dc-Tuple{Dict{String,#s850} where #s850}","page":"Internal API","title":"PowerSystems._calc_branch_flow_dc","text":"_calc_branch_flow_dc(data::Dict{String,#s850} where #s850) -> Dict{String,Any}\n\n\nhelper function for calcbranchflow_dc\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._calc_comp_lines-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems._calc_comp_lines","text":"_calc_comp_lines(component::Dict{String,#s855} where #s855) -> Array{Any,1}\n\n\ncompute lines in m and b from from pwl cost models\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._calc_max_cost_index-Tuple{Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems._calc_max_cost_index","text":"_calc_max_cost_index(data::Dict{String,#s853} where #s853) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._calc_power_balance-Tuple{Dict{String,#s837} where #s837}","page":"Internal API","title":"PowerSystems._calc_power_balance","text":"_calc_power_balance(data::Dict{String,#s837} where #s837) -> Dict{String,Any}\n\n\nhelper function for calcpowerbalance\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._check_conductors-Tuple{Dict{String,#s857} where #s857}","page":"Internal API","title":"PowerSystems._check_conductors","text":"_check_conductors(data::Dict{String,#s857} where #s857)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._check_keys-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._check_keys","text":"_check_keys(data::Any, keys::Any)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._compare_numbers-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._compare_numbers","text":"_compare_numbers(v1::Any, v2::Any) -> Bool\n\n\ntests if two numbers are equal, up to floating point precision\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._correct_cost_function!-Tuple{Any,Any,Any}","page":"Internal API","title":"PowerSystems._correct_cost_function!","text":"_correct_cost_function!(id::Any, comp::Any, type_name::Any) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._correct_reference_buses!-Tuple{Dict{String,#s846} where #s846}","page":"Internal API","title":"PowerSystems._correct_reference_buses!","text":"_correct_reference_buses!(data::Dict{String,#s846} where #s846)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._create_starbus_from_transformer-Tuple{Dict,Dict}","page":"Internal API","title":"PowerSystems._create_starbus_from_transformer","text":"_create_starbus_from_transformer(pm_data::Dict, transformer::Dict) -> Dict{String,Any}\n\n\ncreate_starbus(pm_data, transformer)\n\nCreates a starbus from a given three-winding transformer. \"sourceid\" is given by `[\"busi\", \"name\", \"I\", \"J\", \"K\", \"CKT\"]` where \"bus_i\" and \"name\" are the modified names for the starbus, and \"I\", \"J\", \"K\" and \"CKT\" come from the originating transformer, in the PSS(R)E transformer specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._dfs-NTuple{4,Any}","page":"Internal API","title":"PowerSystems._dfs","text":"_dfs(i::Any, neighbors::Any, component_lookup::Any, touched::Any)\n\n\nperforms DFS on a graph\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._export_cost_data-Tuple{IO,Dict{Int64,Dict},String}","page":"Internal API","title":"PowerSystems._export_cost_data","text":"_export_cost_data(io::IO, components::Dict{Int64,Dict}, prefix::String)\n\n\nExport cost data\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._export_extra_data","page":"Internal API","title":"PowerSystems._export_extra_data","text":"_export_extra_data(io::IO, data::Dict{String,#s843} where #s843, component::Any)\n_export_extra_data(io::IO, data::Dict{String,#s842} where #s842, component::Any, excluded_fields::Any; postfix)\n\n\nExport fields of a component type\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems._extract_matlab_assignment-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems._extract_matlab_assignment","text":"_extract_matlab_assignment(string::AbstractString) -> Tuple{SubString,SubString}\n\n\nbreaks up matlab strings of the form 'name = value;'\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._find_max_bus_id-Tuple{Dict}","page":"Internal API","title":"PowerSystems._find_max_bus_id","text":"_find_max_bus_id(pm_data::Dict) -> Int64\n\n\n_find_max_bus_id(pm_data)\n\nReturns the maximum bus id in pm_data\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._float2string-Tuple{AbstractFloat,Int64}","page":"Internal API","title":"PowerSystems._float2string","text":"_float2string(v::AbstractFloat, float_precision::Int64) -> String\n\n\nconverts a float value into a string of fixed precision\n\nsprintf would do the job but this work around is needed because sprintf cannot take format strings during runtime\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._get_bus_value-Tuple{Any,Any,Any}","page":"Internal API","title":"PowerSystems._get_bus_value","text":"_get_bus_value(bus_i::Any, field::Any, pm_data::Any) -> Any\n\n\n_get_bus_value(bus_i, field, pm_data)\n\nReturns the value of field of bus_i from the PowerModels data. Requires \"bus\" Dict to already be populated.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._get_contributing_devices-Union{Tuple{T}, Tuple{System,T}} where T<:Service","page":"Internal API","title":"PowerSystems._get_contributing_devices","text":"Returns a ServiceContributingDevices object.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._get_default","page":"Internal API","title":"PowerSystems._get_default","text":"_get_default(dict::Any, key::Any) -> Any\n_get_default(dict::Any, key::Any, default::Any) -> Any\n\n\nGet a default value for dict entry \n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems._get_line_elements-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems._get_line_elements","text":"_get_line_elements(line::AbstractString) -> Tuple{Array{_A,1} where _A,Union{String, SubString}}\n\n\n_get_line_elements(line)\n\nInternal function. Uses regular expressions to extract all separate data elements from a line of a PTI file and populate them into an Array{String}. Comments, typically indicated at the end of a line with a '/' character, are also extracted separately, and Array{Array{String}, String} is returned.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._get_load_data-Tuple{System,Bus}","page":"Internal API","title":"PowerSystems._get_load_data","text":"_get_load_data(sys::System, b::Bus) -> Tuple{Any,Any}\n\n\nObtain total load on bus b\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._get_pm_dict_name-Tuple{Any}","page":"Internal API","title":"PowerSystems._get_pm_dict_name","text":"_get_pm_dict_name(device_dict::Any) -> Any\n\n\nInternal component name retreval from pm2ps_dict\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._grey-Tuple{String}","page":"Internal API","title":"PowerSystems._grey","text":"_grey(s::String) -> String\n\n\nMakes a string grey in the terminal, does not seem to work well on Windows terminals more info can be found at https://en.wikipedia.org/wiki/ANSIescapecode\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._import_remaining!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._import_remaining!","text":"_import_remaining!(data_out::Dict, data_in::Dict, import_all::Bool; exclude)\n\n\nImports remaining keys from data_in into data_out, excluding keys in exclude\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._init_bus!-Tuple{Dict{String,Any},Int64}","page":"Internal API","title":"PowerSystems._init_bus!","text":"_init_bus!(bus::Dict{String,Any}, id::Int64) -> Int64\n\n\n_init_bus!(bus, id)\n\nInitializes a bus of id id with default values given in the PSS(R)E specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._make_mixed_units!-Tuple{Dict{String,#s842} where #s842,Real}","page":"Internal API","title":"PowerSystems._make_mixed_units!","text":"_make_mixed_units!(data::Dict{String,#s842} where #s842, mva_base::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._make_per_unit!-Tuple{Dict{String,#s842} where #s842,Real}","page":"Internal API","title":"PowerSystems._make_per_unit!","text":"_make_per_unit!(data::Dict{String,#s842} where #s842, mva_base::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._make_shaft-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._make_shaft","text":"_make_shaft(param_map::Any, val::Any) -> Any\n\n\nCreate a SingleMass shaft struct directly using the parameter mapping.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._matpower_to_powermodels!-Tuple{Dict{String,#s147} where #s147}","page":"Internal API","title":"PowerSystems._matpower_to_powermodels!","text":"_matpower_to_powermodels!(mp_data::Dict{String,#s147} where #s147) -> Dict{String,#s147} where #s147\n\n\nConverts a Matpower dict into a PowerModels dict\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._merge_bus_name_data!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._merge_bus_name_data!","text":"_merge_bus_name_data!(data::Dict{String,Any}) -> Union{Nothing, Dict{String,Any}}\n\n\nmerges bus name data into buses, if names exist\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._merge_generator_cost_data!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._merge_generator_cost_data!","text":"_merge_generator_cost_data!(data::Dict{String,Any}) -> Union{Nothing, Dict{String,Any}}\n\n\nmerges generator cost functions into generator data, if costs exist\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._merge_generic_data!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._merge_generic_data!","text":"_merge_generic_data!(data::Dict{String,Any})\n\n\nmerges Matpower tables based on the table extension syntax\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._mp2pm_branch!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._mp2pm_branch!","text":"_mp2pm_branch!(data::Dict{String,Any})\n\n\nsets all branch transformer taps to 1.0, to simplify branch models\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._mp2pm_dcline!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._mp2pm_dcline!","text":"_mp2pm_dcline!(data::Dict{String,Any})\n\n\nadds pmin and pmax values at to and from buses\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._mp_cost_data-Tuple{Any}","page":"Internal API","title":"PowerSystems._mp_cost_data","text":"_mp_cost_data(cost_row::Any) -> Dict{String,Any}\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_dyr_components-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems._parse_dyr_components","text":"_parse_dyr_components(dyr_file::AbstractString) -> Dict{Int64,Any}\n\n\nParse a .dyr file directly from its name by constructing its dictionary of dictionaries.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_dyr_components-Tuple{Dict}","page":"Internal API","title":"PowerSystems._parse_dyr_components","text":"_parse_dyr_components(data::Dict) -> Dict{Int64,Any}\n\n\nParse dictionary of dictionaries of data (from _parse_dyr_file) into a dictionary of struct components. The function receives the parsed dictionary and construct a dictionary indexed by bus, that containts a  dictionary with each dynamic generator components (indexed via its id).\n\nEach dictionary indexed by id contains a vector with 5 of its components:\n\nMachine\nShaft\nAVR\nTurbineGov\nPSS\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_dyr_file-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems._parse_dyr_file","text":"_parse_dyr_file(file::AbstractString) -> Dict{Int64,Dict}\n\n\nParse .dyr file into a dictionary indexed by bus number. Each bus number key has a dictionary indexed by component type and id.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_elements-Tuple{Array,Array,Dict,AbstractString}","page":"Internal API","title":"PowerSystems._parse_elements","text":"_parse_elements(elements::Array, dtypes::Array, defaults::Dict, section::AbstractString) -> Dict{String,Any}\n\n\nThis is an experimental method for parsing elements and setting defaults at the same time. It is not currently working but would reduce memory allocations if implemented correctly.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_line_element!-Tuple{Dict,Array,AbstractString}","page":"Internal API","title":"PowerSystems._parse_line_element!","text":"_parse_line_element!(data::Dict, elements::Array, section::AbstractString)\n\n\n_parse_line_element!(data, elements, section)\n\nInternal function. Parses a single \"line\" of data elements from a PTI file, as given by elements which is an array of the line, typically split at ,. Elements are parsed into data types given by section and saved into data::Dict.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_matlab_cells-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._parse_matlab_cells","text":"_parse_matlab_cells(lines::Any, index::Any) -> Dict{_A,_B} where _B where _A\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_matlab_data-NTuple{4,Any}","page":"Internal API","title":"PowerSystems._parse_matlab_data","text":"_parse_matlab_data(lines::Any, index::Any, start_char::Any, end_char::Any) -> Dict{_A,_B} where _B where _A\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_matlab_matrix-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._parse_matlab_matrix","text":"_parse_matlab_matrix(lines::Any, index::Any) -> Dict{_A,_B} where _B where _A\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_matpower_string-Tuple{String}","page":"Internal API","title":"PowerSystems._parse_matpower_string","text":"_parse_matpower_string(data_string::String) -> Dict{String,Any}\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._parse_pti_data-Tuple{IO}","page":"Internal API","title":"PowerSystems._parse_pti_data","text":"_parse_pti_data(data_io::IO) -> Dict{String,Array{Dict,N} where N}\n\n\n_parse_pti_data(data_string, sections)\n\nInternal function. Parse a PTI raw file into a Dict, given the data_string of the file and a list of the sections in the PTI file (typically given by default by get_pti_sections().\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._populate_args-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems._populate_args","text":"_populate_args(param_map::Any, val::Any) -> Array{Any,1}\n\n\nPopulate arguments in a vector for each dynamic component (except Shafts). Returns a vector with the parameter values of the argument of each component.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._populate_defaults!-Tuple{Dict}","page":"Internal API","title":"PowerSystems._populate_defaults!","text":"_populate_defaults!(data::Dict)\n\n\n_populate_defaults!(pti_data)\n\nInternal function. Populates empty fields with PSS(R)E PTI v33 default values\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._propagate_topology_status!-Tuple{Dict{String,#s142} where #s142}","page":"Internal API","title":"PowerSystems._propagate_topology_status!","text":"_propagate_topology_status!(data::Dict{String,#s142} where #s142)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_branch!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_branch!","text":"_psse2pm_branch!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_branch!(pm_data, pti_data)\n\nParses PSS(R)E-style Branch data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"J\", \"CKT\"] in PSS(R)E Branch specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_bus!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_bus!","text":"_psse2pm_bus!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_bus!(pm_data, pti_data)\n\nParses PSS(R)E-style Bus data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"NAME\"] in PSS(R)E Bus specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_dcline!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_dcline!","text":"_psse2pm_dcline!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_dcline!(pm_data, pti_data)\n\nParses PSS(R)E-style Two-Terminal and VSC DC Lines data into a PowerModels compatible Dict structure by first converting them to a simple DC Line Model. For Two-Terminal DC lines, \"sourceid\" is given by [\"IPR\", \"IPI\", \"NAME\"] in the PSS(R)E Two-Terminal DC specification. For Voltage Source Converters, \"sourceid\" is given by [\"IBUS1\", \"IBUS2\", \"NAME\"], where \"IBUS1\" is \"IBUS\" of the first converter bus, and \"IBUS2\" is the \"IBUS\" of the second converter bus, in the PSS(R)E Voltage Source Converter specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_generator!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_generator!","text":"_psse2pm_generator!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_generator!(pm_data, pti_data)\n\nParses PSS(R)E-style Generator data in a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] in PSS(R)E Generator specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_load!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_load!","text":"_psse2pm_load!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_load!(pm_data, pti_data)\n\nParses PSS(R)E-style Load data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] in the PSS(R)E Load specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_shunt!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_shunt!","text":"_psse2pm_shunt!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_shunt!(pm_data, pti_data)\n\nParses PSS(R)E-style Fixed and Switched Shunt data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] for Fixed Shunts, and [\"I\", \"SWREM\"] for Switched Shunts, as given by the PSS(R)E Fixed and Switched Shunts specifications.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._psse2pm_transformer!-Tuple{Dict,Dict,Bool}","page":"Internal API","title":"PowerSystems._psse2pm_transformer!","text":"_psse2pm_transformer!(pm_data::Dict, pti_data::Dict, import_all::Bool)\n\n\n_psse2pm_transformer!(pm_data, pti_data)\n\nParses PSS(R)E-style Transformer data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"J\", \"K\", \"CKT\", \"winding\"], where \"winding\" is 0 if transformer is two-winding, and 1, 2, or 3 for three-winding, and the remaining keys are defined in the PSS(R)E Transformer specification.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._pti_to_powermodels!-Tuple{Dict}","page":"Internal API","title":"PowerSystems._pti_to_powermodels!","text":"_pti_to_powermodels!(pti_data::Dict; import_all, validate) -> Dict{String,Any}\n\n\n_pti_to_powermodels!(pti_data)\n\nConverts PSS(R)E-style data parsed from a PTI raw file, passed by pti_data into a format suitable for use internally in PowerModels. Imports all remaining data from the PTI file if import_all is true (Default: false).\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._read_data_row-Tuple{PowerSystems.PowerSystemTableData,Any,Any}","page":"Internal API","title":"PowerSystems._read_data_row","text":"_read_data_row(data::PowerSystems.PowerSystemTableData, row::Any, field_infos::Any; na_to_nothing) -> NamedTuple\n\n\nReads values from dataframe row and performs necessary conversions.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._remove_aggregration_topology!-Tuple{Bus,LoadZone}","page":"Internal API","title":"PowerSystems._remove_aggregration_topology!","text":"_remove_aggregration_topology!(bus::Bus, _::LoadZone)\n\n\nRemove the aggregation topology in a Bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._remove_pwl_cost_duplicates!","page":"Internal API","title":"PowerSystems._remove_pwl_cost_duplicates!","text":"_remove_pwl_cost_duplicates!(id::Any, comp::Any, type_name::Any) -> Bool\n_remove_pwl_cost_duplicates!(id::Any, comp::Any, type_name::Any, tolerance::Any) -> Bool\n\n\nchecks that each point in the a pwl function is unqiue, simplifies the function if duplicates appear\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems._remove_service!-Tuple{Device,Service}","page":"Internal API","title":"PowerSystems._remove_service!","text":"_remove_service!(device::Device, service::Service) -> Bool\n\n\nRemove service from device if it is attached.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._rescale_cost_model!-Tuple{Dict{String,#s854} where #s854,Real}","page":"Internal API","title":"PowerSystems._rescale_cost_model!","text":"_rescale_cost_model!(comp::Dict{String,#s854} where #s854, scale::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._select_largest_component!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems._select_largest_component!","text":"_select_largest_component!(data::Dict{String,#s855} where #s855) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._simplify_pwl_cost!","page":"Internal API","title":"PowerSystems._simplify_pwl_cost!","text":"_simplify_pwl_cost!(id::Any, comp::Any, type_name::Any) -> Bool\n_simplify_pwl_cost!(id::Any, comp::Any, type_name::Any, tolerance::Any) -> Bool\n\n\nchecks the slope of each segment in a pwl function, simplifies the function if the slope changes is below a tolerance\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems._split_loads_shunts!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems._split_loads_shunts!","text":"_split_loads_shunts!(data::Dict{String,Any})\n\n\n_split_loads_shunts!(data)\n\nSeperates Loads and Shunts in data under separate \"load\" and \"shunt\" keys in the PowerModels data format. Includes references to originating bus via \"loadbus\" and \"shuntbus\" keys, respectively.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._standardize_cost_terms!-Tuple{Dict{String,#s854} where #s854,Int64,String}","page":"Internal API","title":"PowerSystems._standardize_cost_terms!","text":"_standardize_cost_terms!(components::Dict{String,#s854} where #s854, comp_order::Int64, cost_comp_name::String) -> Set{Int64}\n\n\nensures all polynomial costs functions have at exactly comp_order terms\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._type_array-Union{Tuple{Array{T,1}}, Tuple{T}} where T<:AbstractString","page":"Internal API","title":"PowerSystems._type_array","text":"_type_array(string_array::Array{T<:AbstractString,1}) -> Any\n\n\nAttempts to determine the type of an array of strings extracted from a matlab file\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._type_value-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems._type_value","text":"_type_value(value_string::AbstractString) -> Union{Float64, Int64, SubString}\n\n\nAttempts to determine the type of a string extracted from a matlab file\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._update_branch_flow!-Tuple{System}","page":"Internal API","title":"PowerSystems._update_branch_flow!","text":"_update_branch_flow!(sys::System)\n\n\nUpdates the flow on the branches\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._update_data!-Tuple{Dict{String,#s854} where #s854,Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems._update_data!","text":"_update_data!(data::Dict{String,#s854} where #s854, new_data::Dict{String,#s853} where #s853)\n\n\nrecursive call of updatedata\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._value2string-Tuple{Any,Int64}","page":"Internal API","title":"PowerSystems._value2string","text":"_value2string(v::Any, float_precision::Int64) -> Any\n\n\nconverts any value to a string, summarizes arrays and dicts\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._write_pf_sol!-Tuple{System,Any}","page":"Internal API","title":"PowerSystems._write_pf_sol!","text":"_write_pf_sol!(sys::System, nl_result::Any)\n\n\nUpdates system voltages and powers with power flow results\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems._write_results-Tuple{System,Any}","page":"Internal API","title":"PowerSystems._write_results","text":"_write_results(sys::System, nl_result::Any) -> Dict{String,DataFrames.DataFrame}\n\n\nReturn power flow results in dictionary of dataframes.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.adequacy_check-Tuple{System}","page":"Internal API","title":"PowerSystems.adequacy_check","text":"adequacy_check(sys::System) -> Union{Nothing, Bool}\n\n\nadequacy_check(sys::System)\n\nChecks the system for sum(generator ratings) >= sum(load ratings).\n\nArguments\n\nsys::System: system\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.arrays_to_dicts!-Tuple{Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems.arrays_to_dicts!","text":"arrays_to_dicts!(data::Dict{String,#s853} where #s853)\n\n\nturns top level arrays into dicts\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.branch_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.branch_csv_parser!","text":"branch_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nAdd branches to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.bus_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.bus_csv_parser!","text":"bus_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nAdd buses and areas to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.bus_gen_lookup-Tuple{Dict{String,#s852} where #s852,Dict{String,#s851} where #s851}","page":"Internal API","title":"PowerSystems.bus_gen_lookup","text":"bus_gen_lookup(gen_data::Dict{String,#s852} where #s852, bus_data::Dict{String,#s851} where #s851) -> Dict{_A,_B} where _B where _A\n\n\nbuilds a lookup list of what generators are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.bus_load_lookup-Tuple{Dict{String,#s852} where #s852,Dict{String,#s851} where #s851}","page":"Internal API","title":"PowerSystems.bus_load_lookup","text":"bus_load_lookup(load_data::Dict{String,#s852} where #s852, bus_data::Dict{String,#s851} where #s851) -> Dict{_A,_B} where _B where _A\n\n\nbuilds a lookup list of what loads are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.bus_shunt_lookup-Tuple{Dict{String,#s852} where #s852,Dict{String,#s851} where #s851}","page":"Internal API","title":"PowerSystems.bus_shunt_lookup","text":"bus_shunt_lookup(shunt_data::Dict{String,#s852} where #s852, bus_data::Dict{String,#s851} where #s851) -> Dict{_A,_B} where _B where _A\n\n\nbuilds a lookup list of what shunts are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.bus_storage_lookup-Tuple{Dict{String,#s852} where #s852,Dict{String,#s851} where #s851}","page":"Internal API","title":"PowerSystems.bus_storage_lookup","text":"bus_storage_lookup(storage_data::Dict{String,#s852} where #s852, bus_data::Dict{String,#s851} where #s851) -> Dict{_A,_B} where _B where _A\n\n\nbuilds a lookup list of what storage is connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_branch_flow_ac-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.calc_branch_flow_ac","text":"calc_branch_flow_ac(data::Dict{String,#s855} where #s855) -> Dict{String,Any}\n\n\nassumes a vaild ac solution is included in the data and computes the branch flow values\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_branch_flow_dc-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.calc_branch_flow_dc","text":"calc_branch_flow_dc(data::Dict{String,#s855} where #s855) -> Dict{String,Any}\n\n\nassumes a vaild dc solution is included in the data and computes the branch flow values\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_branch_t-Tuple{Dict{String,#s857} where #s857}","page":"Internal API","title":"PowerSystems.calc_branch_t","text":"calc_branch_t(branch::Dict{String,#s857} where #s857) -> Tuple{Any,Any}\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_branch_y-Tuple{Dict{String,#s857} where #s857}","page":"Internal API","title":"PowerSystems.calc_branch_y","text":"calc_branch_y(branch::Dict{String,#s857} where #s857) -> Tuple{Any,Any}\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_connected_components-Tuple{Dict{String,#s849} where #s849}","page":"Internal API","title":"PowerSystems.calc_connected_components","text":"calc_connected_components(data::Dict{String,#s849} where #s849; edges) -> Set{Set{Int64}}\n\n\ncomputes the connected components of the network graph returns a set of sets of bus ids, each set is a connected component\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_cost_pwl_lines-Tuple{Dict}","page":"Internal API","title":"PowerSystems.calc_cost_pwl_lines","text":"calc_cost_pwl_lines(comp_dict::Dict) -> Dict{Any,Any}\n\n\ncompute lines in m and b from from pwl cost models data is a list of components.\n\nCan be run on data or ref data structures\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_dcline_cost-Tuple{Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems.calc_dcline_cost","text":"calc_dcline_cost(data::Dict{String,#s853} where #s853) -> Any\n\n\ncomputes the dcline cost from given network data\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_gen_cost-Tuple{Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems.calc_gen_cost","text":"calc_gen_cost(data::Dict{String,#s853} where #s853) -> Any\n\n\ncomputes the generator cost from given network data\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_max_cost_index-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.calc_max_cost_index","text":"calc_max_cost_index(data::Dict{String,Any}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_power_balance-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.calc_power_balance","text":"calc_power_balance(data::Dict{String,#s855} where #s855) -> Dict{String,Any}\n\n\nassumes a vaild solution is included in the data and computes the power balance at each bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.calc_theta_delta_bounds-Tuple{Dict{String,#s856} where #s856}","page":"Internal API","title":"PowerSystems.calc_theta_delta_bounds","text":"calc_theta_delta_bounds(data::Dict{String,#s856} where #s856) -> Tuple{Real,Real}\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_ascending_order-Tuple{Array{Int64,N} where N,AbstractString}","page":"Internal API","title":"PowerSystems.check_ascending_order","text":"check_ascending_order(array::Array{Int64,N} where N, name::AbstractString)\n\n\nThrows DataFormatError if the array is not in ascending order.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_branch_loops-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.check_branch_loops","text":"check_branch_loops(data::Dict{String,#s855} where #s855)\n\n\nchecks that all branches connect two distinct buses\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_component_addition-Tuple{System,Component}","page":"Internal API","title":"PowerSystems.check_component_addition","text":"check_component_addition(sys::System, component::Component)\n\n\nThrows ArgumentError if a PowerSystems rule blocks addition to the system.\n\nThis method is tied with handlecomponentaddition!. If the methods are re-implemented for a subtype then whatever is added in handlecomponentaddition! must be checked here.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_component_removal-Tuple{System,Component}","page":"Internal API","title":"PowerSystems.check_component_removal","text":"check_component_removal(sys::System, component::Component)\n\n\nThrows ArgumentError if a PowerSystems rule blocks removal from the system.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_component_removal-Union{Tuple{T}, Tuple{System,T}} where T<:Service","page":"Internal API","title":"PowerSystems.check_component_removal","text":"Throws ArgumentError if a PowerSystems rule blocks removal from the system.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_conductors-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.check_conductors","text":"check_conductors(data::Dict{String,#s855} where #s855)\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_connectivity-Tuple{Dict{String,#s841} where #s841}","page":"Internal API","title":"PowerSystems.check_connectivity","text":"check_connectivity(data::Dict{String,#s841} where #s841)\n\n\nchecks that all buses are unique and other components link to valid buses\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_reference_bus-Tuple{Dict{String,#s854} where #s854}","page":"Internal API","title":"PowerSystems.check_reference_bus","text":"check_reference_bus(data::Dict{String,#s854} where #s854)\n\n\nchecks that contains at least one refrence bus\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_reference_buses-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.check_reference_buses","text":"check_reference_buses(data::Dict{String,Any})\n\n\nchecks that each connected components has a reference bus, if not, adds one\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_status-Tuple{Dict{String,#s841} where #s841}","page":"Internal API","title":"PowerSystems.check_status","text":"check_status(data::Dict{String,#s841} where #s841)\n\n\nchecks that active components are not connected to inactive buses, otherwise prints warnings\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_storage_parameters-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.check_storage_parameters","text":"check_storage_parameters(data::Dict{String,Any})\n\n\nchecks that each storage unit has a reasonable parameters\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_switch_parameters-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.check_switch_parameters","text":"check_switch_parameters(data::Dict{String,#s855} where #s855)\n\n\nchecks that each switch has a reasonable parameters\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_type-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems.check_type","text":"check_type(typ::Any, value::Any) -> Any\n\n\nChecks if the given value is of a given type, if not tries to make it that type\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.check_voltage_setpoints-Tuple{Dict{String,#s852} where #s852}","page":"Internal API","title":"PowerSystems.check_voltage_setpoints","text":"check_voltage_setpoints(data::Dict{String,#s852} where #s852)\n\n\nthrows warnings if generator and dc line voltage setpoints are not consistent with the bus voltage setpoint\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.compare_dict-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems.compare_dict","text":"compare_dict(d1::Any, d2::Any) -> Bool\n\n\ntests if two dicts are equal, up to floating point precision\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.copy_forecasts!","page":"Internal API","title":"PowerSystems.copy_forecasts!","text":"copy_forecasts!(src::InfrastructureSystems.InfrastructureSystemsType, dst::InfrastructureSystems.InfrastructureSystemsType)\ncopy_forecasts!(src::InfrastructureSystems.InfrastructureSystemsType, dst::InfrastructureSystems.InfrastructureSystemsType, label_mapping::Union{Nothing, Dict{String,String}})\n\n\nEfficiently add all forecasts in one component to another by copying the underlying references.\n\nArguments\n\nsrc::InfrastructureSystemsType: Source component\ndst::InfrastructureSystemsType: Destination component\nlabel_mapping::Dict = nothing: Optionally map src labels to different dst labels. If provided and src has a forecast with a label not present in labelmapping, that forecast will not copied. If labelmapping is nothing then all forecasts will be copied with src's labels.\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems.correct_branch_directions!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.correct_branch_directions!","text":"correct_branch_directions!(data::Dict{String,#s855} where #s855) -> Set{Int64}\n\n\nchecks that all parallel branches have the same orientation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_bus_types!-Tuple{Dict{String,#s851} where #s851}","page":"Internal API","title":"PowerSystems.correct_bus_types!","text":"correct_bus_types!(data::Dict{String,#s851} where #s851) -> Set{Int64}\n\n\nchecks bus types are consistent with generator connections, if not, fixes them\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_component_refrence_bus!-Tuple{Any,Any,Any}","page":"Internal API","title":"PowerSystems.correct_component_refrence_bus!","text":"correct_component_refrence_bus!(component_bus_ids::Any, bus_lookup::Any, component_gens::Any)\n\n\nchecks that a connected component has a reference bus, if not, adds one\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_cost_functions!-Tuple{Dict{String,#s853} where #s853}","page":"Internal API","title":"PowerSystems.correct_cost_functions!","text":"correct_cost_functions!(data::Dict{String,#s853} where #s853) -> Tuple{Set{Int64},Set{Int64}}\n\n\nthrows warnings if cost functions are malformed\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_current_limits!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.correct_current_limits!","text":"correct_current_limits!(data::Dict{String,#s855} where #s855) -> Set{Int64}\n\n\nchecks that each branch has a reasonable current rating-a, if not computes one\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_dcline_limits!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.correct_dcline_limits!","text":"correct_dcline_limits!(data::Dict{String,Any}) -> Set{Int64}\n\n\nchecks that parameters for dc lines are reasonable\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_network_data!-Tuple{Dict{String,#s856} where #s856}","page":"Internal API","title":"PowerSystems.correct_network_data!","text":"correct_network_data!(data::Dict{String,#s856} where #s856) -> Dict{String,Dict{Symbol,Set{Int64}}}\n\n\nRuns various data quality checks on a PowerModels data dictionary. Applies modifications in some cases.  Reports modified component ids.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_thermal_limits!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.correct_thermal_limits!","text":"correct_thermal_limits!(data::Dict{String,#s855} where #s855) -> Set{Int64}\n\n\nchecks that each branch has a reasonable thermal rating-a, if not computes one\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_transformer_parameters!-Tuple{Dict{String,#s854} where #s854}","page":"Internal API","title":"PowerSystems.correct_transformer_parameters!","text":"correct_transformer_parameters!(data::Dict{String,#s854} where #s854) -> Set{Int64}\n\n\nchecks that each branch has a reasonable transformer parameters\n\nthis is important because setting tap == 0.0 leads to NaN computations, which are hard to debug\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.correct_voltage_angle_differences!","page":"Internal API","title":"PowerSystems.correct_voltage_angle_differences!","text":"correct_voltage_angle_differences!(data::Dict{String,#s853} where #s853) -> Set{Int64}\ncorrect_voltage_angle_differences!(data::Dict{String,#s852} where #s852, default_pad::Any) -> Set{Int64}\n\n\nchecks that voltage angle differences are within 90 deg., if not tightens\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems.dc_branch_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.dc_branch_csv_parser!","text":"dc_branch_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nAdd DC branches to the System from raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.encode_for_json-Union{Tuple{T}, Tuple{T}} where T<:Device","page":"Internal API","title":"PowerSystems.encode_for_json","text":"Encode composed buses, injectors, and services as UUIDs.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.export_matpower-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.export_matpower","text":"export_matpower(data::Dict{String,Any}) -> String\n\n\nExport power network data in the matpower format\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.export_matpower-Tuple{IO,Dict{String,Any}}","page":"Internal API","title":"PowerSystems.export_matpower","text":"export_matpower(io::IO, data::Dict{String,Any})\n\n\nExport power network data in the matpower format\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_func-Tuple{ACBranch,Complex{Float64},Complex{Float64}}","page":"Internal API","title":"PowerSystems.flow_func","text":"flow_func(b::ACBranch, V_from::Complex{Float64}, V_to::Complex{Float64})\n\n\nCalculates the From - To complex power flow using external data of voltages of branch of type Line\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_func-Tuple{TapTransformer,Complex{Float64},Complex{Float64}}","page":"Internal API","title":"PowerSystems.flow_func","text":"flow_func(b::TapTransformer, V_from::Complex{Float64}, V_to::Complex{Float64}) -> Tuple{Float64,Float64}\n\n\nCalculates the From - To complex power flow using external data of voltages of branch of type TapTransformer\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_func-Tuple{Transformer2W,Complex{Float64},Complex{Float64}}","page":"Internal API","title":"PowerSystems.flow_func","text":"flow_func(b::Transformer2W, V_from::Complex{Float64}, V_to::Complex{Float64}) -> Tuple{Float64,Float64}\n\n\nCalculates the From - To complex power flow using external data of voltages of branch of type Transformer2W\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_val-Tuple{ACBranch}","page":"Internal API","title":"PowerSystems.flow_val","text":"flow_val(b::ACBranch)\n\n\nCalculates the From - To complex power flow (Flow injected at the bus) of branch of type Line\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_val-Tuple{TapTransformer}","page":"Internal API","title":"PowerSystems.flow_val","text":"flow_val(b::TapTransformer) -> Complex{Float64}\n\n\nCalculates the From - To complex power flow (Flow injected at the bus) of branch of type TapTransformer\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.flow_val-Tuple{Transformer2W}","page":"Internal API","title":"PowerSystems.flow_val","text":"flow_val(b::Transformer2W) -> Complex{Float64}\n\n\nCalculates the From - To complex power flow (Flow injected at the bus) of branch of type Transformer2W\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.gen_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.gen_csv_parser!","text":"gen_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nAdd generators to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_avr_saturation-Tuple{Tuple{Float64,Float64},Tuple{Float64,Float64}}","page":"Internal API","title":"PowerSystems.get_avr_saturation","text":"get_avr_saturation(E::Tuple{Float64,Float64}, Se::Tuple{Float64,Float64}) -> Tuple{Float64,Float64}\n\n\nObtain coefficients (A, B) of the function Se(x) = B(x - A)^2/x for Se(E1) = B(E1 - A)^2/E1 and Se(E2) = B(E2 - A)^2/2 and uses the negative solution of the quadratic equation \n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_branch-Tuple{DynamicBranch}","page":"Internal API","title":"PowerSystems.get_branch","text":"get_branch(value::DynamicBranch) -> ACBranch\n\n\nGet branch\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_dataframe-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory}","page":"Internal API","title":"PowerSystems.get_dataframe","text":"get_dataframe(data::PowerSystems.PowerSystemTableData, category::PowerSystems.InputCategory) -> DataFrames.DataFrame\n\n\nReturn the dataframe for the category.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_enum_value-Tuple{Any,String}","page":"Internal API","title":"PowerSystems.get_enum_value","text":"get_enum_value(enum::Any, value::String) -> Any\n\n\nGet the enum value for the string. Case insensitive.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_exponential_saturation-Tuple{Tuple{Float64,Float64}}","page":"Internal API","title":"PowerSystems.get_exponential_saturation","text":"get_exponential_saturation(Se::Tuple{Float64,Float64}) -> Tuple{Float64,Float64}\n\n\nObtain coefficients (A, B) of the function Se = Bx^A for Se(1.2) = B(1.2)^A and Se(1.0) = B(1.0)^A as: B = Se(1.0) and hence (1.2)^A = Se(1.2)/B -> A = log(Se(1.2)/B) / log(1.2)\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_forecast_keys-Tuple{Component}","page":"Internal API","title":"PowerSystems.get_forecast_keys","text":"get_forecast_keys(component::Component) -> Any\n\n\nReturn an iterable of NamedTuple keys for forecasts stored for this component.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_generator_mapping","page":"Internal API","title":"PowerSystems.get_generator_mapping","text":"get_generator_mapping() -> Dict{NamedTuple,DataType}\nget_generator_mapping(filename::Any) -> Dict{NamedTuple,DataType}\n\n\nReturn a dict where keys are a tuple of input parameters (fuel, unit_type) and values are generator types.\n\n\n\n\n\n","category":"function"},{"location":"api/internal/#PowerSystems.get_generator_type-Tuple{Any,Any,Dict{NamedTuple,DataType}}","page":"Internal API","title":"PowerSystems.get_generator_type","text":"get_generator_type(fuel::Any, unit_type::Any, mappings::Dict{NamedTuple,DataType}) -> Union{Nothing, DataType}\n\n\nReturn the PowerSystems generator type for this fuel and unit_type.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_quadratic_saturation-Tuple{Tuple{Float64,Float64}}","page":"Internal API","title":"PowerSystems.get_quadratic_saturation","text":"get_quadratic_saturation(Se::Tuple{Float64,Float64}) -> Tuple{Float64,Float64}\n\n\nObtain coefficients (A, B) of the function Se = B(x - A)^2 for Se(1.2) = B(1.2 - A)^2 and Se(1.0) = B(1.0 - A)^2 as: Se(1.0) = Se(1.2)/(1.2 - A)^2 * (1.0 - A)^2 that yields (1.2 - A)^2 Se(1.0) = Se(1.2) * (1.0 - A)^2 or expanding: (Se(1.2) - Se(1.0)) A^2 + (2.4 Se(1.0) - 2 Se(1.2)) A + (Se(1.2) - 1.44 Se(1.0)) = 0 and uses the negative solution of the quadratic equation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_series_susceptance-Tuple{ACBranch}","page":"Internal API","title":"PowerSystems.get_series_susceptance","text":"get_series_susceptance(b::ACBranch) -> Float64\n\n\nCalculate the admittance of AC branches\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_static_injector-Union{Tuple{T}, Tuple{T}} where T<:DynamicInjection","page":"Internal API","title":"PowerSystems.get_static_injector","text":"get_static_injector(device::T<:DynamicInjection) -> Union{Nothing, Generator}\n\n\nReturn the static injector stored with a dynamic injector.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_user_field-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory,AbstractString}","page":"Internal API","title":"PowerSystems.get_user_field","text":"get_user_field(data::PowerSystems.PowerSystemTableData, category::PowerSystems.InputCategory, field::AbstractString) -> Any\n\n\nReturn the custom name stored in the user descriptor file.\n\nThrows DataFormatError if a required value is not found in the file.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.get_user_fields-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory}","page":"Internal API","title":"PowerSystems.get_user_fields","text":"get_user_fields(data::PowerSystems.PowerSystemTableData, category::PowerSystems.InputCategory) -> Any\n\n\nReturn a vector of user-defined fields for the category.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.handle_component_addition!-Tuple{System,Component}","page":"Internal API","title":"PowerSystems.handle_component_addition!","text":"handle_component_addition!(sys::System, component::Component)\n\n\nRefer to docstring for checkcomponentaddition!\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.handle_component_removal!-Tuple{System,Bus}","page":"Internal API","title":"PowerSystems.handle_component_removal!","text":"handle_component_removal!(sys::System, bus::Bus) -> Int64\n\n\nThrows ArgumentError if the bus number is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.im_replicate-Tuple{Dict{String,#s855} where #s855,Int64,Set{String}}","page":"Internal API","title":"PowerSystems.im_replicate","text":"im_replicate(sn_data::Dict{String,#s855} where #s855, count::Int64, global_keys::Set{String}) -> Dict{String,Any}\n\n\nTransforms a single network into a multinetwork with several deepcopies of the original network\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.is_attached-Union{Tuple{T}, Tuple{T,System}} where T<:Component","page":"Internal API","title":"PowerSystems.is_attached","text":"is_attached(component::T<:Component, sys::System) -> Bool\n\n\nReturn true if the component is attached to the system.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.isafield-Tuple{Component,Symbol}","page":"Internal API","title":"PowerSystems.isafield","text":"isafield(component::Component, field::Symbol) -> Any\n\n\nChecks if a PowerSystemDevice has a field or subfield name.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.ismultinetwork-Tuple{Dict{String,#s857} where #s857}","page":"Internal API","title":"PowerSystems.ismultinetwork","text":"ismultinetwork(data::Dict{String,#s857} where #s857) -> Any\n\n\nchecks if a given network data is a multinetwork\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.iterate_rows-Tuple{PowerSystems.PowerSystemTableData,Any}","page":"Internal API","title":"PowerSystems.iterate_rows","text":"iterate_rows(data::PowerSystems.PowerSystemTableData, category::Any; na_to_nothing) -> Channel{Any}\n\n\nReturn a NamedTuple of parameters from the descriptor file for each row of a dataframe, making type conversions as necessary.\n\nRefer to the PowerSystems descriptor file for field names that will be created.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.load_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.load_csv_parser!","text":"load_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nload_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd loads to the System from the raw load data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.loadzone_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.loadzone_csv_parser!","text":"loadzone_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nloadzone_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd branches to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.make_bus-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.make_bus","text":"make_bus(bus_dict::Dict{String,Any}) -> Bus\n\n\nCreates a PowerSystems.Bus from a PowerSystems bus dictionary\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.make_generator-Tuple{PowerSystems.PowerSystemTableData,Any,Any,Any}","page":"Internal API","title":"PowerSystems.make_generator","text":"make_generator(data::PowerSystems.PowerSystemTableData, gen::Any, cost_colnames::Any, bus::Any) -> Any\n\n\nCreates a generator of any type.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.make_mixed_units!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.make_mixed_units!","text":"make_mixed_units!(data::Dict{String,#s855} where #s855)\n\n\nTransforms network data into mixed-units (inverse of per-unit)\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.make_per_unit!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.make_per_unit!","text":"make_per_unit!(data::Dict{String,#s855} where #s855)\n\n\nTransforms network data into per-unit\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.make_thermal_gen-Tuple{AbstractString,Dict,Bus,Number}","page":"Internal API","title":"PowerSystems.make_thermal_gen","text":"make_thermal_gen(gen_name::AbstractString, d::Dict, bus::Bus, sys_mbase::Number) -> ThermalStandard\n\n\nThe polynomial term follows the convention that for an n-degree polynomial, at least n + 1 components are needed.     c(p) = cn*p^n+...+c1p+c0     co is stored in the  field in of the Econ Struct\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.move_genfuel_and_gentype!-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.move_genfuel_and_gentype!","text":"move_genfuel_and_gentype!(data::Dict{String,Any})\n\n\nMove gentype and genfuel fields to be subfields of gen\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.parse_matpower-Tuple{IO}","page":"Internal API","title":"PowerSystems.parse_matpower","text":"parse_matpower(io::IO; validate) -> Dict{String,Any}\n\n\nParses the matpwer data from either a filename or an IO object\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.parse_psse-Tuple{IO}","page":"Internal API","title":"PowerSystems.parse_psse","text":"parse_psse(io::IO; kwargs...) -> Dict{String,Any}\n\n\nParses directly from iostream\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.parse_psse-Tuple{String}","page":"Internal API","title":"PowerSystems.parse_psse","text":"parse_psse(filename::String; kwargs...) -> Dict{String,Any}\n\n\nParses directly from file\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.parse_pti-Tuple{IO}","page":"Internal API","title":"PowerSystems.parse_pti","text":"parse_pti(io::IO) -> Dict{String,Array{Dict,N} where N}\n\n\nparse_pti(io::IO)\n\nReads PTI data in io::IO, returning a Dict of the data parsed into the proper types.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.parse_pti-Tuple{String}","page":"Internal API","title":"PowerSystems.parse_pti","text":"parse_pti(filename::String) -> Dict{String,Array{Dict,N} where N}\n\n\nparse_pti(filename::String)\n\nOpen PTI raw file given by filename, returning a Dict of the data parsed into the proper types.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.propagate_topology_status!-Tuple{Dict{String,#s855} where #s855}","page":"Internal API","title":"PowerSystems.propagate_topology_status!","text":"propagate_topology_status!(data::Dict{String,#s855} where #s855)\n\n\nfinds active network buses and branches that are not necessary for the computation and sets their status to off.\n\nWorks on a PowerModels data dict, so that a it can be used without a GenericPowerModel object\n\nWarning: this implementation has quadratic complexity, in the worst case\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.read_gen!-Tuple{System,Any,Dict{Int64,Bus}}","page":"Internal API","title":"PowerSystems.read_gen!","text":"read_gen!(sys::System, data::Any, bus_number_to_bus::Dict{Int64,Bus}; kwargs...)\n\n\nTransfer generators to ps_dict according to their classification\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.replicate-Tuple{Dict{String,#s854} where #s854,Int64}","page":"Internal API","title":"PowerSystems.replicate","text":"replicate(sn_data::Dict{String,#s854} where #s854, count::Int64; global_keys) -> Dict{String,Any}\n\n\nTurns in given single network data in multinetwork data with a count replicate of the given network.  Note that this function performs a deepcopy of the network data.  Significant multinetwork space savings can often be achieved by building application specific methods of building multinetwork with minimal data replication.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.row_to_dict-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems.row_to_dict","text":"row_to_dict(row_data::Any, columns::Any) -> Dict{String,Any}\n\n\ntakes a row from a matrix and assigns the values names\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.row_to_typed_dict-Tuple{Any,Any}","page":"Internal API","title":"PowerSystems.row_to_typed_dict","text":"row_to_typed_dict(row_data::Any, columns::Any) -> Dict{String,Any}\n\n\ntakes a row from a matrix and assigns the values names and types\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.select_largest_component-Tuple{Dict{String,Any}}","page":"Internal API","title":"PowerSystems.select_largest_component","text":"select_largest_component(data::Dict{String,Any}) -> Any\n\n\ndetermines the largest connected component of the network and turns everything else off\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.services_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"Internal API","title":"PowerSystems.services_csv_parser!","text":"services_csv_parser!(sys::System, data::PowerSystems.PowerSystemTableData)\n\n\nAdd services to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.set_branch!-Tuple{DynamicBranch,ACBranch}","page":"Internal API","title":"PowerSystems.set_branch!","text":"set_branch!(value::DynamicBranch, val::ACBranch) -> ACBranch\n\n\nSet branch\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.simplify_cost_terms!-Tuple{Dict{String,#s849} where #s849}","page":"Internal API","title":"PowerSystems.simplify_cost_terms!","text":"simplify_cost_terms!(data::Dict{String,#s849} where #s849) -> Tuple{Set{Int64},Set{Int64}}\n\n\ntrims zeros from higher order cost terms\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.split_line-Tuple{AbstractString}","page":"Internal API","title":"PowerSystems.split_line","text":"split_line(mp_line::AbstractString) -> Array{_A,1} where _A\n\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.standardize_cost_terms!-Tuple{Dict{String,#s844} where #s844}","page":"Internal API","title":"PowerSystems.standardize_cost_terms!","text":"standardize_cost_terms!(data::Dict{String,#s844} where #s844; order)\n\n\nensures all polynomial costs functions have the same number of terms\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.throw_if_not_attached-Tuple{Component,System}","page":"Internal API","title":"PowerSystems.throw_if_not_attached","text":"throw_if_not_attached(component::Component, sys::System)\n\n\nThrows ArgumentError if the component is not attached to the system.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.total_capacity_rating-Tuple{System}","page":"Internal API","title":"PowerSystems.total_capacity_rating","text":"total_capacity_rating(sys::System) -> Any\n\n\ntotal_capacity_rating(sys::System)\n\nSum of system generator and storage ratings.\n\nArguments\n\nsys::System: system\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.total_load_rating-Tuple{System}","page":"Internal API","title":"PowerSystems.total_load_rating","text":"total_load_rating(sys::System) -> Any\n\n\ntotal_load_rating(sys::System)\n\nChecks the system for sum(generator ratings) >= sum(load ratings).\n\nArguments\n\nsys::System: system\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSystems.validate_struct-Tuple{System,PowerSystemType}","page":"Internal API","title":"PowerSystems.validate_struct","text":"validate_struct(sys::System, value::PowerSystemType) -> Bool\n\n\nValidate an instance of a PowerSystemType against System data. Returns true if the instance is valid.\n\nUsers implementing this function for custom types should consider implementing InfrastructureSystems.validate_struct instead if the validation logic only requires data contained within the instance.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#FrequencyEstimator","page":"FrequencyEstimator","title":"FrequencyEstimator","text":"","category":"section"},{"location":"model_library/generated_FrequencyEstimator/#KauraPLL","page":"FrequencyEstimator","title":"KauraPLL","text":"","category":"section"},{"location":"model_library/generated_FrequencyEstimator/","page":"FrequencyEstimator","title":"FrequencyEstimator","text":"Modules = [PowerSystems]\nPages   = [\"/KauraPLL.jl\"]\nOrder = [:type, :function]\nPublic = true","category":"page"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.KauraPLL","page":"FrequencyEstimator","title":"PowerSystems.KauraPLL","text":"mutable struct KauraPLL <: FrequencyEstimator\n    Ï‰_lp::Float64\n    kp_pll::Float64\n    ki_pll::Float64\n    ext::Dict{String, Any}\n    states::Vector{Symbol}\n    n_states::Int\nend\n\nParameters of a Phase-Locked Loop (PLL) based on Kaura, Vikram, and Vladimir Blasko. \"Operation of a phase locked loop system under distorted utility conditions.\" IEEE Transactions on Industry applications 33.1 (1997): 58-63.\n\nArguments\n\nÏ‰_lp::Float64: PLL low-pass filter frequency (rad/sec), validation range: (0, nothing)\nkp_pll::Float64: PLL proportional gain, validation range: (0, nothing)\nki_pll::Float64: PLL integral gain, validation range: (0, nothing)\next::Dict{String, Any}\nstates::Vector{Symbol}: The states of the KauraPLL model are:\n\nvd_pll: d-axis of the measured voltage in the PLL synchronous reference frame (SRF),\nvq_pll: q-axis of the measured voltage in the PLL SRF,\nÎµ_pll: Integrator state of the PI controller,\nÎ¸_pll: Phase angle displacement in the PLL SRF\n\nn_states::Int: KauraPLL has 4 states\n\n\n\n\n\n","category":"type"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_ext-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_ext","text":"get_ext(value::KauraPLL) -> Dict{String,Any}\n\n\nGet KauraPLL ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_ki_pll-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_ki_pll","text":"get_ki_pll(value::KauraPLL) -> Float64\n\n\nGet KauraPLL ki_pll.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_kp_pll-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_kp_pll","text":"get_kp_pll(value::KauraPLL) -> Float64\n\n\nGet KauraPLL kp_pll.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_n_states-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_n_states","text":"get_n_states(value::KauraPLL) -> Int64\n\n\nGet KauraPLL n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_states-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_states","text":"get_states(value::KauraPLL) -> Array{Symbol,1}\n\n\nGet KauraPLL states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.get_Ï‰_lp-Tuple{KauraPLL}","page":"FrequencyEstimator","title":"PowerSystems.get_Ï‰_lp","text":"get_Ï‰_lp(value::KauraPLL) -> Float64\n\n\nGet KauraPLL Ï‰_lp.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_ext!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_ext!","text":"set_ext!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL ext.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_ki_pll!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_ki_pll!","text":"set_ki_pll!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL ki_pll.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_kp_pll!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_kp_pll!","text":"set_kp_pll!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL kp_pll.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_n_states!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_n_states!","text":"set_n_states!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL n_states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_states!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_states!","text":"set_states!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL states.\n\n\n\n\n\n","category":"method"},{"location":"model_library/generated_FrequencyEstimator/#PowerSystems.set_Ï‰_lp!-Tuple{KauraPLL,Any}","page":"FrequencyEstimator","title":"PowerSystems.set_Ï‰_lp!","text":"set_Ï‰_lp!(value::KauraPLL, val::Any) -> Any\n\n\nSet KauraPLL Ï‰_lp.\n\n\n\n\n\n","category":"method"}]
}
