var documenterSearchIndex = {"docs":
[{"location":"style/#Julia-Coding-Style-Guide-for-SIIP-1","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"section"},{"location":"style/#Goals-1","page":"Julia Coding Style Guide for SIIP","title":"Goals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Define a straightforward set of rules that lead to consistent, readable","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"code.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Developers focus on producing high quality code, not how to format it.","category":"page"},{"location":"style/#Base-1","page":"Julia Coding Style Guide for SIIP","title":"Base","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow the official","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Julia style guide except for deviations noted here.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow Julia contribution guidelines, notably its line length","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"limit.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow Julia guidelines for docstrings.\nFollow JuMP coding standards,","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"including its deviations from the Julia style guide.  In particular, note its policies on","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"whitespace\nreturn statements\nvariable names.\nRead The Zen of Python.\nConsider using a plugin that configures your text editor to use EditorConfig settings.","category":"page"},{"location":"style/#Code-Organization-1","page":"Julia Coding Style Guide for SIIP","title":"Code Organization","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Import standard modules, then 3rd-party modules, then yours. Include a blank","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"line between each group.","category":"page"},{"location":"style/#Modules:-TODO-1","page":"Julia Coding Style Guide for SIIP","title":"Modules:  TODO","text":"","category":"section"},{"location":"style/#Comments-1","page":"Julia Coding Style Guide for SIIP","title":"Comments","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use comments to describe non-obvious or non-trivial aspects of code.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Describe why something was done but not how.  The \"how\" should be apparent from the code itself.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use complete sentences and proper grammar.\nInclude a space in between the \"#\" and the first word of the comment.\nUse these tags in comments to describe known work:\nTODO:  tasks that need to be done\nFIXME:  code that needs refactoring\nBUG:  known bug that exists. Should include a bug ID and tracking system.\nPERF:  known performance limitation that needs improvement","category":"page"},{"location":"style/#Constructors-1","page":"Julia Coding Style Guide for SIIP","title":"Constructors","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Per guidance from Julia documentation, use inner constructors to enforce","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"restrictions on parameters or to allow construction of self-referential objects. Use outer constructors to provide default values or to perform customization.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Document the reason why the outer constructor is different.\nNote that the compiler will provide a default constructor with all struct","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"members if no inner constructor is defined.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"When creating a constructor use \"function Foo()\" instead of \"Foo() = ...\"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"One exception is the case where one file has all single-line functions.","category":"page"},{"location":"style/#Exceptions-1","page":"Julia Coding Style Guide for SIIP","title":"Exceptions","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use exceptions for unexpected errors and not for normal error handling.\nDetection of an unsupported data format from a user should likely throw","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"an exception and terminate the application.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not use try/catch to handle retrieving a potentially-missing key from a","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"dictionary.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use @assert statements to guard against programming errors. Do not use them","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"after detecting bad user input. Note that they may be compiled out in release builds.","category":"page"},{"location":"style/#Globals-1","page":"Julia Coding Style Guide for SIIP","title":"Globals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Global constants should use UPPER_CASE and be declared const.\nIf global variables are needed, prefix them with \"g_\".\nDon't use magic numbers. Instead, define const globals or Enums (Julia","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"@enum).","category":"page"},{"location":"style/#One-line-Conditionals-1","page":"Julia Coding Style Guide for SIIP","title":"One-line Conditionals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Julia code base uses this idiom frequently:  <cond> && <statement> Example:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function fact(n::Int)\n   n >= 0 || error(\"n must be non-negative\")\n   n == 0 && return 1\n   n * fact(n-1)\nend","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"This is acceptable for simple code as in this example. However, in general, prefer to write out an entire if statement.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Ternary operators provide a way to write clean, concise code.  Use good judgement.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"y = x > 0 ? x : -x","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"There are many examples in our codebase that use the form <cond> ? <statement> : <statement>.  These can be expressed much more clearly in an if/else statement.","category":"page"},{"location":"style/#Unit-Tests-1","page":"Julia Coding Style Guide for SIIP","title":"Unit Tests","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"All code should be tested.","category":"page"},{"location":"style/#Whitespace-1","page":"Julia Coding Style Guide for SIIP","title":"Whitespace","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"If many function arguments cause the line length to be exceeded, put one","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"argument per line. In some cases it may make sense to pair some variables on the same line.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function foo(var1::String,\n             var2::String,\n             var3::String,\n             var4::String,\n             var5::String,\n             var6::String)","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not surround equal signs with spaces when passing keyword args to a","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function or defining default values in function declarations.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not right-align equal signs when assigning groups of variables. It causes","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"unnecessary changes whenever someone adds a new variable with a longer name.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Bad:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"x   = 1\nfoo = 2","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"x = 1\nfoo = 2","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Define abstract types on one line. Given the lack of IDE support for Julia,","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"this makes it easier to find type definitions.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Bad:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"abstract type\n    Foo\nend","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"abstract type Foo end","category":"page"},{"location":"man/logging/#Logging-1","page":"Logging","title":"Logging","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"This document describes logging facilities available in the PowerSystems module. The examples assume the following imports:","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"import Logging\nimport PowerSystems: configure_logging, open_file_logger, MultiLogger, LogEventTracker","category":"page"},{"location":"man/logging/#Use-Cases-1","page":"Logging","title":"Use Cases","text":"","category":"section"},{"location":"man/logging/#Enable-logging-in-REPL-or-Jupyter-Notebook-1","page":"Logging","title":"Enable logging in REPL or Jupyter Notebook","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Use configure_logging to create a logger with your preferences (console and/or file, levels, etc.).","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Note: log messages are not automatically flushed to files. Call flush(logger) to make this happen.","category":"page"},{"location":"man/logging/#Example-1","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\nflush(logger)\n@error \"some error\"\nclose(logger)","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"The function provides lots of customization. Refer to the docstring for complete details.","category":"page"},{"location":"man/logging/#Log-to-console-and-file-in-an-application-or-unit-test-environment.-1","page":"Logging","title":"Log to console and file in an application or unit test environment.","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Create a MultiLogger from Logging.ConsoleLogger and Logging.SimpleLogger. Use open_file_logger to guarantee that all messages get flushed to the file.","category":"page"},{"location":"man/logging/#Example-2","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"console_logger = ConsoleLogger(stderr, Logging.Error)\n\nopen_file_logger(\"log.txt\", Logging.Info) do file_logger\n    multi_logger = MultiLogger([console_logger, file_logger])\n    global_logger(multi_logger)\n    \n    do_stuff()\nend","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Note: If someone may execute the code in the REPL then wrap that code in a try/finally block and reset the global logger upon exit.","category":"page"},{"location":"man/logging/#Example-3","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"function run_tests()\n    console_logger = ConsoleLogger(stderr, Logging.Error)\n    \n    open_file_logger(\"log.txt\", Logging.Info) do file_logger\n        multi_logger = MultiLogger([console_logger, file_logger])\n        global_logger(multi_logger)\n        \n        do_stuff()\n    end\nend\n\nlogger = global_logger()\n\ntry\n    run_tests()\nfinally\n    # Guarantee that the global logger is reset.\n    global_logger(logger)\n    nothing\nend","category":"page"},{"location":"man/logging/#Suppress-frequent-messages-1","page":"Logging","title":"Suppress frequent messages","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"The standard Logging module in Julia provides a method to suppress messages. Tag the log message with maxlog=X.","category":"page"},{"location":"man/logging/#Example-4","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"for i in range(1, length=100)\n    @error \"something happened\" i maxlog=2\nend","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Only 2 messages will get logged.","category":"page"},{"location":"man/logging/#Get-a-summary-of-log-messages-1","page":"Logging","title":"Get a summary of log messages","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"By default a MultiLogger creates a LogEventTracker that keeps counts of all messages. Call report_log_summary after execution.","category":"page"},{"location":"man/logging/#Example-5","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\n\n# Include a summary in the log file.\n@info report_log_summary(logger)\nclose(logger)","category":"page"},{"location":"man/logging/#Example-output-1","page":"Logging","title":"Example output","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"julia> for i in range(1, length=100)\n           @info \"hello\" maxlog=2\n           @warn \"beware\" maxlog=2\n       end\njulia> @info report_log_summary(logger)\n┌ Info:\n│ Log message summary:\n│\n│ 0 Error events:\n│\n│ 1 Warn events:\n│   count=100 at REPL[19]:3\n│     example message=\"beware\"\n│     suppressed=98\n│\n│ 1 Info events:\n│   count=100 at REPL[19]:2\n│     example message=\"hello\"\n└     suppressed=98","category":"page"},{"location":"man/tests/#Tests-1","page":"Tests","title":"Tests","text":"","category":"section"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Unit tests can be executed in the REPL by executing the following:","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"The unit test module supports several customizations to aid development and debug.","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Run a subset of tests in the REPL:","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> push!(ARGS, \"<test_filename_without_.jl>\")\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Change console logging level (defaults to Error):","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> ENV[\"PS_CONSOLE_LOG_LEVEL\"] = Info\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Change log file (./power-systems.log) logging level (defaults to Info):","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> ENV[\"PS_LOG_LEVEL\"] = Debug\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"The unit test module appends a summary of all log message counts to the log file.  If a message is logged too frequently then consider tagging that message with maxlog=X to suppress it.","category":"page"},{"location":"man/guide/#User-Guide-1","page":"User Guide","title":"User Guide","text":"","category":"section"},{"location":"man/guide/#Installation-1","page":"User Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"This package is not yet registered. Until it is, things may change. It is perfectly usable but should not be considered stable.","category":"page"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"You can install it by typing","category":"page"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"julia> Pkg.clone(\"https://github.com/NREL/PowerSystems.jl.git\")","category":"page"},{"location":"api/PowerSystems/#PowerSystems-1","page":"PowerSystems","title":"PowerSystems","text":"","category":"section"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"CurrentModule = PowerSystems\nDocTestSetup  = quote\n    using PowerSystems\nend","category":"page"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"API documentation","category":"page"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"Pages = [\"PowerSystems.md\"]","category":"page"},{"location":"api/PowerSystems/#Index-1","page":"PowerSystems","title":"Index","text":"","category":"section"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"Pages = [\"PowerSystems.md\"]","category":"page"},{"location":"api/PowerSystems/#Exported-1","page":"PowerSystems","title":"Exported","text":"","category":"section"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"Modules = [PowerSystems]\nPrivate = false","category":"page"},{"location":"api/PowerSystems/#PowerSystems.PowerSystems","page":"PowerSystems","title":"PowerSystems.PowerSystems","text":"Module for constructing self-contained power system objects.\n\n\n\n\n\n","category":"module"},{"location":"api/PowerSystems/#PowerSystems.Arc","page":"PowerSystems","title":"PowerSystems.Arc","text":"A topological Arc.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.Bus","page":"PowerSystems","title":"PowerSystems.Bus","text":"A power-system bus.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.Bus-Tuple{Any,Any,String,Any,Any,Any,Any}","page":"PowerSystems","title":"PowerSystems.Bus","text":"Allows construction with bus type specified as a string for legacy code.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.GeneratorCostModel","page":"PowerSystems","title":"PowerSystems.GeneratorCostModel","text":"From http://www.pserc.cornell.edu/matpower/MATPOWER-manual.pdf Table B-4\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.Line-Tuple{Any,Bool,Float64,Float64,Arc,Any,Any,Any,Any,Float64}","page":"PowerSystems","title":"PowerSystems.Line","text":"Accepts anglelimits as a Float64.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.PowerSystemType","page":"PowerSystems","title":"PowerSystems.PowerSystemType","text":"Supertype for all PowerSystems types. All subtypes must include a InfrastructureSystemsInternal member. Subtypes should call InfrastructureSystemsInternal() by default, but also must provide a constructor that allows existing values to be deserialized.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.ProportionalReserve","page":"PowerSystems","title":"PowerSystems.ProportionalReserve","text":"Data Structure for a proportional reserve product for system simulations.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.RenewableDispatch-Tuple{String,Bool,Bus,Float64,Float64,PowerSystems.PrimeMovers,Float64,TwoPartCost}","page":"PowerSystems","title":"PowerSystems.RenewableDispatch","text":"Accepts rating as a Float64 and then creates a TechRenewable.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.RenewableFix-Tuple{String,Bool,Bus,Float64,Float64,PowerSystems.PrimeMovers,Float64}","page":"PowerSystems","title":"PowerSystems.RenewableFix","text":"Accepts rating as a Float64 and then creates a TechRenewable.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.StaticReserve","page":"PowerSystems","title":"PowerSystems.StaticReserve","text":"Data Structure for the procurement products for system simulations.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.System","page":"PowerSystems","title":"PowerSystems.System","text":"System\n\nA power system defined by fields for basepower, components, and forecasts.\n\n# Constructor\n```julia\nSystem(basepower)\nSystem(components, forecasts, basepower)\nSystem(buses, generators, loads, branches, storage, basepower, forecasts, services, annex; kwargs...)\nSystem(buses, generators, loads, basepower; kwargs...)\nSystem(file; kwargs...)\nSystem(; buses, generators, loads, branches, storage, basepower, forecasts, services, annex, kwargs...)\nSystem(; kwargs...)\n```\n\n# Arguments\n\n* `buses`::Vector{Bus} : an array of buses\n* `generators`::Vector{Generator} : an array of generators of (possibly) different types\n* `loads`::Vector{ElectricLoad} : an array of load specifications that includes timing of the loads\n* `branches`::Union{Nothing, Vector{Branch}} : an array of branches; may be `nothing`\n* `storage`::Union{Nothing, Vector{Storage}} : an array of storage devices; may be `nothing`\n* `basepower`::Float64 : the base power value for the system\n* `forecasts`::Union{Nothing, IS.Forecasts} : dictionary of forecasts\n* `services`::Union{Nothing, Vector{ <: Service}} : an array of services; may be `nothing`\n\n# Keyword arguments\n\n* `runchecks`::Bool : run available checks on input fields. If an error is found in a field, that component will not be added to the system and InvalidRange is thrown.\n* `configpath`::String : specify path to validation config file\nDOCTODO: any other keyword arguments? genmap_file, REGEX_FILE\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{Any}","page":"PowerSystems","title":"PowerSystems.System","text":"Construct an empty System. Useful for building a System while parsing raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{Array{Bus,1},Array{#s124,1} where #s124<:Generator,Array{#s123,1} where #s123<:ElectricLoad,Float64}","page":"PowerSystems","title":"PowerSystems.System","text":"System constructor without nothing-able arguments.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{Array{Bus,1},Array{#s124,1} where #s124<:Generator,Array{#s125,1} where #s125<:ElectricLoad,Union{Nothing, Array{#s126,1} where #s126<:Branch},Union{Nothing, Array{#s127,1} where #s127<:Storage},Float64,Union{Nothing, InfrastructureSystems.Forecasts},Union{Nothing, Array{#s128,1} where #s128<:Service},Union{Nothing, Dict}}","page":"PowerSystems","title":"PowerSystems.System","text":"System constructor when components are constructed externally.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{Nothing}","page":"PowerSystems","title":"PowerSystems.System","text":"Constructs a non-functional System for demo purposes.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.System","text":"System(data::PowerSystemTableData)\n\nConstruct a System from PowerSystemTableData data.\n\nArguments\n\nforecast_resolution::Union{DateTime, Nothing}=nothing: only store forecasts that match this resolution.\n\nThrows DataFormatError if forecasts with multiple resolutions are detected.\n\nA component-label pair is not unique within a forecast array.\nA forecast has a different resolution than others.\nA forecast has a different horizon than others.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{String}","page":"PowerSystems","title":"PowerSystems.System","text":"Constructs a System from a JSON file.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.System-Tuple{}","page":"PowerSystems","title":"PowerSystems.System","text":"System constructor with keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.TechThermal","page":"PowerSystems","title":"PowerSystems.TechThermal","text":"Data Structure for the technical parameters of thermal generation technologies.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.ThermalStandard","page":"PowerSystems","title":"PowerSystems.ThermalStandard","text":"Data Structure for thermal generation technologies.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.ThreePartCost","page":"PowerSystems","title":"PowerSystems.ThreePartCost","text":"Data Structure Operational Cost Data in Three parts fixed, variable cost and start - stop costs.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.ThreePartCost-Union{Tuple{T}, Tuple{T,Vararg{Any,N} where N}} where T<:Union{Float64, Tuple{Float64,Float64}, Array{Tuple{Float64,Float64},1}}","page":"PowerSystems","title":"PowerSystems.ThreePartCost","text":"Accepts rating as a Float64 and then creates a ThreePartCost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.Transformer2W","page":"PowerSystems","title":"PowerSystems.Transformer2W","text":"The 2-W transformer model uses an equivalent circuit assuming the impedance is on the High Voltage Side of the transformer. The model allocates the iron losses and magnetizing susceptance to the primary side.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.TwoPartCost","page":"PowerSystems","title":"PowerSystems.TwoPartCost","text":"Data Structure Operational Cost Data in two parts fixed and variable cost.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.TwoPartCost-Union{Tuple{T}, Tuple{T,Vararg{Any,N} where N}} where T<:Union{Float64, Tuple{Float64,Float64}, Array{Tuple{Float64,Float64},1}}","page":"PowerSystems","title":"PowerSystems.TwoPartCost","text":"Accepts rating as a Float64 and then creates a TwoPartCost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.VSCDCLine","page":"PowerSystems","title":"PowerSystems.VSCDCLine","text":"As implemented in Milano&#39;s Book, Page 397\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.add_component!-Union{Tuple{T}, Tuple{System,T}} where T<:Component","page":"PowerSystems","title":"PowerSystems.add_component!","text":"add_component!(sys::System, component::T; kwargs...) where T <: Component\n\nAdd a component to the system.\n\nThrows ArgumentError if the component's name is already stored for its concrete type.\n\nThrows InvalidRange if any of the component's field values are outside of defined valid range.\n\nExamples\n\nsys = System(100.0)\n\n# Add a single component.\nadd_component!(sys, bus)\n\n# Add many at once.\nbuses = [bus1, bus2, bus3]\ngenerators = [gen1, gen2, gen3]\nforeach(x -> add_component!(sys, x), Iterators.flatten((buses, generators)))\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.add_forecast!","page":"PowerSystems","title":"PowerSystems.add_forecast!","text":"add_forecast!(\n              sys::System,\n              filename::AbstractString,\n              component::Component,\n              label::AbstractString,\n              scaling_factor::Union{String, Float64}=1.0,\n             )\n\nAdd a forecast to a system from a CSV file.\n\nSee InfrastructureSystems.TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems.add_forecast!","page":"PowerSystems","title":"PowerSystems.add_forecast!","text":"add_forecast!(\n              sys::System,\n              df::DataFrames.DataFrame,\n              component,\n              label,\n              scaling_factor::Union{String, Float64}=1.0,\n             )\n\nAdd a forecast to a system from a DataFrames.DataFrame.\n\nSee InfrastructureSystems.TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems.add_forecast!","page":"PowerSystems","title":"PowerSystems.add_forecast!","text":"add_forecast!(\n              sys::System,\n              ta::TimeSeries.TimeArray,\n              component,\n              label,\n              scaling_factor::Union{String, Float64}=1.0,\n             )\n\nAdd a forecast to a system from a TimeSeries.TimeArray.\n\nSee InfrastructureSystems.TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems.add_forecast!-Tuple{System,Any}","page":"PowerSystems","title":"PowerSystems.add_forecast!","text":"add_forecast!(sys::System, forecast)\n\nAdds forecast to the system.\n\nArguments\n\nsys::System: system\nforecast: Any object of subtype forecast\n\nThrows ArgumentError if the forecast's component is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.add_forecasts!-Tuple{System,Any}","page":"PowerSystems","title":"PowerSystems.add_forecasts!","text":"add_forecasts!(sys::System, forecasts)\n\nAdd forecasts to the system.\n\nArguments\n\nsys::System: system\nforecasts: iterable (array, iterator, etc.) of Forecast values\n\nThrows DataFormatError if\n\nA component-label pair is not unique within a forecast array.\nA forecast has a different resolution than others.\nA forecast has a different horizon than others.\n\nThrows ArgumentError if the forecast's component is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.add_forecasts!-Tuple{System,Union{AbstractString, Array{InfrastructureSystems.TimeseriesFileMetadata,1}}}","page":"PowerSystems","title":"PowerSystems.add_forecasts!","text":"add_forecasts!(\n               sys::System,\n               metadata::Union{AbstractString, Vector{IS.TimeseriesFileMetadata}};\n               resolution=nothing,\n              )\n\nAdds forecasts from a metadata file or metadata descriptors.\n\nArguments\n\nsys::System: system\nmetadata::Union{AbstractString, Vector{IS.TimeseriesFileMetadata}}: metdata filename that includes an array of IS.TimeseriesFileMetadata instances or a vector.\nresolution::DateTime.Period=nothing: skip forecast that don't match this resolution.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.clear_forecasts!-Tuple{System}","page":"PowerSystems","title":"PowerSystems.clear_forecasts!","text":"clear_forecasts!(sys::System)\n\nRemove all forecasts from the system.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_Y-Tuple{FixedAdmittance}","page":"PowerSystems","title":"PowerSystems.get_Y","text":"Get FixedAdmittance Y.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get GenericBattery activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get HydroDispatch activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get HydroFix activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get HydroStorage activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get InterruptibleLoad activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get PowerLoad activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get RenewableDispatch activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get RenewableFix activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_activepower","text":"Get ThermalStandard activepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get HVDCLine activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get Line activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get MonitoredLine activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get PhaseShiftingTransformer activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get TapTransformer activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get Transformer2W activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepower_flow-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_activepower_flow","text":"Get VSCDCLine activepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepowerlimits-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_activepowerlimits","text":"Get TechHydro activepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepowerlimits-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_activepowerlimits","text":"Get TechThermal activepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepowerlimits_from-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_activepowerlimits_from","text":"Get HVDCLine activepowerlimits_from.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_activepowerlimits_to-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_activepowerlimits_to","text":"Get HVDCLine activepowerlimits_to.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_angle-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_angle","text":"Get Bus angle.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_anglelimits-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_anglelimits","text":"Get Line anglelimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_anglelimits-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_anglelimits","text":"Get MonitoredLine anglelimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get HVDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get Line arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get MonitoredLine arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get PhaseShiftingTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get TapTransformer arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get Transformer2W arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_arc-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_arc","text":"Get VSCDCLine arc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{FixedAdmittance}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get FixedAdmittance available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get GenericBattery available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get HVDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get HydroDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get HydroFix available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get HydroStorage available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get InterruptibleLoad available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get Line available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get MonitoredLine available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get PhaseShiftingTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get PowerLoad available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get RenewableDispatch available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get RenewableFix available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get TapTransformer available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get ThermalStandard available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get Transformer2W available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_available-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_available","text":"Get VSCDCLine available.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_b-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_b","text":"Get Line b.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_b-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_b","text":"Get MonitoredLine b.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_basevoltage-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_basevoltage","text":"Get Bus basevoltage.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{FixedAdmittance}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get FixedAdmittance bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get GenericBattery bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get HydroDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get HydroFix bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get HydroStorage bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get InterruptibleLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get PowerLoad bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get RenewableDispatch bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get RenewableFix bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bus-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_bus","text":"Get ThermalStandard bus.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_buses-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_buses","text":"Get LoadZones buses.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_buses-Tuple{System,Set{Int64}}","page":"PowerSystems","title":"PowerSystems.get_buses","text":"get_buses(sys::System, bus_numbers::Set{Int})\n\nReturn all buses values with bus_numbers.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_bustype-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_bustype","text":"Get Bus bustype.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_capacity-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_capacity","text":"Get GenericBattery capacity.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_component-Union{Tuple{T}, Tuple{Type{T},System,AbstractString}} where T<:Component","page":"PowerSystems","title":"PowerSystems.get_component","text":"get_component(\n              ::Type{T},\n              sys::System,\n              name::AbstractString\n             )::Union{T, Nothing} where {T <: Component}\n\nGet the component of concrete type T with name. Returns nothing if no component matches.\n\nSee get_components_by_name if the concrete type is unknown.\n\nThrows ArgumentError if T is not a concrete type.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_component_forecasts-Union{Tuple{T}, Tuple{Type{T},System,Dates.DateTime}} where T<:Component","page":"PowerSystems","title":"PowerSystems.get_component_forecasts","text":"get_component_forecasts(\n                        ::Type{T},\n                        sys::System,\n                        initial_time::Dates.DateTime,\n                        ) where T <: Component\n\nGet the forecasts of a component of type T with initial_time.     The resulting container can contain Forecasts of dissimilar types.\n\nThrows ArgumentError if T is not a concrete type.\n\nSee also: get_component\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_components-Union{Tuple{T}, Tuple{Type{T},System}} where T<:Component","page":"PowerSystems","title":"PowerSystems.get_components","text":"get_components(\n               ::Type{T},\n               sys::System,\n              )::FlattenIteratorWrapper{T} where {T <: Component}\n\nReturns an iterator of components. T can be concrete or abstract. Call collect on the result if an array is desired.\n\nExamples\n\niter = PowerSystems.get_components(ThermalStandard, sys)\niter = PowerSystems.get_components(Generator, sys)\ngenerators = PowerSystems.get_components(Generator, sys) |> collect\ngenerators = collect(PowerSystems.get_components(Generator, sys))\n\nSee also: iterate_components\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_components_by_name-Union{Tuple{T}, Tuple{Type{T},System,AbstractString}} where T<:Component","page":"PowerSystems","title":"PowerSystems.get_components_by_name","text":"get_components_by_name(\n                       ::Type{T},\n                       sys::System,\n                       name::AbstractString\n                      )::Vector{T} where {T <: Component}\n\nGet the components of abstract type T with name. Note that PowerSystems enforces unique names on each concrete type but not across concrete types.\n\nSee get_component if the concrete type is known.\n\nThrows ArgumentError if T is not an abstract type.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_contributingdevices-Tuple{ProportionalReserve}","page":"PowerSystems","title":"PowerSystems.get_contributingdevices","text":"Get ProportionalReserve contributingdevices.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_contributingdevices-Tuple{StaticReserve}","page":"PowerSystems","title":"PowerSystems.get_contributingdevices","text":"Get StaticReserve contributingdevices.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_contributingdevices-Tuple{Transfer}","page":"PowerSystems","title":"PowerSystems.get_contributingdevices","text":"Get Transfer contributingdevices.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_efficiency-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_efficiency","text":"Get GenericBattery efficiency.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_energy-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_energy","text":"Get GenericBattery energy.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_fixed-Tuple{ThreePartCost}","page":"PowerSystems","title":"PowerSystems.get_fixed","text":"Get ThreePartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_fixed-Tuple{TwoPartCost}","page":"PowerSystems","title":"PowerSystems.get_fixed","text":"Get TwoPartCost fixed.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_flowlimits-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_flowlimits","text":"Get MonitoredLine flowlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecast_initial_times-Tuple{System}","page":"PowerSystems","title":"PowerSystems.get_forecast_initial_times","text":"get_forecast_initial_times(sys::System)::Vector{Dates.DateTime}\n\nReturn sorted forecast initial times.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts-Union{Tuple{T}, Tuple{Type{T},System,Dates.DateTime,Any}, Tuple{Type{T},System,Dates.DateTime,Any,Union{Nothing, String}}} where T<:Forecast","page":"PowerSystems","title":"PowerSystems.get_forecasts","text":"get_forecasts(\n              ::Type{T},\n              sys::System,\n              initial_time::Dates.DateTime,\n              components_iterator,\n              label::Union{String, Nothing}=nothing,\n             )::Vector{Forecast}\n\nArguments\n\nforecasts::Forecasts: system\ninitial_time::Dates.DateTime: time designator for the forecast\ncomponents_iter: iterable (array, iterator, etc.) of Component values\nlabel::Union{String, Nothing}: forecast label or nothing\n\nReturn forecasts that match the components and label.\n\nThis method is slower than the first version because it has to compare components and label as well as build a new vector.\n\nThrows ArgumentError if eltype(components_iterator) is a concrete type and no forecast is found for a component.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts-Union{Tuple{T}, Tuple{Type{T},System,Dates.DateTime}} where T<:Forecast","page":"PowerSystems","title":"PowerSystems.get_forecasts","text":"get_forecasts(::Type{T}, sys::System, initial_time::Dates.DateTime)\n\nReturn an iterator of forecasts. T can be concrete or abstract.\n\nCall collect on the result if an array is desired.\n\nThis method is fast and efficient because it returns an iterator to existing vectors.\n\nExamples\n\niter = PowerSystems.get_forecasts(Deterministic{RenewableFix}, sys, initial_time)\niter = PowerSystems.get_forecasts(Forecast, sys, initial_time)\nforecasts = PowerSystems.get_forecasts(Forecast, sys, initial_time) |> collect\nforecasts = collect(PowerSystems.get_forecasts(Forecast, sys))\n\nSee also: iterate_forecasts\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts_horizon-Tuple{System}","page":"PowerSystems","title":"PowerSystems.get_forecasts_horizon","text":"get_forecasts_horizon(sys::System)\n\nReturn the horizon for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts_initial_time-Tuple{System}","page":"PowerSystems","title":"PowerSystems.get_forecasts_initial_time","text":"get_forecasts_initial_time(sys::System)\n\nReturn the earliest initial_time for a forecast.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts_interval-Tuple{System}","page":"PowerSystems","title":"PowerSystems.get_forecasts_interval","text":"get_forecasts_interval(sys::System)\n\nReturn the interval for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_forecasts_resolution-Tuple{System}","page":"PowerSystems","title":"PowerSystems.get_forecasts_resolution","text":"get_forecasts_resolution(sys::System)\n\nReturn the resolution for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_from-Tuple{Arc}","page":"PowerSystems","title":"PowerSystems.get_from","text":"Get Arc from.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_fuel-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_fuel","text":"Get TechThermal fuel.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_initial_storage-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_initial_storage","text":"Get HydroStorage initial_storage.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_inputactivepowerlimits-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_inputactivepowerlimits","text":"Get GenericBattery inputactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{Arc}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get Arc internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get Bus internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{FixedAdmittance}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get FixedAdmittance internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get GenericBattery internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get HVDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get HydroDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get HydroFix internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get HydroStorage internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get InterruptibleLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get Line internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get LoadZones internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get MonitoredLine internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get PhaseShiftingTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get PowerLoad internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{ProportionalReserve}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get ProportionalReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get RenewableDispatch internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get RenewableFix internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{StaticReserve}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get StaticReserve internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get TapTransformer internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get TechHydro internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{TechRenewable}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get TechRenewable internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get TechThermal internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get ThermalStandard internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{ThreePartCost}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get ThreePartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{Transfer}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get Transfer internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get Transformer2W internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{TwoPartCost}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get TwoPartCost internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_internal-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_internal","text":"Get VSCDCLine internal.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_inverter_firing_angle-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_inverter_firing_angle","text":"Get VSCDCLine inverterfiringangle.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_inverter_taplimits-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_inverter_taplimits","text":"Get VSCDCLine inverter_taplimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_inverter_xrc-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_inverter_xrc","text":"Get VSCDCLine inverter_xrc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_loss-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_loss","text":"Get HVDCLine loss.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxactivepower-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_maxactivepower","text":"Get InterruptibleLoad maxactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxactivepower-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_maxactivepower","text":"Get LoadZones maxactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxactivepower-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_maxactivepower","text":"Get PowerLoad maxactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxreactivepower-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_maxreactivepower","text":"Get InterruptibleLoad maxreactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxreactivepower-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_maxreactivepower","text":"Get LoadZones maxreactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_maxreactivepower-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_maxreactivepower","text":"Get PowerLoad maxreactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_model-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_model","text":"Get InterruptibleLoad model.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_model-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_model","text":"Get PowerLoad model.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get Bus name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{FixedAdmittance}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get FixedAdmittance name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get GenericBattery name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get HVDCLine name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get HydroDispatch name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get HydroFix name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get HydroStorage name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get InterruptibleLoad name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get Line name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get LoadZones name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get MonitoredLine name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get PhaseShiftingTransformer name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get PowerLoad name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{ProportionalReserve}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get ProportionalReserve name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get RenewableDispatch name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get RenewableFix name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{StaticReserve}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get StaticReserve name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get TapTransformer name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get ThermalStandard name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{Transfer}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get Transfer name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get Transformer2W name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_name-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_name","text":"Get VSCDCLine name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_number-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_number","text":"Get Bus number.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_number-Tuple{LoadZones}","page":"PowerSystems","title":"PowerSystems.get_number","text":"Get LoadZones number.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_op_cost-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_op_cost","text":"Get HydroDispatch op_cost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_op_cost-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_op_cost","text":"Get HydroStorage op_cost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_op_cost-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_op_cost","text":"Get InterruptibleLoad op_cost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_op_cost-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_op_cost","text":"Get RenewableDispatch op_cost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_op_cost-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_op_cost","text":"Get ThermalStandard op_cost.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_outputactivepowerlimits-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_outputactivepowerlimits","text":"Get GenericBattery outputactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_powerfactor-Tuple{TechRenewable}","page":"PowerSystems","title":"PowerSystems.get_powerfactor","text":"Get TechRenewable powerfactor.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primaryshunt-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_primaryshunt","text":"Get PhaseShiftingTransformer primaryshunt.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primaryshunt-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_primaryshunt","text":"Get TapTransformer primaryshunt.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primaryshunt-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_primaryshunt","text":"Get Transformer2W primaryshunt.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primemover-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_primemover","text":"Get GenericBattery primemover.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primemover-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_primemover","text":"Get TechHydro primemover.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primemover-Tuple{TechRenewable}","page":"PowerSystems","title":"PowerSystems.get_primemover","text":"Get TechRenewable primemover.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_primemover-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_primemover","text":"Get TechThermal primemover.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_r-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_r","text":"Get Line r.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_r-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_r","text":"Get MonitoredLine r.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_r-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_r","text":"Get PhaseShiftingTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_r-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_r","text":"Get TapTransformer r.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_r-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_r","text":"Get Transformer2W r.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_ramplimits-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_ramplimits","text":"Get TechHydro ramplimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_ramplimits-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_ramplimits","text":"Get TechThermal ramplimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rate-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_rate","text":"Get Line rate.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rate-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_rate","text":"Get MonitoredLine rate.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rate-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_rate","text":"Get PhaseShiftingTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rate-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_rate","text":"Get TapTransformer rate.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rate-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_rate","text":"Get Transformer2W rate.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rating-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_rating","text":"Get GenericBattery rating.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rating-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_rating","text":"Get TechHydro rating.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rating-Tuple{TechRenewable}","page":"PowerSystems","title":"PowerSystems.get_rating","text":"Get TechRenewable rating.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rating-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_rating","text":"Get TechThermal rating.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get GenericBattery reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get HydroDispatch reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get HydroFix reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get HydroStorage reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{InterruptibleLoad}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get InterruptibleLoad reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{PowerLoad}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get PowerLoad reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get RenewableDispatch reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get RenewableFix reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_reactivepower","text":"Get ThermalStandard reactivepower.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower_flow-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_reactivepower_flow","text":"Get Line reactivepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower_flow-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_reactivepower_flow","text":"Get MonitoredLine reactivepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower_flow-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_reactivepower_flow","text":"Get PhaseShiftingTransformer reactivepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower_flow-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_reactivepower_flow","text":"Get TapTransformer reactivepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepower_flow-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_reactivepower_flow","text":"Get Transformer2W reactivepower_flow.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits-Tuple{GenericBattery}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits","text":"Get GenericBattery reactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits","text":"Get TechHydro reactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits-Tuple{TechRenewable}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits","text":"Get TechRenewable reactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits","text":"Get TechThermal reactivepowerlimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits_from-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits_from","text":"Get HVDCLine reactivepowerlimits_from.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_reactivepowerlimits_to-Tuple{HVDCLine}","page":"PowerSystems","title":"PowerSystems.get_reactivepowerlimits_to","text":"Get HVDCLine reactivepowerlimits_to.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rectifier_firing_angle-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_rectifier_firing_angle","text":"Get VSCDCLine rectifierfiringangle.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rectifier_taplimits-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_rectifier_taplimits","text":"Get VSCDCLine rectifier_taplimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_rectifier_xrc-Tuple{VSCDCLine}","page":"PowerSystems","title":"PowerSystems.get_rectifier_xrc","text":"Get VSCDCLine rectifier_xrc.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_requirement-Tuple{StaticReserve}","page":"PowerSystems","title":"PowerSystems.get_requirement","text":"Get StaticReserve requirement.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_requirement-Tuple{Transfer}","page":"PowerSystems","title":"PowerSystems.get_requirement","text":"Get Transfer requirement.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_shutdn-Tuple{ThreePartCost}","page":"PowerSystems","title":"PowerSystems.get_shutdn","text":"Get ThreePartCost shutdn.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_startup-Tuple{ThreePartCost}","page":"PowerSystems","title":"PowerSystems.get_startup","text":"Get ThreePartCost startup.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_storagecapacity-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_storagecapacity","text":"Get HydroStorage storagecapacity.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tap-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_tap","text":"Get PhaseShiftingTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tap-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_tap","text":"Get TapTransformer tap.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{HydroDispatch}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get HydroDispatch tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{HydroFix}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get HydroFix tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{HydroStorage}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get HydroStorage tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{RenewableDispatch}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get RenewableDispatch tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{RenewableFix}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get RenewableFix tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_tech-Tuple{ThermalStandard}","page":"PowerSystems","title":"PowerSystems.get_tech","text":"Get ThermalStandard tech.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_timeframe-Tuple{ProportionalReserve}","page":"PowerSystems","title":"PowerSystems.get_timeframe","text":"Get ProportionalReserve timeframe.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_timeframe-Tuple{StaticReserve}","page":"PowerSystems","title":"PowerSystems.get_timeframe","text":"Get StaticReserve timeframe.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_timeframe-Tuple{Transfer}","page":"PowerSystems","title":"PowerSystems.get_timeframe","text":"Get Transfer timeframe.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_timelimits-Tuple{TechHydro}","page":"PowerSystems","title":"PowerSystems.get_timelimits","text":"Get TechHydro timelimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_timelimits-Tuple{TechThermal}","page":"PowerSystems","title":"PowerSystems.get_timelimits","text":"Get TechThermal timelimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_to-Tuple{Arc}","page":"PowerSystems","title":"PowerSystems.get_to","text":"Get Arc to.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_variable-Tuple{ThreePartCost}","page":"PowerSystems","title":"PowerSystems.get_variable","text":"Get ThreePartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_variable-Tuple{TwoPartCost}","page":"PowerSystems","title":"PowerSystems.get_variable","text":"Get TwoPartCost variable.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_voltage-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_voltage","text":"Get Bus voltage.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_voltagelimits-Tuple{Bus}","page":"PowerSystems","title":"PowerSystems.get_voltagelimits","text":"Get Bus voltagelimits.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_x-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.get_x","text":"Get Line x.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_x-Tuple{MonitoredLine}","page":"PowerSystems","title":"PowerSystems.get_x","text":"Get MonitoredLine x.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_x-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_x","text":"Get PhaseShiftingTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_x-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.get_x","text":"Get TapTransformer x.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_x-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.get_x","text":"Get Transformer2W x.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_α-Tuple{PhaseShiftingTransformer}","page":"PowerSystems","title":"PowerSystems.get_α","text":"Get PhaseShiftingTransformer α.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.iterate_components-Tuple{System}","page":"PowerSystems","title":"PowerSystems.iterate_components","text":"iterate_components(sys::System)\n\nIterates over all components.\n\nExamples\n\nfor component in iterate_components(sys)\n    @show component\nend\n\nSee also: get_components\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.iterate_forecasts-Tuple{System}","page":"PowerSystems","title":"PowerSystems.iterate_forecasts","text":"iterate_forecasts(sys::System)\n\nIterates over all forecasts in order of initial time.\n\nExamples\n\nfor forecast in iterate_forecasts(sys)\n    @show forecast\nend\n\nSee also: get_forecasts\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_forecasts-Tuple{System,AbstractString}","page":"PowerSystems","title":"PowerSystems.make_forecasts","text":"make_forecasts(sys::System, metadata_file::AbstractString; resolution=nothing)\n\nReturn a vector of forecasts from a metadata file.\n\nArguments\n\ndata::SystemData: system\nmetadata_file::AbstractString: path to metadata file\nresolution::{Nothing, Dates.Period}: skip any forecasts that don't match this resolution\n\nSee InfrastructureSystems.TimeseriesFileMetadata for description of what the file should contain.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_forecasts-Tuple{System,Array{InfrastructureSystems.TimeseriesFileMetadata,1}}","page":"PowerSystems","title":"PowerSystems.make_forecasts","text":"make_forecasts(data::SystemData, timeseries_metadata::Vector{TimeseriesFileMetadata};\n               resolution=nothing)\n\nReturn a vector of forecasts from a vector of TimeseriesFileMetadata values.\n\nArguments\n\ndata::SystemData: system\ntimeseries_metadata::Vector{TimeseriesFileMetadata}: metadata values\nresolution::{Nothing, Dates.Period}: skip any forecasts that don't match this resolution\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_pf-Tuple{Any}","page":"PowerSystems","title":"PowerSystems.make_pf","text":"make_pf(sys)\n\nCreate the objects needed to solve an powerflow case using NLsolve.jl solvers. Returns an anonymous function with the powerflow equations, initial conditions and a dict to link the solutions to the original system. Only supports systems with a single generator per bus and currently doesn't support distributed slack buses and doesn't enforce reactive power limits.\n\nExample\n\npf!, x0 = make_pf(sys)\nres = NLsolve.nlsolve(pf!, x0)\n\nArguments\n\n* `sys`::System : a PowerSystems.jl system\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_file-Tuple{IO}","page":"PowerSystems","title":"PowerSystems.parse_file","text":"Parses the iostream from a file\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_standard_files-Tuple{String}","page":"PowerSystems","title":"PowerSystems.parse_standard_files","text":"Create a System by parsing power-system parameters from a Matpower, PTI, or JSON file and do some data checks.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.remove_component!-Tuple{System,Any}","page":"PowerSystems","title":"PowerSystems.remove_component!","text":"remove_component!(sys::System, component::T) where T <: Component\n\nRemove a component from the system by its value.\n\nThrows ArgumentError if the component is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.remove_component!-Union{Tuple{T}, Tuple{Type{T},System,AbstractString}} where T<:Component","page":"PowerSystems","title":"PowerSystems.remove_component!","text":"remove_component!(\n                  ::Type{T},\n                  sys::System,\n                  name::AbstractString,\n                  ) where T <: Component\n\nRemove a component from the system by its name.\n\nThrows ArgumentError if the component is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.remove_components!-Union{Tuple{T}, Tuple{Type{T},System}} where T<:Component","page":"PowerSystems","title":"PowerSystems.remove_components!","text":"remove_components!(::Type{T}, sys::System) where T <: Component\n\nRemove all components of type T from the system.\n\nThrows ArgumentError if the type is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.remove_forecast!-Tuple{System,Forecast}","page":"PowerSystems","title":"PowerSystems.remove_forecast!","text":"remove_forecast(sys::System, forecast::Forecast)\n\nRemove the forecast from the system.\n\nThrows ArgumentError if the forecast is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.solve_powerflow!-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems.solve_powerflow!","text":"solve_powerflow!(sys, solve_function, args...)\n\nSolves a the power flow into the system and writes the solution into the relevant structs. Updates generators active and reactive power setpoints and branches active and reactive power flows (calculated in the From - To direction) (see flow_val)\n\nRequires loading NLsolve.jl to run. Internally it uses the makepf (see [makepf](@ref)) to create the problem and solve it. As a result it doesn't enforce reactivepower limits.\n\nSupports passing NLsolve kwargs in the args. By default shows the solver trace.\n\nArguments available for nlsolve:\n\nmethod : See NLSolve.jl documentation for available solvers\nxtol: norm difference in x between two successive iterates under which convergence is declared. Default: 0.0.\nftol: infinite norm of residuals under which convergence is declared. Default: 1e-8.\niterations: maximum number of iterations. Default: 1_000.\nstore_trace: should a trace of the optimization algorithm's state be stored? Default: false.\nshow_trace: should a trace of the optimization algorithm's state be shown on STDOUT? Default: false.\nextended_trace: should additifonal algorithm internals be added to the state trace? Default: false.\n\nExamples\n\nusing NLsolve\nsolve_powerflow!(sys, nlsolve)\n# Passing NLsolve arguments\nsolve_powerflow!(sys, nlsolve, method = :Newton)\n\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.split_forecasts!-Union{Tuple{T}, Tuple{System,InfrastructureSystems.FlattenIteratorWrapper{T},Dates.Period,Int64}} where T<:Forecast","page":"PowerSystems","title":"PowerSystems.split_forecasts!","text":"split_forecasts!(\n                 sys::System,\n                 forecasts::FlattenIteratorWrapper{T}, # must be an iterable\n                 interval::Dates.Period,\n                 horizon::Int,\n                ) where T <: Forecast\n\nReplaces system forecasts with a set of forecasts by incrementing through an iterable set of forecasts by interval and horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.to_json-Tuple{IO,System}","page":"PowerSystems","title":"PowerSystems.to_json","text":"to_json(io::IO, sys::System)\n\nSerializes a system an IO stream in JSON.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.to_json-Tuple{System,AbstractString}","page":"PowerSystems","title":"PowerSystems.to_json","text":"to_json(sys::System, filename::AbstractString)\n\nSerializes a system to a JSON string.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.update_data!-Tuple{Dict{String,#s541} where #s541,Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.update_data!","text":"recursively applies new_data to data, overwriting information\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#Internal-1","page":"PowerSystems","title":"Internal","text":"","category":"section"},{"location":"api/PowerSystems/#","page":"PowerSystems","title":"PowerSystems","text":"Modules = [PowerSystems]\nPublic = false","category":"page"},{"location":"api/PowerSystems/#PowerSystems.pm_component_status","page":"PowerSystems","title":"PowerSystems.pm_component_status","text":"maps component types to status parameters\n\n\n\n\n\n","category":"constant"},{"location":"api/PowerSystems/#PowerSystems.pm_component_status_inactive","page":"PowerSystems","title":"PowerSystems.pm_component_status_inactive","text":"maps component types to inactive status values\n\n\n\n\n\n","category":"constant"},{"location":"api/PowerSystems/#PowerSystems.PowerSystemTableData-Tuple{AbstractString,Float64,AbstractString}","page":"PowerSystems","title":"PowerSystems.PowerSystemTableData","text":" PowerSystemTableData(directory::AbstractString,\n                      basepower::Float64,\n                      user_descriptor_file::AbstractString;\n                      descriptor_file=POWER_SYSTEM_DESCRIPTOR_FILE)\n\nReads in all the data stored in csv files The general format for data is     folder:         gen.csv         branch.csv         bus.csv         ..         load.csv\n\nArguments\n\ndirectory::AbstractString: directory containing CSV files\nbasepower::Float64: base power for System\nuser_descriptor_file::AbstractString: customized input descriptor file\ndescriptor_file=POWER_SYSTEM_DESCRIPTOR_FILE: PowerSystems descriptor file\ngenerator_mapping_file=GENERATOR_MAPPING_FILE: generator mapping configuration file\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.PrimeMovers","page":"PowerSystems","title":"PowerSystems.PrimeMovers","text":"From https://www.eia.gov/survey/form/eia_923/instructions.pdf\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems.ThermalFuels","page":"PowerSystems","title":"PowerSystems.ThermalFuels","text":"AER Aggregated Fuel Code From https://www.eia.gov/survey/form/eia_923/instructions.pdf\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#PowerSystems._FieldInfo","page":"PowerSystems","title":"PowerSystems._FieldInfo","text":"Stores user-customized information for required dataframe columns.\n\n\n\n\n\n","category":"type"},{"location":"api/PowerSystems/#InfrastructureSystems.convert_type-Union{Tuple{T}, Tuple{Type{T},NamedTuple,Dict}} where T<:Service","page":"PowerSystems","title":"InfrastructureSystems.convert_type","text":"Creates a Service object by decoding the data that was in JSON. This data stores the values for the field contributingdevices as UUIDs, so this will lookup each device in devices.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#JSON2.read-Tuple{IO,Type{PowerSystems.VariableCost}}","page":"PowerSystems","title":"JSON2.read","text":"Enables deserialization of VariableCost. The default implementation can't figure out the variable Union.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._add_dcline_costs!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._add_dcline_costs!","text":"adds dcline costs, if gen costs exist\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._add_line_delimiter-Tuple{AbstractString,Any,Any}","page":"PowerSystems","title":"PowerSystems._add_line_delimiter","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._add_section_data!-Tuple{Dict,Dict,AbstractString}","page":"PowerSystems","title":"PowerSystems._add_section_data!","text":"add_section_data!(pti_data, section_data, section)\n\nInternal function. Adds section_data::Dict, which contains all parsed elements of a PTI file section given by section, into the parent pti_data::Dict\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._apply_func!-Tuple{Dict{String,#s542} where #s542,String,Any}","page":"PowerSystems","title":"PowerSystems._apply_func!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._biggest_generator-Tuple{Any}","page":"PowerSystems","title":"PowerSystems._biggest_generator","text":"find the largest active generator in the network\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._bold-Tuple{String}","page":"PowerSystems","title":"PowerSystems._bold","text":"Makes a string bold in the terminal\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._calc_branch_flow_ac-Tuple{Dict{String,#s534} where #s534}","page":"PowerSystems","title":"PowerSystems._calc_branch_flow_ac","text":"helper function for calcbranchflow_ac\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._calc_branch_flow_dc-Tuple{Dict{String,#s535} where #s535}","page":"PowerSystems","title":"PowerSystems._calc_branch_flow_dc","text":"helper function for calcbranchflow_dc\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._calc_comp_lines-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems._calc_comp_lines","text":"compute lines in m and b from from pwl cost models\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._calc_max_cost_index-Tuple{Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems._calc_max_cost_index","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._calc_power_balance-Tuple{Dict{String,#s522} where #s522}","page":"PowerSystems","title":"PowerSystems._calc_power_balance","text":"helper function for calcpowerbalance\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._check_conductors-Tuple{Dict{String,#s542} where #s542}","page":"PowerSystems","title":"PowerSystems._check_conductors","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._check_keys-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems._check_keys","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._compare_numbers-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems._compare_numbers","text":"tests if two numbers are equal, up to floating point precision\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._correct_cost_function!-Tuple{Any,Any,Any}","page":"PowerSystems","title":"PowerSystems._correct_cost_function!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._correct_reference_buses!-Tuple{Dict{String,#s531} where #s531}","page":"PowerSystems","title":"PowerSystems._correct_reference_buses!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._create_starbus_from_transformer-Tuple{Dict,Dict}","page":"PowerSystems","title":"PowerSystems._create_starbus_from_transformer","text":"create_starbus(pm_data, transformer)\n\nCreates a starbus from a given three-winding transformer. \"sourceid\" is given by `[\"busi\", \"name\", \"I\", \"J\", \"K\", \"CKT\"]` where \"bus_i\" and \"name\" are the modified names for the starbus, and \"I\", \"J\", \"K\" and \"CKT\" come from the originating transformer, in the PSS(R)E transformer specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._dfs-NTuple{4,Any}","page":"PowerSystems","title":"PowerSystems._dfs","text":"performs DFS on a graph\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._export_cost_data-Tuple{IO,Dict{Int64,Dict},String}","page":"PowerSystems","title":"PowerSystems._export_cost_data","text":"Export cost data\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._export_extra_data","page":"PowerSystems","title":"PowerSystems._export_extra_data","text":"Export fields of a component type\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems._extract_matlab_assignment-Tuple{AbstractString}","page":"PowerSystems","title":"PowerSystems._extract_matlab_assignment","text":"breaks up matlab strings of the form 'name = value;'\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._find_max_bus_id-Tuple{Dict}","page":"PowerSystems","title":"PowerSystems._find_max_bus_id","text":"_find_max_bus_id(pm_data)\n\nReturns the maximum bus id in pm_data\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._float2string-Tuple{AbstractFloat,Int64}","page":"PowerSystems","title":"PowerSystems._float2string","text":"converts a float value into a string of fixed precision\n\nsprintf would do the job but this work around is needed because sprintf cannot take format strings during runtime\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_bus_value-Tuple{Any,Any,Any}","page":"PowerSystems","title":"PowerSystems._get_bus_value","text":"_get_bus_value(bus_i, field, pm_data)\n\nReturns the value of field of bus_i from the PowerModels data. Requires \"bus\" Dict to already be populated.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_component_property-NTuple{4,Any}","page":"PowerSystems","title":"PowerSystems._get_component_property","text":"_get_component_property(section, ret, search_field, search_value)\n\nInternal function. Finds a component in section where search_field == search_value and returns ret from that component.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_default","page":"PowerSystems","title":"PowerSystems._get_default","text":"Get a default value for dict entry \n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems._get_line_elements-Tuple{AbstractString}","page":"PowerSystems","title":"PowerSystems._get_line_elements","text":"_get_line_elements(line)\n\nInternal function. Uses regular expressions to extract all separate data elements from a line of a PTI file and populate them into an Array{String}. Comments, typically indicated at the end of a line with a '/' character, are also extracted separately, and Array{Array{String}, String} is returned.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_pti_default-Tuple{AbstractString,AbstractString,Dict,Dict}","page":"PowerSystems","title":"PowerSystems._get_pti_default","text":"_get_pti_default(section, field, data, component)\n\nInternal function. Returns a default value in section for field in component from data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_pti_dtypes-Tuple{AbstractString}","page":"PowerSystems","title":"PowerSystems._get_pti_dtypes","text":"_get_pti_dtypes(field_name)\n\nInternal function. Returns array of data types for PTI file section given by field_name, as enumerated by PSS/E Program Operation Manual.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._get_pti_sections-Tuple{}","page":"PowerSystems","title":"PowerSystems._get_pti_sections","text":"getpti_sections()\n\nInternal function. Returns Array of the names of the sections, in the order that they appear in a PTI file, v33\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._grey-Tuple{String}","page":"PowerSystems","title":"PowerSystems._grey","text":"Makes a string grey in the terminal, does not seem to work well on Windows terminals more info can be found at https://en.wikipedia.org/wiki/ANSIescapecode\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._import_remaining!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._import_remaining!","text":"Imports remaining keys from data_in into data_out, excluding keys in exclude\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._init_bus!-Tuple{Dict{String,Any},Int64}","page":"PowerSystems","title":"PowerSystems._init_bus!","text":"_init_bus!(bus, id)\n\nInitializes a bus of id id with default values given in the PSS(R)E specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._make_mixed_units!-Tuple{Dict{String,#s527} where #s527,Real}","page":"PowerSystems","title":"PowerSystems._make_mixed_units!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._make_per_unit!-Tuple{Dict{String,#s527} where #s527,Real}","page":"PowerSystems","title":"PowerSystems._make_per_unit!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._matpower_to_powermodels!-Tuple{Dict{String,#s131} where #s131}","page":"PowerSystems","title":"PowerSystems._matpower_to_powermodels!","text":"Converts a Matpower dict into a PowerModels dict\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._merge_bus_name_data!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._merge_bus_name_data!","text":"merges bus name data into buses, if names exist\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._merge_generator_cost_data!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._merge_generator_cost_data!","text":"merges generator cost functions into generator data, if costs exist\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._merge_generic_data!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._merge_generic_data!","text":"merges Matpower tables based on the table extension syntax\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._mp2pm_branch!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._mp2pm_branch!","text":"sets all branch transformer taps to 1.0, to simplify branch models\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._mp2pm_dcline!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._mp2pm_dcline!","text":"adds pmin and pmax values at to and from buses\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._mp_cost_data-Tuple{Any}","page":"PowerSystems","title":"PowerSystems._mp_cost_data","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_line_element!-Tuple{Dict,Array,AbstractString}","page":"PowerSystems","title":"PowerSystems._parse_line_element!","text":"parseline_element!(data, elements, section)\n\nInternal function. Parses a single \"line\" of data elements from a PTI file, as given by elements which is an array of the line, typically split at ,. Elements are parsed into data types given by section and saved into data::Dict.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_matlab_cells-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems._parse_matlab_cells","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_matlab_data-NTuple{4,Any}","page":"PowerSystems","title":"PowerSystems._parse_matlab_data","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_matlab_matrix-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems._parse_matlab_matrix","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_matpower_string-Tuple{String}","page":"PowerSystems","title":"PowerSystems._parse_matpower_string","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._parse_pti_data-Tuple{IO,Array}","page":"PowerSystems","title":"PowerSystems._parse_pti_data","text":"_parse_pti_data(data_string, sections)\n\nInternal function. Parse a PTI raw file into a Dict, given the data_string of the file and a list of the sections in the PTI file (typically given by default by get_pti_sections().\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._populate_defaults!-Tuple{Dict}","page":"PowerSystems","title":"PowerSystems._populate_defaults!","text":"_populate_defaults!(pti_data)\n\nInternal function. Populates empty fields with PSS(R)E PTI v33 default values\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._propagate_topology_status!-Tuple{Dict{String,#s478} where #s478}","page":"PowerSystems","title":"PowerSystems._propagate_topology_status!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_branch!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_branch!","text":"_psse2pm_branch!(pm_data, pti_data)\n\nParses PSS(R)E-style Branch data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"J\", \"CKT\"] in PSS(R)E Branch specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_bus!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_bus!","text":"_psse2pm_bus!(pm_data, pti_data)\n\nParses PSS(R)E-style Bus data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"NAME\"] in PSS(R)E Bus specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_dcline!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_dcline!","text":"_psse2pm_dcline!(pm_data, pti_data)\n\nParses PSS(R)E-style Two-Terminal and VSC DC Lines data into a PowerModels compatible Dict structure by first converting them to a simple DC Line Model. For Two-Terminal DC lines, \"sourceid\" is given by [\"IPR\", \"IPI\", \"NAME\"] in the PSS(R)E Two-Terminal DC specification. For Voltage Source Converters, \"sourceid\" is given by [\"IBUS1\", \"IBUS2\", \"NAME\"], where \"IBUS1\" is \"IBUS\" of the first converter bus, and \"IBUS2\" is the \"IBUS\" of the second converter bus, in the PSS(R)E Voltage Source Converter specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_generator!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_generator!","text":"_psse2pm_generator!(pm_data, pti_data)\n\nParses PSS(R)E-style Generator data in a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] in PSS(R)E Generator specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_load!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_load!","text":"_psse2pm_load!(pm_data, pti_data)\n\nParses PSS(R)E-style Load data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] in the PSS(R)E Load specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_shunt!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_shunt!","text":"_psse2pm_shunt!(pm_data, pti_data)\n\nParses PSS(R)E-style Fixed and Switched Shunt data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"ID\"] for Fixed Shunts, and [\"I\", \"SWREM\"] for Switched Shunts, as given by the PSS(R)E Fixed and Switched Shunts specifications.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._psse2pm_transformer!-Tuple{Dict,Dict,Bool}","page":"PowerSystems","title":"PowerSystems._psse2pm_transformer!","text":"_psse2pm_transformer!(pm_data, pti_data)\n\nParses PSS(R)E-style Transformer data into a PowerModels-style Dict. \"source_id\" is given by [\"I\", \"J\", \"K\", \"CKT\", \"winding\"], where \"winding\" is 0 if transformer is two-winding, and 1, 2, or 3 for three-winding, and the remaining keys are defined in the PSS(R)E Transformer specification.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._pti_to_powermodels!-Tuple{Dict}","page":"PowerSystems","title":"PowerSystems._pti_to_powermodels!","text":"_pti_to_powermodels!(pti_data)\n\nConverts PSS(R)E-style data parsed from a PTI raw file, passed by pti_data into a format suitable for use internally in PowerModels. Imports all remaining data from the PTI file if import_all is true (Default: false).\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._read_data_row-Tuple{PowerSystems.PowerSystemTableData,Any,Any}","page":"PowerSystems","title":"PowerSystems._read_data_row","text":"Reads values from dataframe row and performs necessary conversions.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._remove_pwl_cost_duplicates!","page":"PowerSystems","title":"PowerSystems._remove_pwl_cost_duplicates!","text":"checks that each point in the a pwl function is unqiue, simplifies the function if duplicates appear\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems._rescale_cost_model!-Tuple{Dict{String,#s539} where #s539,Real}","page":"PowerSystems","title":"PowerSystems._rescale_cost_model!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._select_largest_component!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems._select_largest_component!","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._simplify_pwl_cost!","page":"PowerSystems","title":"PowerSystems._simplify_pwl_cost!","text":"checks the slope of each segment in a pwl function, simplifies the function if the slope changes is below a tolerance\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems._split_loads_shunts!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems._split_loads_shunts!","text":"_split_loads_shunts!(data)\n\nSeperates Loads and Shunts in data under separate \"load\" and \"shunt\" keys in the PowerModels data format. Includes references to originating bus via \"loadbus\" and \"shuntbus\" keys, respectively.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._standardize_cost_terms!-Tuple{Dict{String,#s539} where #s539,Int64,String}","page":"PowerSystems","title":"PowerSystems._standardize_cost_terms!","text":"ensures all polynomial costs functions have at exactly comp_order terms\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._type_array-Union{Tuple{Array{T,1}}, Tuple{T}} where T<:AbstractString","page":"PowerSystems","title":"PowerSystems._type_array","text":"Attempts to determine the type of an array of strings extracted from a matlab file\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._type_value-Tuple{AbstractString}","page":"PowerSystems","title":"PowerSystems._type_value","text":"Attempts to determine the type of a string extracted from a matlab file\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._update_data!-Tuple{Dict{String,#s539} where #s539,Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems._update_data!","text":"recursive call of updatedata\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems._value2string-Tuple{Any,Int64}","page":"PowerSystems","title":"PowerSystems._value2string","text":"converts any value to a string, summarizes arrays and dicts\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.arrays_to_dicts!-Tuple{Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems.arrays_to_dicts!","text":"turns top level arrays into dicts\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.branch_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.branch_csv_parser!","text":"branch_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd branches to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.bus_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.bus_csv_parser!","text":"bus_csv_parser!(sys::System, bus_raw::DataFrames.DataFrame)\n\nAdd buses to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.bus_gen_lookup-Tuple{Dict{String,#s537} where #s537,Dict{String,#s536} where #s536}","page":"PowerSystems","title":"PowerSystems.bus_gen_lookup","text":"builds a lookup list of what generators are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.bus_load_lookup-Tuple{Dict{String,#s537} where #s537,Dict{String,#s536} where #s536}","page":"PowerSystems","title":"PowerSystems.bus_load_lookup","text":"builds a lookup list of what loads are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.bus_shunt_lookup-Tuple{Dict{String,#s537} where #s537,Dict{String,#s536} where #s536}","page":"PowerSystems","title":"PowerSystems.bus_shunt_lookup","text":"builds a lookup list of what shunts are connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.bus_storage_lookup-Tuple{Dict{String,#s537} where #s537,Dict{String,#s536} where #s536}","page":"PowerSystems","title":"PowerSystems.bus_storage_lookup","text":"builds a lookup list of what storage is connected to a given bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_branch_flow_ac-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.calc_branch_flow_ac","text":"assumes a vaild ac solution is included in the data and computes the branch flow values\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_branch_flow_dc-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.calc_branch_flow_dc","text":"assumes a vaild dc solution is included in the data and computes the branch flow values\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_branch_t-Tuple{Dict{String,#s542} where #s542}","page":"PowerSystems","title":"PowerSystems.calc_branch_t","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_branch_y-Tuple{Dict{String,#s542} where #s542}","page":"PowerSystems","title":"PowerSystems.calc_branch_y","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_connected_components-Tuple{Dict{String,#s534} where #s534}","page":"PowerSystems","title":"PowerSystems.calc_connected_components","text":"computes the connected components of the network graph returns a set of sets of bus ids, each set is a connected component\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_cost_pwl_lines-Tuple{Dict}","page":"PowerSystems","title":"PowerSystems.calc_cost_pwl_lines","text":"compute lines in m and b from from pwl cost models data is a list of components.\n\nCan be run on data or ref data structures\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_dcline_cost-Tuple{Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems.calc_dcline_cost","text":"computes the dcline cost from given network data\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_gen_cost-Tuple{Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems.calc_gen_cost","text":"computes the generator cost from given network data\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_max_cost_index-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.calc_max_cost_index","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_power_balance-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.calc_power_balance","text":"assumes a vaild solution is included in the data and computes the power balance at each bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.calc_theta_delta_bounds-Tuple{Dict{String,#s541} where #s541}","page":"PowerSystems","title":"PowerSystems.calc_theta_delta_bounds","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_ascending_order-Tuple{Array{Int64,N} where N,AbstractString}","page":"PowerSystems","title":"PowerSystems.check_ascending_order","text":"Throws DataFormatError if the array is not in ascending order.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_branch_loops-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.check_branch_loops","text":"checks that all branches connect two distinct buses\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_bus-Tuple{System,Bus,Component}","page":"PowerSystems","title":"PowerSystems.check_bus","text":"Throws ArgumentError if the bus is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_conductors-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.check_conductors","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_connectivity-Tuple{Dict{String,#s526} where #s526}","page":"PowerSystems","title":"PowerSystems.check_connectivity","text":"checks that all buses are unique and other components link to valid buses\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_reference_bus-Tuple{Dict{String,#s539} where #s539}","page":"PowerSystems","title":"PowerSystems.check_reference_bus","text":"checks that contains at least one refrence bus\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_reference_buses-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.check_reference_buses","text":"checks that each connected components has a reference bus, if not, adds one\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_status-Tuple{Dict{String,#s526} where #s526}","page":"PowerSystems","title":"PowerSystems.check_status","text":"checks that active components are not connected to inactive buses, otherwise prints warnings\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_storage_parameters-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.check_storage_parameters","text":"checks that each storage unit has a reasonable parameters\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_switch_parameters-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.check_switch_parameters","text":"checks that each switch has a reasonable parameters\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_type-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems.check_type","text":"Checks if the given value is of a given type, if not tries to make it that type\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.check_voltage_setpoints-Tuple{Dict{String,#s537} where #s537}","page":"PowerSystems","title":"PowerSystems.check_voltage_setpoints","text":"throws warnings if generator and dc line voltage setpoints are not consistent with the bus voltage setpoint\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.compare_dict-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems.compare_dict","text":"tests if two dicts are equal, up to floating point precision\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_branch_directions!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.correct_branch_directions!","text":"checks that all parallel branches have the same orientation\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_bus_types!-Tuple{Dict{String,#s536} where #s536}","page":"PowerSystems","title":"PowerSystems.correct_bus_types!","text":"checks bus types are consistent with generator connections, if not, fixes them\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_component_refrence_bus!-Tuple{Any,Any,Any}","page":"PowerSystems","title":"PowerSystems.correct_component_refrence_bus!","text":"checks that a connected component has a reference bus, if not, adds one\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_cost_functions!-Tuple{Dict{String,#s538} where #s538}","page":"PowerSystems","title":"PowerSystems.correct_cost_functions!","text":"throws warnings if cost functions are malformed\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_current_limits!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.correct_current_limits!","text":"checks that each branch has a reasonable current rating-a, if not computes one\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_dcline_limits!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.correct_dcline_limits!","text":"checks that parameters for dc lines are reasonable\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_network_data!-Tuple{Dict{String,#s541} where #s541}","page":"PowerSystems","title":"PowerSystems.correct_network_data!","text":"Runs various data quality checks on a PowerModels data dictionary. Applies modifications in some cases.  Reports modified component ids.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_thermal_limits!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.correct_thermal_limits!","text":"checks that each branch has a reasonable thermal rating-a, if not computes one\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_transformer_parameters!-Tuple{Dict{String,#s539} where #s539}","page":"PowerSystems","title":"PowerSystems.correct_transformer_parameters!","text":"checks that each branch has a reasonable transformer parameters\n\nthis is important because setting tap == 0.0 leads to NaN computations, which are hard to debug\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.correct_voltage_angle_differences!","page":"PowerSystems","title":"PowerSystems.correct_voltage_angle_differences!","text":"checks that voltage angle differences are within 90 deg., if not tightens\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems.dc_branch_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.dc_branch_csv_parser!","text":"dc_branch_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd DC branches to the System from raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.encode_for_json-Union{Tuple{T}, Tuple{T}} where T<:Component","page":"PowerSystems","title":"PowerSystems.encode_for_json","text":"Encode composite buses as UUIDs.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.export_matpower-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.export_matpower","text":"Export power network data in the matpower format\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.export_matpower-Tuple{IO,Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.export_matpower","text":"Export power network data in the matpower format\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.flow_val-Tuple{Line}","page":"PowerSystems","title":"PowerSystems.flow_val","text":"flow_val(b::TapTransformer)\n\nCalculates the From - To complex power flow (Flow injected at the bus) of branch of type Line\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.flow_val-Tuple{TapTransformer}","page":"PowerSystems","title":"PowerSystems.flow_val","text":"flow_val(b::TapTransformer)\n\nCalculates the From - To comp[lex power flow (Flow injected at the bus) of branch of type TapTransformer\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.flow_val-Tuple{Transformer2W}","page":"PowerSystems","title":"PowerSystems.flow_val","text":"flow_val(b::TapTransformer)\n\nCalculates the From - To complex power flow (Flow injected at the bus) of branch of type Transformer2W\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.gen_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.gen_csv_parser!","text":"gen_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd generators to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_dataframe-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory}","page":"PowerSystems","title":"PowerSystems.get_dataframe","text":"Return the dataframe for the category.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_enum_value-Tuple{Any,String}","page":"PowerSystems","title":"PowerSystems.get_enum_value","text":"Get the enum value for the string. Case insensitive.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_generator_mapping","page":"PowerSystems","title":"PowerSystems.get_generator_mapping","text":"Return a dict where keys are a tuple of input parameters (fuel, unit_type) and values are generator types.\n\n\n\n\n\n","category":"function"},{"location":"api/PowerSystems/#PowerSystems.get_generator_type-Tuple{Any,Any,Dict{NamedTuple,DataType}}","page":"PowerSystems","title":"PowerSystems.get_generator_type","text":"Return the PowerSystems generator type for this fuel and unit_type.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_user_field-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory,AbstractString}","page":"PowerSystems","title":"PowerSystems.get_user_field","text":"Return the custom name stored in the user descriptor file.\n\nThrows DataFormatError if a required value is not found in the file.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.get_user_fields-Tuple{PowerSystems.PowerSystemTableData,PowerSystems.InputCategory}","page":"PowerSystems","title":"PowerSystems.get_user_fields","text":"Return a vector of user-defined fields for the category.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.im_replicate-Tuple{Dict{String,#s540} where #s540,Int64,Set{String}}","page":"PowerSystems","title":"PowerSystems.im_replicate","text":"Transforms a single network into a multinetwork with several deepcopies of the original network\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.isafield-Tuple{Component,Symbol}","page":"PowerSystems","title":"PowerSystems.isafield","text":"Checks if a PowerSystemDevice has a field or subfield name.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.ismultinetwork-Tuple{Dict{String,#s542} where #s542}","page":"PowerSystems","title":"PowerSystems.ismultinetwork","text":"checks if a given network data is a multinetwork\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.iterate_rows-Tuple{PowerSystems.PowerSystemTableData,Any}","page":"PowerSystems","title":"PowerSystems.iterate_rows","text":"iterate_rows(data::PowerSystemTableData, category; na_to_nothing=true)\n\nReturn a NamedTuple of parameters from the descriptor file for each row of a dataframe, making type conversions as necessary.\n\nRefer to the PowerSystems descriptor file for field names that will be created.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.load_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.load_csv_parser!","text":"load_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd loads to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.loadzone_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.loadzone_csv_parser!","text":"loadzone_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd branches to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_bus-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.make_bus","text":"Creates a PowerSystems.Bus from a PowerSystems bus dictionary\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_generator-Tuple{PowerSystems.PowerSystemTableData,Any,Any,Any}","page":"PowerSystems","title":"PowerSystems.make_generator","text":"Creates a generator of any type.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_mixed_units!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.make_mixed_units!","text":"Transforms network data into mixed-units (inverse of per-unit)\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_per_unit!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.make_per_unit!","text":"Transforms network data into per-unit\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.make_thermal_gen-Tuple{AbstractString,Dict,Bus}","page":"PowerSystems","title":"PowerSystems.make_thermal_gen","text":"The polynomial term follows the convention that for an n-degree polynomial, at least n + 1 components are needed.     c(p) = cn*p^n+...+c1p+c0     co is stored in the  field in of the Econ Struct\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.move_genfuel_and_gentype!-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.move_genfuel_and_gentype!","text":"Move gentype and genfuel fields to be subfields of gen\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_matpower-Tuple{IO}","page":"PowerSystems","title":"PowerSystems.parse_matpower","text":"Parses the matpwer data from either a filename or an IO object\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_psse-Tuple{IO}","page":"PowerSystems","title":"PowerSystems.parse_psse","text":"Parses directly from iostream\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_psse-Tuple{String}","page":"PowerSystems","title":"PowerSystems.parse_psse","text":"Parses directly from file\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_pti-Tuple{IO}","page":"PowerSystems","title":"PowerSystems.parse_pti","text":"parse_pti(io::IO)\n\nReads PTI data in io::IO, returning a Dict of the data parsed into the proper types.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.parse_pti-Tuple{String}","page":"PowerSystems","title":"PowerSystems.parse_pti","text":"parse_pti(filename::String)\n\nOpen PTI raw file given by filename, returning a Dict of the data parsed into the proper types.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.pm2ps_dict-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.pm2ps_dict","text":"Converts a dictionary parsed by PowerModels to a System. Currently Supports MATPOWER and PSSE data files parsed by PowerModels.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.propagate_topology_status!-Tuple{Dict{String,#s540} where #s540}","page":"PowerSystems","title":"PowerSystems.propagate_topology_status!","text":"finds active network buses and branches that are not necessary for the computation and sets their status to off.\n\nWorks on a PowerModels data dict, so that a it can be used without a GenericPowerModel object\n\nWarning: this implementation has quadratic complexity, in the worst case\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.read_gen!-Tuple{System,Any,Dict{Int64,Bus}}","page":"PowerSystems","title":"PowerSystems.read_gen!","text":"Transfer generators to ps_dict according to their classification\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.replicate-Tuple{Dict{String,#s539} where #s539,Int64}","page":"PowerSystems","title":"PowerSystems.replicate","text":"Turns in given single network data in multinetwork data with a count replicate of the given network.  Note that this function performs a deepcopy of the network data.  Significant multinetwork space savings can often be achieved by building application specific methods of building multinetwork with minimal data replication.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.row_to_dict-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems.row_to_dict","text":"takes a row from a matrix and assigns the values names\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.row_to_typed_dict-Tuple{Any,Any}","page":"PowerSystems","title":"PowerSystems.row_to_typed_dict","text":"takes a row from a matrix and assigns the values names and types\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.select_largest_component-Tuple{Dict{String,Any}}","page":"PowerSystems","title":"PowerSystems.select_largest_component","text":"determines the largest connected component of the network and turns everything else off\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.services_csv_parser!-Tuple{System,PowerSystems.PowerSystemTableData}","page":"PowerSystems","title":"PowerSystems.services_csv_parser!","text":"services_csv_parser!(sys::System, data::PowerSystemTableData)\n\nAdd services to the System from the raw data.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.simplify_cost_terms!-Tuple{Dict{String,#s534} where #s534}","page":"PowerSystems","title":"PowerSystems.simplify_cost_terms!","text":"trims zeros from higher order cost terms\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.split_line-Tuple{AbstractString}","page":"PowerSystems","title":"PowerSystems.split_line","text":"\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.standardize_cost_terms!-Tuple{Dict{String,#s529} where #s529}","page":"PowerSystems","title":"PowerSystems.standardize_cost_terms!","text":"ensures all polynomial costs functions have the same number of terms\n\n\n\n\n\n","category":"method"},{"location":"api/PowerSystems/#PowerSystems.validate_struct-Tuple{System,PowerSystemType}","page":"PowerSystems","title":"PowerSystems.validate_struct","text":"validate_struct(sys::System, value::PowerSystemType)\n\nValidates an instance of a PowerSystemType against System data. Returns true if the instance is valid.\n\nUsers implementing this function for custom types should consider implementing InfrastructureSystems.validate_struct instead if the validation logic only requires data contained within the instance.\n\n\n\n\n\n","category":"method"},{"location":"#PowerSystems.jl-1","page":"Home","title":"PowerSystems.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"PowerSystems.jl is a Julia package for doing Power Systems Modeling.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"For more detailed documentation of each object in the library, see the API/PowerSystems page.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This package is not yet registered. Until it is, things may change. It is perfectly usable but should not be considered stable.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"You can install it by typing","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> Pkg.clone(\"https://github.com/NREL/PowerSystems.jl.git\")","category":"page"},{"location":"#Usage-1","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Once installed, the PowerSystems package can by used by typing","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using PowerSystems","category":"page"},{"location":"#Contents-1","page":"Home","title":"Contents","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n  \"man/data_requirements_table.md\",\n  \"man/data.md\",\n  \"man/guide.md\",\n  \"man/logging.md\",\n  \"man/tests.md\"\n]","category":"page"},{"location":"docs/#Documentation-1","page":"Documentation","title":"Documentation","text":"","category":"section"},{"location":"docs/#Requirements-1","page":"Documentation","title":"Requirements","text":"","category":"section"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"Pkg.add(\"Documenter\")","category":"page"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"pip install ghp-import","category":"page"},{"location":"docs/#Run-1","page":"Documentation","title":"Run","text":"","category":"section"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"cd docs\nmake html\nopen build/index.html","category":"page"},{"location":"man/data/#Saving-and-Viewing-PowerSystems-Data-1","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"PowerSystems data can be serialized and deserialized in JSON.","category":"page"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"PowerSystems.to_json(system, \"system.json\")\nsystem = System(\"system.json\")","category":"page"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"It can be useful to view and filter the PowerSystems data in this format. There are many tools available to browse JSON data.","category":"page"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"Here is an example GUI tool that is available online in a browser.","category":"page"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"The command line utility jq offers even more features. The rest of this document provides example commands.","category":"page"},{"location":"man/data/#View-the-entire-file-pretty-printed.-1","page":"Saving and Viewing PowerSystems Data","title":"View the entire file pretty-printed.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq . system.json","category":"page"},{"location":"man/data/#View-the-PowerSystems-component-hierarchy.-1","page":"Saving and Viewing PowerSystems Data","title":"View the PowerSystems component hierarchy.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.components | keys' system.json\njq '.components.Devices | keys' system.json\njq '.components.Devices.Injection | keys' system.json\njq '.components.Devices.Injection.Generator | keys' system.json","category":"page"},{"location":"man/data/#View-specific-components.-1","page":"Saving and Viewing PowerSystems Data","title":"View specific components.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.components.Device.Injection.Generator.ThermalGen.ThermalStandard' system.json\njq '.components.Device.Injection.Generator.ThermalGen.ThermalStandard[0]' system.json","category":"page"},{"location":"man/data/#Filter-on-a-parameter.-1","page":"Saving and Viewing PowerSystems Data","title":"Filter on a parameter.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.components.Device.Injection.Generator.ThermalGen.ThermalStandard | .[] | select(.name == \"107_CC_1\")' system.json\njq '.components.Device.Injection.Generator.ThermalGen.ThermalStandard | .[] | select(.op_cost.capacity > 3)' system.json","category":"page"},{"location":"man/data/#Output-a-table-with-select-fields.-1","page":"Saving and Viewing PowerSystems Data","title":"Output a table with select fields.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq -r '[\"name\", \"econ.capacity\"], (.components.Device.Injection.Generator.ThermalGen.ThermalStandard | .[] | [.name, .op_cost.capacity]) | @tsv' system.json","category":"page"},{"location":"man/data/#View-the-forecast-types-and-initial_time-values.-1","page":"Saving and Viewing PowerSystems Data","title":"View the forecast types and initial_time values.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.forecasts.data | keys' system.json","category":"page"},{"location":"man/data/#View-the-fields-of-a-forecast.-1","page":"Saving and Viewing PowerSystems Data","title":"View the fields of a forecast.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.forecasts.data[\"PowerSystems.ForecastKey(2020-01-01T00:00:00, Deterministic{Bus})\"][0] | keys'","category":"page"},{"location":"man/data/#View-the-value-of-every-field-in-an-array-of-forecasts.-1","page":"Saving and Viewing PowerSystems Data","title":"View the value of every field in an array of forecasts.","text":"","category":"section"},{"location":"man/data/#","page":"Saving and Viewing PowerSystems Data","title":"Saving and Viewing PowerSystems Data","text":"jq '.forecasts.data[\"PowerSystems.ForecastKey(2020-01-01T00:00:00, Deterministic{Bus})\"] | .[].initial_time'","category":"page"}]
}
